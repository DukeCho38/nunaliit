{"map":"{\"version\":3,\"sources\":[\"webpack/universalModuleDefinition\",\"webpack/bootstrap\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/util.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/events.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/extent/Corner.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/extent/Relationship.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/extent.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/GeometryType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/math.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/obj.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/asserts.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/Units.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/Disposable.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/events/Target.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/Observable.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/Object.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/functions.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/events/EventType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/events/Event.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/sphere.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/Projection.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/epsg3857.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/epsg4326.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/projections.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj/transforms.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/proj.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/AssertionError.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/ObjectEventType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/string.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/coordinate.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/Feature.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/flat/transform.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/transform.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/Geometry.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/GeometryLayout.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/SimpleGeometry.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/Point.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/geom/flat/deflate.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/dist/n2es6/ol5support/N2Cluster.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/rbush/index.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/dist/index.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/quickselect/quickselect.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/CollectionEventType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/Collection.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/format/FormatType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/featureloader.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/loadingstrategy.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/source/State.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/source/Source.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/source/VectorEventType.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/structs/RBush.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/source/Vector.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/source/Cluster.js\",\"/home/dzhang/selfdev/nunaliit/nunaliit/nunaliit2-js-external/src/main/js/js-external/nunaliit-es6/node_modules/ol/array.js\"],\"names\":[\"root\",\"factory\",\"exports\",\"module\",\"define\",\"amd\",\"window\",\"installedModules\",\"__webpack_require__\",\"moduleId\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"abstract\",\"Error\",\"inherits\",\"childCtor\",\"parentCtor\",\"constructor\",\"__webpack_exports__\",\"getUid\",\"VERSION\",\"uidCounter_\",\"obj\",\"ol_uid\",\"String\",\"listen\",\"listenOnce\",\"unlisten\",\"unlistenByKey\",\"unlistenAll\",\"_obj_js__WEBPACK_IMPORTED_MODULE_0__\",\"findListener\",\"listeners\",\"listener\",\"opt_this\",\"opt_setDeleteIndex\",\"listenerObj\",\"ii\",\"length\",\"bindTo\",\"deleteIndex\",\"getListeners\",\"target\",\"type\",\"listenerMap\",\"getListenerMap\",\"undefined\",\"opt_create\",\"ol_lm\",\"removeListeners\",\"removeEventListener\",\"boundListener\",\"keys\",\"removeListenerMap\",\"opt_once\",\"callOnce\",\"addEventListener\",\"evt\",\"bindListener\",\"push\",\"indexOf\",\"splice\",\"Corner\",\"BOTTOM_LEFT\",\"BOTTOM_RIGHT\",\"TOP_LEFT\",\"TOP_RIGHT\",\"Relationship\",\"UNKNOWN\",\"INTERSECTING\",\"ABOVE\",\"RIGHT\",\"BELOW\",\"LEFT\",\"boundingExtent\",\"coordinates\",\"extent\",\"createEmpty\",\"extendCoordinate\",\"buffer\",\"opt_extent\",\"clone\",\"slice\",\"closestSquaredDistanceXY\",\"x\",\"y\",\"dx\",\"dy\",\"containsCoordinate\",\"coordinate\",\"containsXY\",\"containsExtent\",\"extent1\",\"extent2\",\"coordinateRelationship\",\"minX\",\"minY\",\"maxX\",\"maxY\",\"relationship\",\"Infinity\",\"createOrUpdate\",\"createOrUpdateEmpty\",\"createOrUpdateFromCoordinate\",\"createOrUpdateFromCoordinates\",\"extendCoordinates\",\"createOrUpdateFromFlatCoordinates\",\"flatCoordinates\",\"offset\",\"end\",\"stride\",\"extendFlatCoordinates\",\"createOrUpdateFromRings\",\"rings\",\"extendRings\",\"equals\",\"extend\",\"extendXY\",\"Math\",\"min\",\"max\",\"forEachCorner\",\"callback\",\"val\",\"getBottomLeft\",\"getBottomRight\",\"getTopRight\",\"getTopLeft\",\"getArea\",\"area\",\"isEmpty\",\"getWidth\",\"getHeight\",\"getCenter\",\"getCorner\",\"corner\",\"asserts\",\"getEnlargedArea\",\"getForViewAndSize\",\"center\",\"resolution\",\"rotation\",\"size\",\"cosRotation\",\"cos\",\"sinRotation\",\"sin\",\"xCos\",\"xSin\",\"yCos\",\"ySin\",\"x0\",\"x1\",\"x2\",\"x3\",\"y0\",\"y1\",\"y2\",\"y3\",\"getIntersectionArea\",\"getIntersection\",\"intersection\",\"extent_intersects\",\"getMargin\",\"getSize\",\"returnOrUpdate\",\"scaleFromCenter\",\"deltaX\",\"deltaY\",\"intersectsSegment\",\"start\",\"intersects\",\"startRel\",\"endRel\",\"startX\",\"startY\",\"endX\",\"endY\",\"slope\",\"applyTransform\",\"transformFn\",\"xs\",\"ys\",\"apply\",\"_boundingExtentXYs\",\"POINT\",\"LINE_STRING\",\"LINEAR_RING\",\"POLYGON\",\"MULTI_POINT\",\"MULTI_LINE_STRING\",\"MULTI_POLYGON\",\"GEOMETRY_COLLECTION\",\"CIRCLE\",\"cosh\",\"squaredDistance\",\"toDegrees\",\"toRadians\",\"modulo\",\"exp\",\"angleInRadians\",\"PI\",\"angleInDegrees\",\"a\",\"b\",\"assign\",\"clear\",\"getValues\",\"var_sources\",\"arguments$1\",\"arguments\",\"TypeError\",\"output\",\"source\",\"values\",\"assert\",\"_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__\",\"assertion\",\"errorCode\",\"METERS_PER_UNIT\",\"Units\",\"DEGREES\",\"FEET\",\"METERS\",\"PIXELS\",\"TILE_PIXELS\",\"USFEET\",\"Disposable_Disposable\",\"this\",\"disposed_\",\"dispose\",\"disposeInternal\",\"ol_Disposable\",\"events_Target\",\"Disposable\",\"Target\",\"pendingRemovals_\",\"dispatching_\",\"listeners_\",\"__proto__\",\"dispatchEvent\",\"event\",\"Event\",\"propagate\",\"propagationStopped\",\"pendingRemovals\",\"functions\",\"events\",\"hasListener\",\"opt_type\",\"index\",\"ol_Observable\",\"EventTarget\",\"Observable\",\"revision_\",\"changed\",\"EventType\",\"CHANGE\",\"getRevision\",\"on\",\"Array\",\"isArray\",\"len\",\"once\",\"un\",\"getChangeEventType\",\"ObjectEvent\",\"oldValue\",\"Object_BaseObject\",\"BaseObject\",\"opt_values\",\"util\",\"values_\",\"setProperties\",\"getKeys\",\"getProperties\",\"notify\",\"eventType\",\"ObjectEventType\",\"PROPERTYCHANGE\",\"set\",\"opt_silent\",\"unset\",\"changeEventTypeCache\",\"TRUE\",\"VOID\",\"CLEAR\",\"CONTEXTMENU\",\"CLICK\",\"DBLCLICK\",\"DRAGENTER\",\"DRAGOVER\",\"DROP\",\"ERROR\",\"KEYDOWN\",\"KEYPRESS\",\"LOAD\",\"MOUSEDOWN\",\"MOUSEMOVE\",\"MOUSEOUT\",\"MOUSEUP\",\"MOUSEWHEEL\",\"MSPOINTERDOWN\",\"RESIZE\",\"TOUCHSTART\",\"TOUCHMOVE\",\"TOUCHEND\",\"WHEEL\",\"preventDefault\",\"stopPropagation\",\"DEFAULT_RADIUS\",\"getDistance\",\"c1\",\"c2\",\"opt_radius\",\"radius\",\"lat1\",\"math\",\"lat2\",\"deltaLatBy2\",\"deltaLonBy2\",\"atan2\",\"sqrt\",\"Projection_Projection\",\"options\",\"code_\",\"code\",\"units_\",\"extent_\",\"worldExtent_\",\"worldExtent\",\"axisOrientation_\",\"axisOrientation\",\"global_\",\"global\",\"canWrapX_\",\"getPointResolutionFunc_\",\"getPointResolution\",\"defaultTileGrid_\",\"metersPerUnit_\",\"metersPerUnit\",\"canWrapX\",\"getCode\",\"getExtent\",\"getUnits\",\"getMetersPerUnit\",\"getWorldExtent\",\"getAxisOrientation\",\"isGlobal\",\"setGlobal\",\"getDefaultTileGrid\",\"setDefaultTileGrid\",\"tileGrid\",\"setExtent\",\"setWorldExtent\",\"setGetPointResolution\",\"func\",\"getPointResolutionFunc\",\"proj_Projection\",\"RADIUS\",\"HALF_SIZE\",\"EXTENT\",\"WORLD_EXTENT\",\"epsg3857_EPSG3857Projection\",\"Projection\",\"EPSG3857Projection\",\"units\",\"point\",\"PROJECTIONS\",\"fromEPSG4326\",\"input\",\"opt_output\",\"opt_dimension\",\"dimension\",\"halfSize\",\"log\",\"tan\",\"epsg3857_toEPSG4326\",\"atan\",\"epsg4326_EXTENT\",\"epsg4326_EPSG4326Projection\",\"EPSG4326Projection\",\"opt_axisOrientation\",\"epsg4326_PROJECTIONS\",\"cache\",\"transforms\",\"transforms_add\",\"destination\",\"sourceCode\",\"destinationCode\",\"cloneTransform\",\"identityTransform\",\"addProjection\",\"projection\",\"add\",\"addProjections\",\"projections\",\"forEach\",\"proj_get\",\"projectionLike\",\"opt_units\",\"pointResolution\",\"toEPSG4326\",\"getTransformFromProjections\",\"vertices\",\"addEquivalentProjections\",\"addEquivalentTransforms\",\"projections1\",\"projections2\",\"forwardTransform\",\"inverseTransform\",\"projection1\",\"projection2\",\"clearAllProjections\",\"createProjection\",\"defaultCode\",\"createTransformFromCoordinateTransform\",\"coordTransform\",\"j\",\"addCoordinateTransforms\",\"forward\",\"inverse\",\"sourceProj\",\"destProj\",\"fromLonLat\",\"opt_projection\",\"proj_transform\",\"toLonLat\",\"lonLat\",\"lon\",\"equivalent\",\"equalUnits\",\"sourceProjection\",\"destinationProjection\",\"transformFunc\",\"transform\",\"transforms_get\",\"getTransform\",\"transformExtent\",\"ol_extent\",\"transformWithProjections\",\"addCommon\",\"_util_js__WEBPACK_IMPORTED_MODULE_0__\",\"AssertionError\",\"message\",\"split\",\"padNumber\",\"number\",\"width\",\"opt_precision\",\"numberString\",\"toFixed\",\"decimal\",\"join\",\"delta\",\"closestOnCircle\",\"circle\",\"getRadius\",\"closestOnSegment\",\"segment\",\"along\",\"createStringXY\",\"opt_fractionDigits\",\"toStringXY\",\"degreesToStringHDMS\",\"hemispheres\",\"degrees\",\"normalizedDegrees\",\"abs\",\"dflPrecision\",\"precision\",\"pow\",\"deg\",\"floor\",\"sec\",\"ceil\",\"charAt\",\"format\",\"template\",\"replace\",\"coordinate1\",\"coordinate2\",\"rotate\",\"angle\",\"cosAngle\",\"sinAngle\",\"scale\",\"coord1\",\"coord2\",\"distance\",\"squaredDistanceToSegment\",\"toStringHDMS\",\"createStyleFunction\",\"_asserts_js__WEBPACK_IMPORTED_MODULE_0__\",\"_events_js__WEBPACK_IMPORTED_MODULE_1__\",\"_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__\",\"_Object_js__WEBPACK_IMPORTED_MODULE_3__\",\"Feature\",\"opt_geometryOrProperties\",\"id_\",\"geometryName_\",\"style_\",\"styleFunction_\",\"geometryChangeKey_\",\"handleGeometryChanged_\",\"getSimplifiedGeometry\",\"geometry\",\"setGeometry\",\"properties\",\"setGeometryName\",\"getGeometryName\",\"getGeometry\",\"style\",\"getStyle\",\"setStyle\",\"getId\",\"getStyleFunction\",\"handleGeometryChange_\",\"setId\",\"id\",\"styles\",\"getZIndex\",\"transform2D\",\"opt_dest\",\"dest\",\"tmpTransform\",\"geom_Geometry\",\"Geometry\",\"extentRevision_\",\"simplifiedGeometryCache\",\"simplifiedGeometryMaxMinSquaredTolerance\",\"simplifiedGeometryRevision\",\"closestPointXY\",\"closestPoint\",\"minSquaredDistance\",\"getClosestPoint\",\"opt_closestPoint\",\"NaN\",\"intersectsCoordinate\",\"computeExtent\",\"anchor\",\"sx\",\"opt_sy\",\"opt_anchor\",\"simplify\",\"tolerance\",\"squaredTolerance\",\"getType\",\"intersectsExtent\",\"translate\",\"proj\",\"inCoordinates\",\"outCoordinates\",\"dx1\",\"dy1\",\"sy\",\"dx2\",\"dy2\",\"pixelExtent\",\"projectedExtent\",\"ol_Object\",\"GeometryLayout\",\"XY\",\"XYZ\",\"XYM\",\"XYZM\",\"getStrideForLayout\",\"layout\",\"geom_SimpleGeometry\",\"SimpleGeometry\",\"getCoordinates\",\"getFirstCoordinate\",\"getFlatCoordinates\",\"getLastCoordinate\",\"getLayout\",\"toString\",\"simplifiedGeometry\",\"getSimplifiedGeometryInternal\",\"getStride\",\"setFlatCoordinates\",\"setCoordinates\",\"opt_layout\",\"setLayout\",\"nesting\",\"getLayoutForStride\",\"anchorX\",\"anchorY\",\"k\",\"transform_rotate\",\"transform_scale\",\"transform_translate\",\"Point_Point\",\"Point\",\"GeometryType\",\"deflateCoordinate\",\"_createClass\",\"defineProperties\",\"props\",\"descriptor\",\"configurable\",\"writable\",\"Constructor\",\"protoProps\",\"staticProps\",\"_util\",\"_Cluster3\",\"_interopRequireDefault\",\"_proj\",\"_extent\",\"_Point2\",\"_Feature2\",\"_coordinate\",\"default\",\"N2Cluster\",\"_Cluster\",\"instance\",\"_classCallCheck\",\"_this\",\"self\",\"ReferenceError\",\"_possibleConstructorReturn\",\"getPrototypeOf\",\"minimumPolygonPixelSize\",\"minimumLinePixelSize\",\"disableDynamicClustering\",\"clusterPointsOnly\",\"threshold\",\"clusterPrefix\",\"clusterId\",\"subClass\",\"superClass\",\"setPrototypeOf\",\"_inherits\",\"loadFeatures\",\"cluster\",\"addFeatures\",\"features\",\"_this2\",\"that_\",\"mapDistance\",\"getFeatures\",\"clustered\",\"ineligibleList\",\"_loop\",\"feature\",\"uid\",\"_isEligibleFeature\",\"neighbors\",\"getFeaturesInExtent\",\"filter\",\"neighbor\",\"createCluster\",\"centroid\",\"centerDelta\",\"n2DisableClustering\",\"eligible\",\"_computeFullBoundingBox\",\"xLen\",\"yLen\",\"bounds\",\"_xLen\",\"_yLen\",\"f\",\"_ComputeFeatureOriginalBboxForMapProjection\",\"mapProj\",\"n2ConvertedBbox\",\"geomBounds\",\"data\",\"nunaliit_geom\",\"bbox\",\"n2GeomProj\",\"rbush\",\"quickselect\",\"maxEntries\",\"_maxEntries\",\"_minEntries\",\"_initFormat\",\"findItem\",\"item\",\"items\",\"equalsFn\",\"calcBBox\",\"node\",\"toBBox\",\"distBBox\",\"children\",\"destNode\",\"createNode\",\"child\",\"leaf\",\"compareNodeMinX\",\"compareNodeMinY\",\"bboxArea\",\"bboxMargin\",\"contains\",\"height\",\"multiSelect\",\"arr\",\"left\",\"right\",\"compare\",\"mid\",\"stack\",\"pop\",\"all\",\"_all\",\"search\",\"result\",\"childBBox\",\"nodesToSearch\",\"collides\",\"load\",\"insert\",\"_build\",\"_splitRoot\",\"tmpNode\",\"_insert\",\"remove\",\"parent\",\"goingUp\",\"path\",\"indexes\",\"_condense\",\"compareMinX\",\"compareMinY\",\"toJSON\",\"fromJSON\",\"N\",\"M\",\"right2\",\"right3\",\"N2\",\"N1\",\"_chooseSubtree\",\"level\",\"targetNode\",\"enlargement\",\"minArea\",\"minEnlargement\",\"isNode\",\"insertPath\",\"_split\",\"_adjustParentBBoxes\",\"_chooseSplitAxis\",\"splitIndex\",\"_chooseSplitIndex\",\"newNode\",\"bbox1\",\"bbox2\",\"overlap\",\"minOverlap\",\"_allDistMargin\",\"sort\",\"leftBBox\",\"rightBBox\",\"margin\",\"siblings\",\"compareArr\",\"Function\",\"_n2es6_ol5support_N2Cluster__WEBPACK_IMPORTED_MODULE_0__\",\"_n2es6_ol5support_N2Cluster__WEBPACK_IMPORTED_MODULE_0___default\",\"e\",\"n2es6\",\"ol5support\",\"swap\",\"tmp\",\"defaultCompare\",\"quickselectStep\",\"z\",\"sd\",\"newLeft\",\"newRight\",\"CollectionEventType\",\"Property\",\"CollectionEvent\",\"opt_element\",\"element\",\"ol_Collection\",\"Collection\",\"opt_array\",\"opt_options\",\"unique_\",\"unique\",\"array_\",\"assertUnique_\",\"updateLength_\",\"getLength\",\"array\",\"getArray\",\"insertAt\",\"elem\",\"removeAt\",\"prev\",\"setAt\",\"opt_except\",\"FormatType\",\"ARRAY_BUFFER\",\"JSON\",\"TEXT\",\"XML\",\"featureloader_xhr\",\"url\",\"success\",\"failure\",\"xhr\",\"XMLHttpRequest\",\"open\",\"responseType\",\"onload\",\"status\",\"responseText\",\"responseXML\",\"DOMParser\",\"parseFromString\",\"readFeatures\",\"featureProjection\",\"readProjection\",\"getLastExtent\",\"onerror\",\"send\",\"loadFeaturesXhr\",\"dataProjection\",\"loadingstrategy_all\",\"State\",\"UNDEFINED\",\"LOADING\",\"READY\",\"adaptAttributions\",\"attributionLike\",\"frameState\",\"source_Source\",\"Source\",\"projection_\",\"attributions_\",\"attributions\",\"attributionsCollapsible_\",\"attributionsCollapsible\",\"loading\",\"state_\",\"state\",\"wrapX_\",\"wrapX\",\"getAttributions\",\"getAttributionsCollapsible\",\"getProjection\",\"getResolutions\",\"getState\",\"getWrapX\",\"refresh\",\"setAttributions\",\"setState\",\"VectorEventType\",\"RBush_RBush\",\"opt_maxEntries\",\"rbush_\",\"rbush_default\",\"items_\",\"extents\",\"update\",\"getAll\",\"map\",\"getInExtent\",\"forEach_\",\"forEachInExtent\",\"ol_obj\",\"concat\",\"structs_RBush\",\"VectorSourceEvent\",\"opt_feature\",\"Cluster_Cluster\",\"VectorSource\",\"Cluster\",\"geometryFunction\",\"getSource\",\"setDistance\",\"ol_coordinate\",\"loader_\",\"format_\",\"overlaps_\",\"overlaps\",\"url_\",\"loader\",\"strategy_\",\"strategy\",\"collection\",\"useSpatialIndex\",\"featuresRtree_\",\"loadedExtentsRtree_\",\"nullGeometryFeatures_\",\"idIndex_\",\"undefIdIndex_\",\"featureChangeKeys_\",\"featuresCollection_\",\"addFeaturesInternal\",\"bindFeaturesCollection_\",\"addFeature\",\"addFeatureInternal\",\"featureKey\",\"addToIndex_\",\"setupChangeEvents_\",\"handleFeatureChange_\",\"valid\",\"newFeatures\",\"geometryFeatures\",\"i$1\",\"length$1\",\"feature$1\",\"featureKey$1\",\"i$2\",\"length$2\",\"modifyingCollection\",\"removeFeature\",\"opt_fast\",\"featureId\",\"removeFeatureInternal\",\"clearEvent\",\"forEachFeature\",\"forEachFeatureAtCoordinateDirect\",\"forEachFeatureInExtent\",\"forEachFeatureIntersectingExtent\",\"getFeaturesCollection\",\"extension\",\"getFeaturesAtCoordinate\",\"getClosestFeatureToCoordinate\",\"opt_filter\",\"closestFeature\",\"previousMinSquaredDistance\",\"minDistance\",\"getFeatureById\",\"getFormat\",\"getOverlaps\",\"getUrl\",\"sid\",\"removeFromIdIndex_\",\"hasFeature\",\"this$1\",\"loadedExtentsRtree\",\"extentsToLoad\",\"loop\",\"extentToLoad\",\"removeLoadedExtent\",\"removed\",\"setLoader\"],\"mappings\":\"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\",\"sourcesContent\":[\"(function webpackUniversalModuleDefinition(root, factory) {\\n\\tif(typeof exports === 'object' && typeof module === 'object')\\n\\t\\tmodule.exports = factory();\\n\\telse if(typeof define === 'function' && define.amd)\\n\\t\\tdefine([], factory);\\n\\telse if(typeof exports === 'object')\\n\\t\\texports[\\\"n2es6\\\"] = factory();\\n\\telse\\n\\t\\troot[\\\"n2es6\\\"] = factory();\\n})(window, function() {\\nreturn \",\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"../dist/\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 20);\\n\",\"/**\\n * @module ol/util\\n */\\n\\n/**\\n * @return {?} Any return.\\n */\\nexport function abstract() {\\n  return /** @type {?} */ ((function() {\\n    throw new Error('Unimplemented abstract method.');\\n  })());\\n}\\n\\n/**\\n * Inherit the prototype methods from one constructor into another.\\n *\\n * Usage:\\n *\\n *     function ParentClass(a, b) { }\\n *     ParentClass.prototype.foo = function(a) { }\\n *\\n *     function ChildClass(a, b, c) {\\n *       // Call parent constructor\\n *       ParentClass.call(this, a, b);\\n *     }\\n *     inherits(ChildClass, ParentClass);\\n *\\n *     var child = new ChildClass('a', 'b', 'see');\\n *     child.foo(); // This works.\\n *\\n * @param {!Function} childCtor Child constructor.\\n * @param {!Function} parentCtor Parent constructor.\\n * @function module:ol.inherits\\n * @deprecated\\n * @api\\n */\\nexport function inherits(childCtor, parentCtor) {\\n  childCtor.prototype = Object.create(parentCtor.prototype);\\n  childCtor.prototype.constructor = childCtor;\\n}\\n\\n/**\\n * Counter for getUid.\\n * @type {number}\\n * @private\\n */\\nvar uidCounter_ = 0;\\n\\n/**\\n * Gets a unique ID for an object. This mutates the object so that further calls\\n * with the same object as a parameter returns the same value. Unique IDs are generated\\n * as a strictly increasing sequence. Adapted from goog.getUid.\\n *\\n * @param {Object} obj The object to get the unique ID for.\\n * @return {string} The unique ID for the object.\\n * @function module:ol.getUid\\n * @api\\n */\\nexport function getUid(obj) {\\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\\n}\\n\\n/**\\n * OpenLayers version.\\n * @type {string}\\n */\\nexport var VERSION = '5.3.0';\\n\\n//# sourceMappingURL=util.js.map\",\"/**\\n * @module ol/events\\n */\\nimport {clear} from './obj.js';\\n\\n\\n/**\\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\\n * @typedef {Object} EventsKey\\n * @property {Object} [bindTo]\\n * @property {ListenerFunction} [boundListener]\\n * @property {boolean} callOnce\\n * @property {number} [deleteIndex]\\n * @property {ListenerFunction} listener\\n * @property {import(\\\"./events/Target.js\\\").EventTargetLike} target\\n * @property {string} type\\n * @api\\n */\\n\\n\\n/**\\n * Listener function. This function is called with an event object as argument.\\n * When the function returns `false`, event propagation will stop.\\n *\\n * @typedef {function((Event|import(\\\"./events/Event.js\\\").default)): (void|boolean)} ListenerFunction\\n * @api\\n */\\n\\n\\n/**\\n * @param {EventsKey} listenerObj Listener object.\\n * @return {ListenerFunction} Bound listener.\\n */\\nexport function bindListener(listenerObj) {\\n  var boundListener = function(evt) {\\n    var listener = listenerObj.listener;\\n    var bindTo = listenerObj.bindTo || listenerObj.target;\\n    if (listenerObj.callOnce) {\\n      unlistenByKey(listenerObj);\\n    }\\n    return listener.call(bindTo, evt);\\n  };\\n  listenerObj.boundListener = boundListener;\\n  return boundListener;\\n}\\n\\n\\n/**\\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\\n * array.\\n *\\n * @param {!Array<!EventsKey>} listeners Array of listeners.\\n * @param {!Function} listener The listener function.\\n * @param {Object=} opt_this The `this` value inside the listener.\\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\\n *     listener, for {@link module:ol/events~unlistenByKey}.\\n * @return {EventsKey|undefined} The matching listener object.\\n */\\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\\n  var listenerObj;\\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n    listenerObj = listeners[i];\\n    if (listenerObj.listener === listener &&\\n        listenerObj.bindTo === opt_this) {\\n      if (opt_setDeleteIndex) {\\n        listenerObj.deleteIndex = i;\\n      }\\n      return listenerObj;\\n    }\\n  }\\n  return undefined;\\n}\\n\\n\\n/**\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n * @return {Array<EventsKey>|undefined} Listeners.\\n */\\nexport function getListeners(target, type) {\\n  var listenerMap = getListenerMap(target);\\n  return listenerMap ? listenerMap[type] : undefined;\\n}\\n\\n\\n/**\\n * Get the lookup of listeners.\\n * @param {Object} target Target.\\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\\n * @return {!Object<string, Array<EventsKey>>} Map of\\n *     listeners by event type.\\n */\\nfunction getListenerMap(target, opt_create) {\\n  var listenerMap = target.ol_lm;\\n  if (!listenerMap && opt_create) {\\n    listenerMap = target.ol_lm = {};\\n  }\\n  return listenerMap;\\n}\\n\\n\\n/**\\n * Remove the listener map from a target.\\n * @param {Object} target Target.\\n */\\nfunction removeListenerMap(target) {\\n  delete target.ol_lm;\\n}\\n\\n\\n/**\\n * Clean up all listener objects of the given type.  All properties on the\\n * listener objects will be removed, and if no listeners remain in the listener\\n * map, it will be removed from the target.\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n * @param {string} type Type.\\n */\\nfunction removeListeners(target, type) {\\n  var listeners = getListeners(target, type);\\n  if (listeners) {\\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n      /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n        removeEventListener(type, listeners[i].boundListener);\\n      clear(listeners[i]);\\n    }\\n    listeners.length = 0;\\n    var listenerMap = getListenerMap(target);\\n    if (listenerMap) {\\n      delete listenerMap[type];\\n      if (Object.keys(listenerMap).length === 0) {\\n        removeListenerMap(target);\\n      }\\n    }\\n  }\\n}\\n\\n\\n/**\\n * Registers an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` to a `this` object, and returns\\n * a key for use with {@link module:ol/events~unlistenByKey}.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\\n * @return {EventsKey} Unique key for the listener.\\n */\\nexport function listen(target, type, listener, opt_this, opt_once) {\\n  var listenerMap = getListenerMap(target, true);\\n  var listeners = listenerMap[type];\\n  if (!listeners) {\\n    listeners = listenerMap[type] = [];\\n  }\\n  var listenerObj = findListener(listeners, listener, opt_this, false);\\n  if (listenerObj) {\\n    if (!opt_once) {\\n      // Turn one-off listener into a permanent one.\\n      listenerObj.callOnce = false;\\n    }\\n  } else {\\n    listenerObj = /** @type {EventsKey} */ ({\\n      bindTo: opt_this,\\n      callOnce: !!opt_once,\\n      listener: listener,\\n      target: target,\\n      type: type\\n    });\\n    /** @type {import(\\\"./events/Target.js\\\").default} */ (target).\\n      addEventListener(type, bindListener(listenerObj));\\n    listeners.push(listenerObj);\\n  }\\n\\n  return listenerObj;\\n}\\n\\n\\n/**\\n * Registers a one-off event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * This function efficiently binds a `listener` as self-unregistering listener\\n * to a `this` object, and returns a key for use with\\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\\n * unregistered before it is called.\\n *\\n * When {@link module:ol/events~listen} is called with the same arguments after this\\n * function, the self-unregistering listener will be turned into a permanent\\n * listener.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n * @return {EventsKey} Key for unlistenByKey.\\n */\\nexport function listenOnce(target, type, listener, opt_this) {\\n  return listen(target, type, listener, opt_this, true);\\n}\\n\\n\\n/**\\n * Unregisters an event listener on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * To return a listener, this function needs to be called with the exact same\\n * arguments that were used for a previous {@link module:ol/events~listen} call.\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Event target.\\n * @param {string} type Event type.\\n * @param {ListenerFunction} listener Listener.\\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\\n *     listener. Default is the `target`.\\n */\\nexport function unlisten(target, type, listener, opt_this) {\\n  var listeners = getListeners(target, type);\\n  if (listeners) {\\n    var listenerObj = findListener(listeners, listener, opt_this, true);\\n    if (listenerObj) {\\n      unlistenByKey(listenerObj);\\n    }\\n  }\\n}\\n\\n\\n/**\\n * Unregisters event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * The argument passed to this function is the key returned from\\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\\n *\\n * @param {EventsKey} key The key.\\n */\\nexport function unlistenByKey(key) {\\n  if (key && key.target) {\\n    /** @type {import(\\\"./events/Target.js\\\").default} */ (key.target).\\n      removeEventListener(key.type, key.boundListener);\\n    var listeners = getListeners(key.target, key.type);\\n    if (listeners) {\\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\\n      if (i !== -1) {\\n        listeners.splice(i, 1);\\n      }\\n      if (listeners.length === 0) {\\n        removeListeners(key.target, key.type);\\n      }\\n    }\\n    clear(key);\\n  }\\n}\\n\\n\\n/**\\n * Unregisters all event listeners on an event target. Inspired by\\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\\n *\\n * @param {import(\\\"./events/Target.js\\\").EventTargetLike} target Target.\\n */\\nexport function unlistenAll(target) {\\n  var listenerMap = getListenerMap(target);\\n  if (listenerMap) {\\n    for (var type in listenerMap) {\\n      removeListeners(target, type);\\n    }\\n  }\\n}\\n\\n//# sourceMappingURL=events.js.map\",\"/**\\n * @module ol/extent/Corner\\n */\\n\\n/**\\n * Extent corner.\\n * @enum {string}\\n */\\nexport default {\\n  BOTTOM_LEFT: 'bottom-left',\\n  BOTTOM_RIGHT: 'bottom-right',\\n  TOP_LEFT: 'top-left',\\n  TOP_RIGHT: 'top-right'\\n};\\n\\n//# sourceMappingURL=Corner.js.map\",\"/**\\n * @module ol/extent/Relationship\\n */\\n\\n/**\\n * Relationship to an extent.\\n * @enum {number}\\n */\\nexport default {\\n  UNKNOWN: 0,\\n  INTERSECTING: 1,\\n  ABOVE: 2,\\n  RIGHT: 4,\\n  BELOW: 8,\\n  LEFT: 16\\n};\\n\\n//# sourceMappingURL=Relationship.js.map\",\"/**\\n * @module ol/extent\\n */\\nimport {assert} from './asserts.js';\\nimport Corner from './extent/Corner.js';\\nimport Relationship from './extent/Relationship.js';\\n\\n\\n/**\\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\\n * @typedef {Array<number>} Extent\\n * @api\\n */\\n\\n/**\\n * Build an extent that includes all given coordinates.\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Bounding extent.\\n * @api\\n */\\nexport function boundingExtent(coordinates) {\\n  var extent = createEmpty();\\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n    extendCoordinate(extent, coordinates[i]);\\n  }\\n  return extent;\\n}\\n\\n\\n/**\\n * @param {Array<number>} xs Xs.\\n * @param {Array<number>} ys Ys.\\n * @param {Extent=} opt_extent Destination extent.\\n * @private\\n * @return {Extent} Extent.\\n */\\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\\n  var minX = Math.min.apply(null, xs);\\n  var minY = Math.min.apply(null, ys);\\n  var maxX = Math.max.apply(null, xs);\\n  var maxY = Math.max.apply(null, ys);\\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\\n}\\n\\n\\n/**\\n * Return extent increased by the provided value.\\n * @param {Extent} extent Extent.\\n * @param {number} value The amount by which the extent should be buffered.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function buffer(extent, value, opt_extent) {\\n  if (opt_extent) {\\n    opt_extent[0] = extent[0] - value;\\n    opt_extent[1] = extent[1] - value;\\n    opt_extent[2] = extent[2] + value;\\n    opt_extent[3] = extent[3] + value;\\n    return opt_extent;\\n  } else {\\n    return [\\n      extent[0] - value,\\n      extent[1] - value,\\n      extent[2] + value,\\n      extent[3] + value\\n    ];\\n  }\\n}\\n\\n\\n/**\\n * Creates a clone of an extent.\\n *\\n * @param {Extent} extent Extent to clone.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} The clone.\\n */\\nexport function clone(extent, opt_extent) {\\n  if (opt_extent) {\\n    opt_extent[0] = extent[0];\\n    opt_extent[1] = extent[1];\\n    opt_extent[2] = extent[2];\\n    opt_extent[3] = extent[3];\\n    return opt_extent;\\n  } else {\\n    return extent.slice();\\n  }\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @return {number} Closest squared distance.\\n */\\nexport function closestSquaredDistanceXY(extent, x, y) {\\n  var dx, dy;\\n  if (x < extent[0]) {\\n    dx = extent[0] - x;\\n  } else if (extent[2] < x) {\\n    dx = x - extent[2];\\n  } else {\\n    dx = 0;\\n  }\\n  if (y < extent[1]) {\\n    dy = extent[1] - y;\\n  } else if (extent[3] < y) {\\n    dy = y - extent[3];\\n  } else {\\n    dy = 0;\\n  }\\n  return dx * dx + dy * dy;\\n}\\n\\n\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @return {boolean} The coordinate is contained in the extent.\\n * @api\\n */\\nexport function containsCoordinate(extent, coordinate) {\\n  return containsXY(extent, coordinate[0], coordinate[1]);\\n}\\n\\n\\n/**\\n * Check if one extent contains another.\\n *\\n * An extent is deemed contained if it lies completely within the other extent,\\n * including if they share one or more edges.\\n *\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The second extent is contained by or on the edge of the\\n *     first.\\n * @api\\n */\\nexport function containsExtent(extent1, extent2) {\\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\\n}\\n\\n\\n/**\\n * Check if the passed coordinate is contained or on the edge of the extent.\\n *\\n * @param {Extent} extent Extent.\\n * @param {number} x X coordinate.\\n * @param {number} y Y coordinate.\\n * @return {boolean} The x, y values are contained in the extent.\\n * @api\\n */\\nexport function containsXY(extent, x, y) {\\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\\n}\\n\\n\\n/**\\n * Get the relationship between a coordinate and extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate The coordinate.\\n * @return {Relationship} The relationship (bitwise compare with\\n *     import(\\\"./extent/Relationship.js\\\").Relationship).\\n */\\nexport function coordinateRelationship(extent, coordinate) {\\n  var minX = extent[0];\\n  var minY = extent[1];\\n  var maxX = extent[2];\\n  var maxY = extent[3];\\n  var x = coordinate[0];\\n  var y = coordinate[1];\\n  var relationship = Relationship.UNKNOWN;\\n  if (x < minX) {\\n    relationship = relationship | Relationship.LEFT;\\n  } else if (x > maxX) {\\n    relationship = relationship | Relationship.RIGHT;\\n  }\\n  if (y < minY) {\\n    relationship = relationship | Relationship.BELOW;\\n  } else if (y > maxY) {\\n    relationship = relationship | Relationship.ABOVE;\\n  }\\n  if (relationship === Relationship.UNKNOWN) {\\n    relationship = Relationship.INTERSECTING;\\n  }\\n  return relationship;\\n}\\n\\n\\n/**\\n * Create an empty extent.\\n * @return {Extent} Empty extent.\\n * @api\\n */\\nexport function createEmpty() {\\n  return [Infinity, Infinity, -Infinity, -Infinity];\\n}\\n\\n\\n/**\\n * Create a new extent or update the provided extent.\\n * @param {number} minX Minimum X.\\n * @param {number} minY Minimum Y.\\n * @param {number} maxX Maximum X.\\n * @param {number} maxY Maximum Y.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\\n  if (opt_extent) {\\n    opt_extent[0] = minX;\\n    opt_extent[1] = minY;\\n    opt_extent[2] = maxX;\\n    opt_extent[3] = maxY;\\n    return opt_extent;\\n  } else {\\n    return [minX, minY, maxX, maxY];\\n  }\\n}\\n\\n\\n/**\\n * Create a new empty extent or make the provided one empty.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateEmpty(opt_extent) {\\n  return createOrUpdate(\\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\\n}\\n\\n\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\\n  var x = coordinate[0];\\n  var y = coordinate[1];\\n  return createOrUpdate(x, y, x, y, opt_extent);\\n}\\n\\n\\n/**\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\\n  var extent = createOrUpdateEmpty(opt_extent);\\n  return extendCoordinates(extent, coordinates);\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\\n  var extent = createOrUpdateEmpty(opt_extent);\\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\\n}\\n\\n/**\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function createOrUpdateFromRings(rings, opt_extent) {\\n  var extent = createOrUpdateEmpty(opt_extent);\\n  return extendRings(extent, rings);\\n}\\n\\n\\n/**\\n * Determine if two extents are equivalent.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {boolean} The two extents are equivalent.\\n * @api\\n */\\nexport function equals(extent1, extent2) {\\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\\n}\\n\\n\\n/**\\n * Modify an extent to include another extent.\\n * @param {Extent} extent1 The extent to be modified.\\n * @param {Extent} extent2 The extent that will be included in the first.\\n * @return {Extent} A reference to the first (extended) extent.\\n * @api\\n */\\nexport function extend(extent1, extent2) {\\n  if (extent2[0] < extent1[0]) {\\n    extent1[0] = extent2[0];\\n  }\\n  if (extent2[2] > extent1[2]) {\\n    extent1[2] = extent2[2];\\n  }\\n  if (extent2[1] < extent1[1]) {\\n    extent1[1] = extent2[1];\\n  }\\n  if (extent2[3] > extent1[3]) {\\n    extent1[3] = extent2[3];\\n  }\\n  return extent1;\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n */\\nexport function extendCoordinate(extent, coordinate) {\\n  if (coordinate[0] < extent[0]) {\\n    extent[0] = coordinate[0];\\n  }\\n  if (coordinate[0] > extent[2]) {\\n    extent[2] = coordinate[0];\\n  }\\n  if (coordinate[1] < extent[1]) {\\n    extent[1] = coordinate[1];\\n  }\\n  if (coordinate[1] > extent[3]) {\\n    extent[3] = coordinate[1];\\n  }\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @return {Extent} Extent.\\n */\\nexport function extendCoordinates(extent, coordinates) {\\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n    extendCoordinate(extent, coordinates[i]);\\n  }\\n  return extent;\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @return {Extent} Extent.\\n */\\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\\n  for (; offset < end; offset += stride) {\\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\\n  }\\n  return extent;\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Array<Array<import(\\\"./coordinate.js\\\").Coordinate>>} rings Rings.\\n * @return {Extent} Extent.\\n */\\nexport function extendRings(extent, rings) {\\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\\n    extendCoordinates(extent, rings[i]);\\n  }\\n  return extent;\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} x X.\\n * @param {number} y Y.\\n */\\nexport function extendXY(extent, x, y) {\\n  extent[0] = Math.min(extent[0], x);\\n  extent[1] = Math.min(extent[1], y);\\n  extent[2] = Math.max(extent[2], x);\\n  extent[3] = Math.max(extent[3], y);\\n}\\n\\n\\n/**\\n * This function calls `callback` for each corner of the extent. If the\\n * callback returns a truthy value the function returns that value\\n * immediately. Otherwise the function returns `false`.\\n * @param {Extent} extent Extent.\\n * @param {function(this:T, import(\\\"./coordinate.js\\\").Coordinate): S} callback Callback.\\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\\n * @return {S|boolean} Value.\\n * @template S, T\\n */\\nexport function forEachCorner(extent, callback, opt_this) {\\n  var val;\\n  val = callback.call(opt_this, getBottomLeft(extent));\\n  if (val) {\\n    return val;\\n  }\\n  val = callback.call(opt_this, getBottomRight(extent));\\n  if (val) {\\n    return val;\\n  }\\n  val = callback.call(opt_this, getTopRight(extent));\\n  if (val) {\\n    return val;\\n  }\\n  val = callback.call(opt_this, getTopLeft(extent));\\n  if (val) {\\n    return val;\\n  }\\n  return false;\\n}\\n\\n\\n/**\\n * Get the size of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Area.\\n * @api\\n */\\nexport function getArea(extent) {\\n  var area = 0;\\n  if (!isEmpty(extent)) {\\n    area = getWidth(extent) * getHeight(extent);\\n  }\\n  return area;\\n}\\n\\n\\n/**\\n * Get the bottom left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom left coordinate.\\n * @api\\n */\\nexport function getBottomLeft(extent) {\\n  return [extent[0], extent[1]];\\n}\\n\\n\\n/**\\n * Get the bottom right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Bottom right coordinate.\\n * @api\\n */\\nexport function getBottomRight(extent) {\\n  return [extent[2], extent[1]];\\n}\\n\\n\\n/**\\n * Get the center coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Center.\\n * @api\\n */\\nexport function getCenter(extent) {\\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\\n}\\n\\n\\n/**\\n * Get a corner coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @param {Corner} corner Corner.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Corner coordinate.\\n */\\nexport function getCorner(extent, corner) {\\n  var coordinate;\\n  if (corner === Corner.BOTTOM_LEFT) {\\n    coordinate = getBottomLeft(extent);\\n  } else if (corner === Corner.BOTTOM_RIGHT) {\\n    coordinate = getBottomRight(extent);\\n  } else if (corner === Corner.TOP_LEFT) {\\n    coordinate = getTopLeft(extent);\\n  } else if (corner === Corner.TOP_RIGHT) {\\n    coordinate = getTopRight(extent);\\n  } else {\\n    assert(false, 13); // Invalid corner\\n  }\\n  return coordinate;\\n}\\n\\n\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Enlarged area.\\n */\\nexport function getEnlargedArea(extent1, extent2) {\\n  var minX = Math.min(extent1[0], extent2[0]);\\n  var minY = Math.min(extent1[1], extent2[1]);\\n  var maxX = Math.max(extent1[2], extent2[2]);\\n  var maxY = Math.max(extent1[3], extent2[3]);\\n  return (maxX - minX) * (maxY - minY);\\n}\\n\\n\\n/**\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} center Center.\\n * @param {number} resolution Resolution.\\n * @param {number} rotation Rotation.\\n * @param {import(\\\"./size.js\\\").Size} size Size.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n */\\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\\n  var dx = resolution * size[0] / 2;\\n  var dy = resolution * size[1] / 2;\\n  var cosRotation = Math.cos(rotation);\\n  var sinRotation = Math.sin(rotation);\\n  var xCos = dx * cosRotation;\\n  var xSin = dx * sinRotation;\\n  var yCos = dy * cosRotation;\\n  var ySin = dy * sinRotation;\\n  var x = center[0];\\n  var y = center[1];\\n  var x0 = x - xCos + ySin;\\n  var x1 = x - xCos - ySin;\\n  var x2 = x + xCos - ySin;\\n  var x3 = x + xCos + ySin;\\n  var y0 = y - xSin - yCos;\\n  var y1 = y - xSin + yCos;\\n  var y2 = y + xSin + yCos;\\n  var y3 = y + xSin - yCos;\\n  return createOrUpdate(\\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\\n    opt_extent);\\n}\\n\\n\\n/**\\n * Get the height of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Height.\\n * @api\\n */\\nexport function getHeight(extent) {\\n  return extent[3] - extent[1];\\n}\\n\\n\\n/**\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @return {number} Intersection area.\\n */\\nexport function getIntersectionArea(extent1, extent2) {\\n  var intersection = getIntersection(extent1, extent2);\\n  return getArea(intersection);\\n}\\n\\n\\n/**\\n * Get the intersection of two extents.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent 2.\\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\\n * @return {Extent} Intersecting extent.\\n * @api\\n */\\nexport function getIntersection(extent1, extent2, opt_extent) {\\n  var intersection = opt_extent ? opt_extent : createEmpty();\\n  if (intersects(extent1, extent2)) {\\n    if (extent1[0] > extent2[0]) {\\n      intersection[0] = extent1[0];\\n    } else {\\n      intersection[0] = extent2[0];\\n    }\\n    if (extent1[1] > extent2[1]) {\\n      intersection[1] = extent1[1];\\n    } else {\\n      intersection[1] = extent2[1];\\n    }\\n    if (extent1[2] < extent2[2]) {\\n      intersection[2] = extent1[2];\\n    } else {\\n      intersection[2] = extent2[2];\\n    }\\n    if (extent1[3] < extent2[3]) {\\n      intersection[3] = extent1[3];\\n    } else {\\n      intersection[3] = extent2[3];\\n    }\\n  } else {\\n    createOrUpdateEmpty(intersection);\\n  }\\n  return intersection;\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @return {number} Margin.\\n */\\nexport function getMargin(extent) {\\n  return getWidth(extent) + getHeight(extent);\\n}\\n\\n\\n/**\\n * Get the size (width, height) of an extent.\\n * @param {Extent} extent The extent.\\n * @return {import(\\\"./size.js\\\").Size} The extent size.\\n * @api\\n */\\nexport function getSize(extent) {\\n  return [extent[2] - extent[0], extent[3] - extent[1]];\\n}\\n\\n\\n/**\\n * Get the top left coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top left coordinate.\\n * @api\\n */\\nexport function getTopLeft(extent) {\\n  return [extent[0], extent[3]];\\n}\\n\\n\\n/**\\n * Get the top right coordinate of an extent.\\n * @param {Extent} extent Extent.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Top right coordinate.\\n * @api\\n */\\nexport function getTopRight(extent) {\\n  return [extent[2], extent[3]];\\n}\\n\\n\\n/**\\n * Get the width of an extent.\\n * @param {Extent} extent Extent.\\n * @return {number} Width.\\n * @api\\n */\\nexport function getWidth(extent) {\\n  return extent[2] - extent[0];\\n}\\n\\n\\n/**\\n * Determine if one extent intersects another.\\n * @param {Extent} extent1 Extent 1.\\n * @param {Extent} extent2 Extent.\\n * @return {boolean} The two extents intersect.\\n * @api\\n */\\nexport function intersects(extent1, extent2) {\\n  return extent1[0] <= extent2[2] &&\\n      extent1[2] >= extent2[0] &&\\n      extent1[1] <= extent2[3] &&\\n      extent1[3] >= extent2[1];\\n}\\n\\n\\n/**\\n * Determine if an extent is empty.\\n * @param {Extent} extent Extent.\\n * @return {boolean} Is empty.\\n * @api\\n */\\nexport function isEmpty(extent) {\\n  return extent[2] < extent[0] || extent[3] < extent[1];\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {Extent=} opt_extent Extent.\\n * @return {Extent} Extent.\\n */\\nexport function returnOrUpdate(extent, opt_extent) {\\n  if (opt_extent) {\\n    opt_extent[0] = extent[0];\\n    opt_extent[1] = extent[1];\\n    opt_extent[2] = extent[2];\\n    opt_extent[3] = extent[3];\\n    return opt_extent;\\n  } else {\\n    return extent;\\n  }\\n}\\n\\n\\n/**\\n * @param {Extent} extent Extent.\\n * @param {number} value Value.\\n */\\nexport function scaleFromCenter(extent, value) {\\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\\n  extent[0] -= deltaX;\\n  extent[2] += deltaX;\\n  extent[1] -= deltaY;\\n  extent[3] += deltaY;\\n}\\n\\n\\n/**\\n * Determine if the segment between two coordinates intersects (crosses,\\n * touches, or is contained by) the provided extent.\\n * @param {Extent} extent The extent.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} start Segment start coordinate.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} end Segment end coordinate.\\n * @return {boolean} The segment intersects the extent.\\n */\\nexport function intersectsSegment(extent, start, end) {\\n  var intersects = false;\\n  var startRel = coordinateRelationship(extent, start);\\n  var endRel = coordinateRelationship(extent, end);\\n  if (startRel === Relationship.INTERSECTING ||\\n      endRel === Relationship.INTERSECTING) {\\n    intersects = true;\\n  } else {\\n    var minX = extent[0];\\n    var minY = extent[1];\\n    var maxX = extent[2];\\n    var maxY = extent[3];\\n    var startX = start[0];\\n    var startY = start[1];\\n    var endX = end[0];\\n    var endY = end[1];\\n    var slope = (endY - startY) / (endX - startX);\\n    var x, y;\\n    if (!!(endRel & Relationship.ABOVE) &&\\n        !(startRel & Relationship.ABOVE)) {\\n      // potentially intersects top\\n      x = endX - ((endY - maxY) / slope);\\n      intersects = x >= minX && x <= maxX;\\n    }\\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\\n        !(startRel & Relationship.RIGHT)) {\\n      // potentially intersects right\\n      y = endY - ((endX - maxX) * slope);\\n      intersects = y >= minY && y <= maxY;\\n    }\\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\\n        !(startRel & Relationship.BELOW)) {\\n      // potentially intersects bottom\\n      x = endX - ((endY - minY) / slope);\\n      intersects = x >= minX && x <= maxX;\\n    }\\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\\n        !(startRel & Relationship.LEFT)) {\\n      // potentially intersects left\\n      y = endY - ((endX - minX) * slope);\\n      intersects = y >= minY && y <= maxY;\\n    }\\n\\n  }\\n  return intersects;\\n}\\n\\n\\n/**\\n * Apply a transform function to the extent.\\n * @param {Extent} extent Extent.\\n * @param {import(\\\"./proj.js\\\").TransformFunction} transformFn Transform function.\\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\\n * @param {Extent=} opt_extent Destination extent.\\n * @return {Extent} Extent.\\n * @api\\n */\\nexport function applyTransform(extent, transformFn, opt_extent) {\\n  var coordinates = [\\n    extent[0], extent[1],\\n    extent[0], extent[3],\\n    extent[2], extent[1],\\n    extent[2], extent[3]\\n  ];\\n  transformFn(coordinates, coordinates, 2);\\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\\n  return _boundingExtentXYs(xs, ys, opt_extent);\\n}\\n\\n//# sourceMappingURL=extent.js.map\",\"/**\\n * @module ol/geom/GeometryType\\n */\\n\\n/**\\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\\n * `'GeometryCollection'`, `'Circle'`.\\n * @enum {string}\\n */\\nexport default {\\n  POINT: 'Point',\\n  LINE_STRING: 'LineString',\\n  LINEAR_RING: 'LinearRing',\\n  POLYGON: 'Polygon',\\n  MULTI_POINT: 'MultiPoint',\\n  MULTI_LINE_STRING: 'MultiLineString',\\n  MULTI_POLYGON: 'MultiPolygon',\\n  GEOMETRY_COLLECTION: 'GeometryCollection',\\n  CIRCLE: 'Circle'\\n};\\n\\n//# sourceMappingURL=GeometryType.js.map\",\"/**\\n * @module ol/math\\n */\\nimport {assert} from './asserts.js';\\n\\n/**\\n * Takes a number and clamps it to within the provided bounds.\\n * @param {number} value The input number.\\n * @param {number} min The minimum value to return.\\n * @param {number} max The maximum value to return.\\n * @return {number} The input number if it is within bounds, or the nearest\\n *     number within the bounds.\\n */\\nexport function clamp(value, min, max) {\\n  return Math.min(Math.max(value, min), max);\\n}\\n\\n\\n/**\\n * Return the hyperbolic cosine of a given number. The method will use the\\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\\n * cosine will be calculated via the reference implementation of the Mozilla\\n * developer network.\\n *\\n * @param {number} x X.\\n * @return {number} Hyperbolic cosine of x.\\n */\\nexport var cosh = (function() {\\n  // Wrapped in a iife, to save the overhead of checking for the native\\n  // implementation on every invocation.\\n  var cosh;\\n  if ('cosh' in Math) {\\n    // The environment supports the native Math.cosh function, use it…\\n    cosh = Math.cosh;\\n  } else {\\n    // … else, use the reference implementation of MDN:\\n    cosh = function(x) {\\n      var y = /** @type {Math} */ (Math).exp(x);\\n      return (y + 1 / y) / 2;\\n    };\\n  }\\n  return cosh;\\n}());\\n\\n\\n/**\\n * @param {number} x X.\\n * @return {number} The smallest power of two greater than or equal to x.\\n */\\nexport function roundUpToPowerOfTwo(x) {\\n  assert(0 < x, 29); // `x` must be greater than `0`\\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\\n}\\n\\n\\n/**\\n * Returns the square of the closest distance between the point (x, y) and the\\n * line segment (x1, y1) to (x2, y2).\\n * @param {number} x X.\\n * @param {number} y Y.\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\\n  var dx = x2 - x1;\\n  var dy = y2 - y1;\\n  if (dx !== 0 || dy !== 0) {\\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\\n    if (t > 1) {\\n      x1 = x2;\\n      y1 = y2;\\n    } else if (t > 0) {\\n      x1 += dx * t;\\n      y1 += dy * t;\\n    }\\n  }\\n  return squaredDistance(x, y, x1, y1);\\n}\\n\\n\\n/**\\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\\n * @param {number} x1 X1.\\n * @param {number} y1 Y1.\\n * @param {number} x2 X2.\\n * @param {number} y2 Y2.\\n * @return {number} Squared distance.\\n */\\nexport function squaredDistance(x1, y1, x2, y2) {\\n  var dx = x2 - x1;\\n  var dy = y2 - y1;\\n  return dx * dx + dy * dy;\\n}\\n\\n\\n/**\\n * Solves system of linear equations using Gaussian elimination method.\\n *\\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\\n *                                     in row-major order.\\n * @return {Array<number>} The resulting vector.\\n */\\nexport function solveLinearSystem(mat) {\\n  var n = mat.length;\\n\\n  for (var i = 0; i < n; i++) {\\n    // Find max in the i-th column (ignoring i - 1 first rows)\\n    var maxRow = i;\\n    var maxEl = Math.abs(mat[i][i]);\\n    for (var r = i + 1; r < n; r++) {\\n      var absValue = Math.abs(mat[r][i]);\\n      if (absValue > maxEl) {\\n        maxEl = absValue;\\n        maxRow = r;\\n      }\\n    }\\n\\n    if (maxEl === 0) {\\n      return null; // matrix is singular\\n    }\\n\\n    // Swap max row with i-th (current) row\\n    var tmp = mat[maxRow];\\n    mat[maxRow] = mat[i];\\n    mat[i] = tmp;\\n\\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\\n    for (var j = i + 1; j < n; j++) {\\n      var coef = -mat[j][i] / mat[i][i];\\n      for (var k = i; k < n + 1; k++) {\\n        if (i == k) {\\n          mat[j][k] = 0;\\n        } else {\\n          mat[j][k] += coef * mat[i][k];\\n        }\\n      }\\n    }\\n  }\\n\\n  // Solve Ax=b for upper triangular matrix A (mat)\\n  var x = new Array(n);\\n  for (var l = n - 1; l >= 0; l--) {\\n    x[l] = mat[l][n] / mat[l][l];\\n    for (var m = l - 1; m >= 0; m--) {\\n      mat[m][n] -= mat[m][l] * x[l];\\n    }\\n  }\\n  return x;\\n}\\n\\n\\n/**\\n * Converts radians to to degrees.\\n *\\n * @param {number} angleInRadians Angle in radians.\\n * @return {number} Angle in degrees.\\n */\\nexport function toDegrees(angleInRadians) {\\n  return angleInRadians * 180 / Math.PI;\\n}\\n\\n\\n/**\\n * Converts degrees to radians.\\n *\\n * @param {number} angleInDegrees Angle in degrees.\\n * @return {number} Angle in radians.\\n */\\nexport function toRadians(angleInDegrees) {\\n  return angleInDegrees * Math.PI / 180;\\n}\\n\\n/**\\n * Returns the modulo of a / b, depending on the sign of b.\\n *\\n * @param {number} a Dividend.\\n * @param {number} b Divisor.\\n * @return {number} Modulo.\\n */\\nexport function modulo(a, b) {\\n  var r = a % b;\\n  return r * b < 0 ? r + b : r;\\n}\\n\\n/**\\n * Calculates the linearly interpolated value of x between a and b.\\n *\\n * @param {number} a Number\\n * @param {number} b Number\\n * @param {number} x Value to be interpolated.\\n * @return {number} Interpolated value.\\n */\\nexport function lerp(a, b, x) {\\n  return a + x * (b - a);\\n}\\n\\n//# sourceMappingURL=math.js.map\",\"/**\\n * @module ol/obj\\n */\\n\\n\\n/**\\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\\n * one or more source objects to a target object.\\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\\n *\\n * @param {!Object} target The target object.\\n * @param {...Object} var_sources The source object(s).\\n * @return {!Object} The modified target object.\\n */\\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\\n  var arguments$1 = arguments;\\n\\n  if (target === undefined || target === null) {\\n    throw new TypeError('Cannot convert undefined or null to object');\\n  }\\n\\n  var output = Object(target);\\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\\n    var source = arguments$1[i];\\n    if (source !== undefined && source !== null) {\\n      for (var key in source) {\\n        if (source.hasOwnProperty(key)) {\\n          output[key] = source[key];\\n        }\\n      }\\n    }\\n  }\\n  return output;\\n};\\n\\n\\n/**\\n * Removes all properties from an object.\\n * @param {Object} object The object to clear.\\n */\\nexport function clear(object) {\\n  for (var property in object) {\\n    delete object[property];\\n  }\\n}\\n\\n\\n/**\\n * Get an array of property values from an object.\\n * @param {Object<K,V>} object The object from which to get the values.\\n * @return {!Array<V>} The property values.\\n * @template K,V\\n */\\nexport function getValues(object) {\\n  var values = [];\\n  for (var property in object) {\\n    values.push(object[property]);\\n  }\\n  return values;\\n}\\n\\n\\n/**\\n * Determine if an object has any properties.\\n * @param {Object} object The object to check.\\n * @return {boolean} The object is empty.\\n */\\nexport function isEmpty(object) {\\n  var property;\\n  for (property in object) {\\n    return false;\\n  }\\n  return !property;\\n}\\n\\n//# sourceMappingURL=obj.js.map\",\"/**\\n * @module ol/asserts\\n */\\nimport AssertionError from './AssertionError.js';\\n\\n/**\\n * @param {*} assertion Assertion we expected to be truthy.\\n * @param {number} errorCode Error code.\\n */\\nexport function assert(assertion, errorCode) {\\n  if (!assertion) {\\n    throw new AssertionError(errorCode);\\n  }\\n}\\n\\n//# sourceMappingURL=asserts.js.map\",\"/**\\n * @module ol/proj/Units\\n */\\n\\n/**\\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\\n * `'us-ft'`.\\n * @enum {string}\\n */\\nvar Units = {\\n  DEGREES: 'degrees',\\n  FEET: 'ft',\\n  METERS: 'm',\\n  PIXELS: 'pixels',\\n  TILE_PIXELS: 'tile-pixels',\\n  USFEET: 'us-ft'\\n};\\n\\n\\n/**\\n * Meters per unit lookup table.\\n * @const\\n * @type {Object<Units, number>}\\n * @api\\n */\\nexport var METERS_PER_UNIT = {};\\n// use the radius of the Normal sphere\\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\\nMETERS_PER_UNIT[Units.METERS] = 1;\\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\\n\\nexport default Units;\\n\\n//# sourceMappingURL=Units.js.map\",\"/**\\n * @module ol/Disposable\\n */\\n\\n/**\\n * @classdesc\\n * Objects that need to clean up after themselves.\\n */\\nvar Disposable = function Disposable() {\\n  /**\\n   * The object has already been disposed.\\n   * @type {boolean}\\n   * @private\\n   */\\n  this.disposed_ = false;\\n};\\n\\n/**\\n * Clean up.\\n */\\nDisposable.prototype.dispose = function dispose () {\\n  if (!this.disposed_) {\\n    this.disposed_ = true;\\n    this.disposeInternal();\\n  }\\n};\\n\\n/**\\n * Extension point for disposable objects.\\n * @protected\\n */\\nDisposable.prototype.disposeInternal = function disposeInternal () {};\\n\\nexport default Disposable;\\n\\n//# sourceMappingURL=Disposable.js.map\",\"/**\\n * @module ol/events/Target\\n */\\nimport Disposable from '../Disposable.js';\\nimport {unlistenAll} from '../events.js';\\nimport {VOID} from '../functions.js';\\nimport Event from './Event.js';\\n\\n\\n/**\\n * @typedef {EventTarget|Target} EventTargetLike\\n */\\n\\n\\n/**\\n * @classdesc\\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\\n *\\n * There are two important simplifications compared to the specification:\\n *\\n * 1. The handling of `useCapture` in `addEventListener` and\\n *    `removeEventListener`. There is no real capture model.\\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\\n *    There is no event target hierarchy. When a listener calls\\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\\n *    more listeners after this one will be called. Same as when the listener\\n *    returns false.\\n */\\nvar Target = /*@__PURE__*/(function (Disposable) {\\n  function Target() {\\n\\n    Disposable.call(this);\\n\\n    /**\\n     * @private\\n     * @type {!Object<string, number>}\\n     */\\n    this.pendingRemovals_ = {};\\n\\n    /**\\n     * @private\\n     * @type {!Object<string, number>}\\n     */\\n    this.dispatching_ = {};\\n\\n    /**\\n     * @private\\n     * @type {!Object<string, Array<import(\\\"../events.js\\\").ListenerFunction>>}\\n     */\\n    this.listeners_ = {};\\n\\n  }\\n\\n  if ( Disposable ) Target.__proto__ = Disposable;\\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\\n  Target.prototype.constructor = Target;\\n\\n  /**\\n   * @param {string} type Type.\\n   * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n   */\\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\\n    var listeners = this.listeners_[type];\\n    if (!listeners) {\\n      listeners = this.listeners_[type] = [];\\n    }\\n    if (listeners.indexOf(listener) === -1) {\\n      listeners.push(listener);\\n    }\\n  };\\n\\n  /**\\n   * Dispatches an event and calls all listeners listening for events\\n   * of this type. The event parameter can either be a string or an\\n   * Object with a `type` property.\\n   *\\n   * @param {{type: string,\\n   *     target: (EventTargetLike|undefined),\\n   *     propagationStopped: (boolean|undefined)}|\\n   *     import(\\\"./Event.js\\\").default|string} event Event object.\\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\\n   *     event object or if any of the listeners returned false.\\n   * @api\\n   */\\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\\n    var evt = typeof event === 'string' ? new Event(event) : event;\\n    var type = evt.type;\\n    evt.target = this;\\n    var listeners = this.listeners_[type];\\n    var propagate;\\n    if (listeners) {\\n      if (!(type in this.dispatching_)) {\\n        this.dispatching_[type] = 0;\\n        this.pendingRemovals_[type] = 0;\\n      }\\n      ++this.dispatching_[type];\\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\\n          propagate = false;\\n          break;\\n        }\\n      }\\n      --this.dispatching_[type];\\n      if (this.dispatching_[type] === 0) {\\n        var pendingRemovals = this.pendingRemovals_[type];\\n        delete this.pendingRemovals_[type];\\n        while (pendingRemovals--) {\\n          this.removeEventListener(type, VOID);\\n        }\\n        delete this.dispatching_[type];\\n      }\\n      return propagate;\\n    }\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  Target.prototype.disposeInternal = function disposeInternal () {\\n    unlistenAll(this);\\n  };\\n\\n  /**\\n   * Get the listeners for a specified event type. Listeners are returned in the\\n   * order that they will be called in.\\n   *\\n   * @param {string} type Type.\\n   * @return {Array<import(\\\"../events.js\\\").ListenerFunction>} Listeners.\\n   */\\n  Target.prototype.getListeners = function getListeners (type) {\\n    return this.listeners_[type];\\n  };\\n\\n  /**\\n   * @param {string=} opt_type Type. If not provided,\\n   *     `true` will be returned if this event target has any listeners.\\n   * @return {boolean} Has listeners.\\n   */\\n  Target.prototype.hasListener = function hasListener (opt_type) {\\n    return opt_type ?\\n      opt_type in this.listeners_ :\\n      Object.keys(this.listeners_).length > 0;\\n  };\\n\\n  /**\\n   * @param {string} type Type.\\n   * @param {import(\\\"../events.js\\\").ListenerFunction} listener Listener.\\n   */\\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\\n    var listeners = this.listeners_[type];\\n    if (listeners) {\\n      var index = listeners.indexOf(listener);\\n      if (type in this.pendingRemovals_) {\\n        // make listener a no-op, and remove later in #dispatchEvent()\\n        listeners[index] = VOID;\\n        ++this.pendingRemovals_[type];\\n      } else {\\n        listeners.splice(index, 1);\\n        if (listeners.length === 0) {\\n          delete this.listeners_[type];\\n        }\\n      }\\n    }\\n  };\\n\\n  return Target;\\n}(Disposable));\\n\\n\\nexport default Target;\\n\\n//# sourceMappingURL=Target.js.map\",\"/**\\n * @module ol/Observable\\n */\\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\\nimport EventTarget from './events/Target.js';\\nimport EventType from './events/EventType.js';\\n\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * An event target providing convenient methods for listener registration\\n * and unregistration. A generic `change` event is always available through\\n * {@link module:ol/Observable~Observable#changed}.\\n *\\n * @fires import(\\\"./events/Event.js\\\").Event\\n * @api\\n */\\nvar Observable = /*@__PURE__*/(function (EventTarget) {\\n  function Observable() {\\n\\n    EventTarget.call(this);\\n\\n    /**\\n     * @private\\n     * @type {number}\\n     */\\n    this.revision_ = 0;\\n\\n  }\\n\\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\\n  Observable.prototype.constructor = Observable;\\n\\n  /**\\n   * Increases the revision counter and dispatches a 'change' event.\\n   * @api\\n   */\\n  Observable.prototype.changed = function changed () {\\n    ++this.revision_;\\n    this.dispatchEvent(EventType.CHANGE);\\n  };\\n\\n  /**\\n   * Get the version number for this object.  Each time the object is modified,\\n   * its version number will be incremented.\\n   * @return {number} Revision.\\n   * @api\\n   */\\n  Observable.prototype.getRevision = function getRevision () {\\n    return this.revision_;\\n  };\\n\\n  /**\\n   * Listen for a certain type of event.\\n   * @param {string|Array<string>} type The event type or array of event types.\\n   * @param {function(?): ?} listener The listener function.\\n   * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n   *     called with an array of event types as the first argument, the return\\n   *     will be an array of keys.\\n   * @api\\n   */\\n  Observable.prototype.on = function on (type, listener) {\\n    if (Array.isArray(type)) {\\n      var len = type.length;\\n      var keys = new Array(len);\\n      for (var i = 0; i < len; ++i) {\\n        keys[i] = listen(this, type[i], listener);\\n      }\\n      return keys;\\n    } else {\\n      return listen(this, /** @type {string} */ (type), listener);\\n    }\\n  };\\n\\n  /**\\n   * Listen once for a certain type of event.\\n   * @param {string|Array<string>} type The event type or array of event types.\\n   * @param {function(?): ?} listener The listener function.\\n   * @return {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} Unique key for the listener. If\\n   *     called with an array of event types as the first argument, the return\\n   *     will be an array of keys.\\n   * @api\\n   */\\n  Observable.prototype.once = function once (type, listener) {\\n    if (Array.isArray(type)) {\\n      var len = type.length;\\n      var keys = new Array(len);\\n      for (var i = 0; i < len; ++i) {\\n        keys[i] = listenOnce(this, type[i], listener);\\n      }\\n      return keys;\\n    } else {\\n      return listenOnce(this, /** @type {string} */ (type), listener);\\n    }\\n  };\\n\\n  /**\\n   * Unlisten for a certain type of event.\\n   * @param {string|Array<string>} type The event type or array of event types.\\n   * @param {function(?): ?} listener The listener function.\\n   * @api\\n   */\\n  Observable.prototype.un = function un (type, listener) {\\n    if (Array.isArray(type)) {\\n      for (var i = 0, ii = type.length; i < ii; ++i) {\\n        unlisten(this, type[i], listener);\\n      }\\n      return;\\n    } else {\\n      unlisten(this, /** @type {string} */ (type), listener);\\n    }\\n  };\\n\\n  return Observable;\\n}(EventTarget));\\n\\n\\n/**\\n * Removes an event listener using the key returned by `on()` or `once()`.\\n * @param {import(\\\"./events.js\\\").EventsKey|Array<import(\\\"./events.js\\\").EventsKey>} key The key returned by `on()`\\n *     or `once()` (or an array of keys).\\n * @api\\n */\\nexport function unByKey(key) {\\n  if (Array.isArray(key)) {\\n    for (var i = 0, ii = key.length; i < ii; ++i) {\\n      unlistenByKey(key[i]);\\n    }\\n  } else {\\n    unlistenByKey(/** @type {import(\\\"./events.js\\\").EventsKey} */ (key));\\n  }\\n}\\n\\n\\nexport default Observable;\\n\\n//# sourceMappingURL=Observable.js.map\",\"/**\\n * @module ol/Object\\n */\\nimport {getUid} from './util.js';\\nimport ObjectEventType from './ObjectEventType.js';\\nimport Observable from './Observable.js';\\nimport Event from './events/Event.js';\\nimport {assign} from './obj.js';\\n\\n\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\\n */\\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\\n  function ObjectEvent(type, key, oldValue) {\\n    Event.call(this, type);\\n\\n    /**\\n     * The name of the property whose value is changing.\\n     * @type {string}\\n     * @api\\n     */\\n    this.key = key;\\n\\n    /**\\n     * The old value. To get the new value use `e.target.get(e.key)` where\\n     * `e` is the event object.\\n     * @type {*}\\n     * @api\\n     */\\n    this.oldValue = oldValue;\\n\\n  }\\n\\n  if ( Event ) ObjectEvent.__proto__ = Event;\\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\\n  ObjectEvent.prototype.constructor = ObjectEvent;\\n\\n  return ObjectEvent;\\n}(Event));\\n\\n\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Most non-trivial classes inherit from this.\\n *\\n * This extends {@link module:ol/Observable} with observable\\n * properties, where each property is observable as well as the object as a\\n * whole.\\n *\\n * Classes that inherit from this have pre-defined properties, to which you can\\n * add your owns. The pre-defined properties are listed in this documentation as\\n * 'Observable Properties', and have their own accessors; for example,\\n * {@link module:ol/Map~Map} has a `target` property, accessed with\\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\\n * settable. There are also general-purpose accessors `get()` and `set()`. For\\n * example, `get('target')` is equivalent to `getTarget()`.\\n *\\n * The `set` accessors trigger a change event, and you can monitor this by\\n * registering a listener. For example, {@link module:ol/View~View} has a\\n * `center` property, so `view.on('change:center', function(evt) {...});` would\\n * call the function whenever the value of the center property changes. Within\\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\\n * would return the new center.\\n *\\n * You can add your own observable properties with\\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\\n * You can listen for changes on that property value with\\n * `object.on('change:prop', listener)`. You can get a list of all\\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\\n *\\n * Note that the observable properties are separate from standard JS properties.\\n * You can, for example, give your map object a title with\\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\\n * first will be a `hasOwnProperty`; the second will appear in\\n * `getProperties()`. Only the second is observable.\\n *\\n * Properties can be deleted by using the unset method. E.g.\\n * object.unset('foo').\\n *\\n * @fires ObjectEvent\\n * @api\\n */\\nvar BaseObject = /*@__PURE__*/(function (Observable) {\\n  function BaseObject(opt_values) {\\n    Observable.call(this);\\n\\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\\n    // the same as the order in which they were created.  This also helps to\\n    // ensure that object properties are always added in the same order, which\\n    // helps many JavaScript engines generate faster code.\\n    getUid(this);\\n\\n    /**\\n     * @private\\n     * @type {!Object<string, *>}\\n     */\\n    this.values_ = {};\\n\\n    if (opt_values !== undefined) {\\n      this.setProperties(opt_values);\\n    }\\n  }\\n\\n  if ( Observable ) BaseObject.__proto__ = Observable;\\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\\n  BaseObject.prototype.constructor = BaseObject;\\n\\n  /**\\n   * Gets a value.\\n   * @param {string} key Key name.\\n   * @return {*} Value.\\n   * @api\\n   */\\n  BaseObject.prototype.get = function get (key) {\\n    var value;\\n    if (this.values_.hasOwnProperty(key)) {\\n      value = this.values_[key];\\n    }\\n    return value;\\n  };\\n\\n  /**\\n   * Get a list of object property names.\\n   * @return {Array<string>} List of property names.\\n   * @api\\n   */\\n  BaseObject.prototype.getKeys = function getKeys () {\\n    return Object.keys(this.values_);\\n  };\\n\\n  /**\\n   * Get an object of all property names and values.\\n   * @return {Object<string, *>} Object.\\n   * @api\\n   */\\n  BaseObject.prototype.getProperties = function getProperties () {\\n    return assign({}, this.values_);\\n  };\\n\\n  /**\\n   * @param {string} key Key name.\\n   * @param {*} oldValue Old value.\\n   */\\n  BaseObject.prototype.notify = function notify (key, oldValue) {\\n    var eventType;\\n    eventType = getChangeEventType(key);\\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n    eventType = ObjectEventType.PROPERTYCHANGE;\\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\\n  };\\n\\n  /**\\n   * Sets a value.\\n   * @param {string} key Key name.\\n   * @param {*} value Value.\\n   * @param {boolean=} opt_silent Update without triggering an event.\\n   * @api\\n   */\\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\\n    if (opt_silent) {\\n      this.values_[key] = value;\\n    } else {\\n      var oldValue = this.values_[key];\\n      this.values_[key] = value;\\n      if (oldValue !== value) {\\n        this.notify(key, oldValue);\\n      }\\n    }\\n  };\\n\\n  /**\\n   * Sets a collection of key-value pairs.  Note that this changes any existing\\n   * properties and adds new ones (it does not remove any existing properties).\\n   * @param {Object<string, *>} values Values.\\n   * @param {boolean=} opt_silent Update without triggering an event.\\n   * @api\\n   */\\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\\n    for (var key in values) {\\n      this.set(key, values[key], opt_silent);\\n    }\\n  };\\n\\n  /**\\n   * Unsets a property.\\n   * @param {string} key Key name.\\n   * @param {boolean=} opt_silent Unset without triggering an event.\\n   * @api\\n   */\\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\\n    if (key in this.values_) {\\n      var oldValue = this.values_[key];\\n      delete this.values_[key];\\n      if (!opt_silent) {\\n        this.notify(key, oldValue);\\n      }\\n    }\\n  };\\n\\n  return BaseObject;\\n}(Observable));\\n\\n\\n/**\\n * @type {Object<string, string>}\\n */\\nvar changeEventTypeCache = {};\\n\\n\\n/**\\n * @param {string} key Key name.\\n * @return {string} Change name.\\n */\\nexport function getChangeEventType(key) {\\n  return changeEventTypeCache.hasOwnProperty(key) ?\\n    changeEventTypeCache[key] :\\n    (changeEventTypeCache[key] = 'change:' + key);\\n}\\n\\n\\nexport default BaseObject;\\n\\n//# sourceMappingURL=Object.js.map\",\"/**\\n * @module ol/functions\\n */\\n\\n/**\\n * Always returns true.\\n * @returns {boolean} true.\\n */\\nexport function TRUE() {\\n  return true;\\n}\\n\\n/**\\n * Always returns false.\\n * @returns {boolean} false.\\n */\\nexport function FALSE() {\\n  return false;\\n}\\n\\n/**\\n * A reusable function, used e.g. as a default for callbacks.\\n *\\n * @return {void} Nothing.\\n */\\nexport function VOID() {}\\n\\n//# sourceMappingURL=functions.js.map\",\"/**\\n * @module ol/events/EventType\\n */\\n\\n/**\\n * @enum {string}\\n * @const\\n */\\nexport default {\\n  /**\\n   * Generic change event. Triggered when the revision counter is increased.\\n   * @event module:ol/events/Event~Event#change\\n   * @api\\n   */\\n  CHANGE: 'change',\\n\\n  CLEAR: 'clear',\\n  CONTEXTMENU: 'contextmenu',\\n  CLICK: 'click',\\n  DBLCLICK: 'dblclick',\\n  DRAGENTER: 'dragenter',\\n  DRAGOVER: 'dragover',\\n  DROP: 'drop',\\n  ERROR: 'error',\\n  KEYDOWN: 'keydown',\\n  KEYPRESS: 'keypress',\\n  LOAD: 'load',\\n  MOUSEDOWN: 'mousedown',\\n  MOUSEMOVE: 'mousemove',\\n  MOUSEOUT: 'mouseout',\\n  MOUSEUP: 'mouseup',\\n  MOUSEWHEEL: 'mousewheel',\\n  MSPOINTERDOWN: 'MSPointerDown',\\n  RESIZE: 'resize',\\n  TOUCHSTART: 'touchstart',\\n  TOUCHMOVE: 'touchmove',\\n  TOUCHEND: 'touchend',\\n  WHEEL: 'wheel'\\n};\\n\\n//# sourceMappingURL=EventType.js.map\",\"/**\\n * @module ol/events/Event\\n */\\n\\n/**\\n * @classdesc\\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\\n *\\n * This implementation only provides `type` and `target` properties, and\\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\\n * for higher level events defined in the library, and works with\\n * {@link module:ol/events/Target~Target}.\\n */\\nvar Event = function Event(type) {\\n\\n  /**\\n   * @type {boolean}\\n   */\\n  this.propagationStopped;\\n\\n  /**\\n   * The event type.\\n   * @type {string}\\n   * @api\\n   */\\n  this.type = type;\\n\\n  /**\\n   * The event target.\\n   * @type {Object}\\n   * @api\\n   */\\n  this.target = null;\\n};\\n\\n/**\\n * Stop event propagation.\\n * @api\\n */\\nEvent.prototype.preventDefault = function preventDefault () {\\n  this.propagationStopped = true;\\n};\\n\\n/**\\n * Stop event propagation.\\n * @api\\n */\\nEvent.prototype.stopPropagation = function stopPropagation () {\\n  this.propagationStopped = true;\\n};\\n\\n\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function stopPropagation(evt) {\\n  evt.stopPropagation();\\n}\\n\\n\\n/**\\n * @param {Event|import(\\\"./Event.js\\\").default} evt Event\\n */\\nexport function preventDefault(evt) {\\n  evt.preventDefault();\\n}\\n\\nexport default Event;\\n\\n//# sourceMappingURL=Event.js.map\",\"/**\\n * @license\\n * Latitude/longitude spherical geodesy formulae taken from\\n * http://www.movable-type.co.uk/scripts/latlong.html\\n * Licensed under CC-BY-3.0.\\n */\\n\\n/**\\n * @module ol/sphere\\n */\\nimport {toRadians, toDegrees} from './math.js';\\nimport GeometryType from './geom/GeometryType.js';\\n\\n\\n/**\\n * Object literal with options for the {@link getLength} or {@link getArea}\\n * functions.\\n * @typedef {Object} SphereMetricOptions\\n * @property {import(\\\"./proj.js\\\").ProjectionLike} [projection='EPSG:3857']\\n * Projection of the  geometry.  By default, the geometry is assumed to be in\\n * Web Mercator.\\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\\n * earth is used (Clarke 1866 Authalic Sphere).\\n */\\n\\n\\n/**\\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\\n * @type {number}\\n */\\nexport var DEFAULT_RADIUS = 6371008.8;\\n\\n\\n/**\\n * Get the great circle distance (in meters) between two geographic coordinates.\\n * @param {Array} c1 Starting coordinate.\\n * @param {Array} c2 Ending coordinate.\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {number} The great circle distance between the points (in meters).\\n * @api\\n */\\nexport function getDistance(c1, c2, opt_radius) {\\n  var radius = opt_radius || DEFAULT_RADIUS;\\n  var lat1 = toRadians(c1[1]);\\n  var lat2 = toRadians(c2[1]);\\n  var deltaLatBy2 = (lat2 - lat1) / 2;\\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\\n      Math.cos(lat1) * Math.cos(lat2);\\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\\n}\\n\\n\\n/**\\n * Get the cumulative great circle length of linestring coordinates (geographic).\\n * @param {Array} coordinates Linestring coordinates.\\n * @param {number} radius The sphere radius to use.\\n * @return {number} The length (in meters).\\n */\\nfunction getLengthInternal(coordinates, radius) {\\n  var length = 0;\\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\\n  }\\n  return length;\\n}\\n\\n\\n/**\\n * Get the spherical length of a geometry.  This length is the sum of the\\n * great circle distances between coordinates.  For polygons, the length is\\n * the sum of all rings.  For points, the length is zero.  For multi-part\\n * geometries, the length is the sum of the length of each part.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the\\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n * You can change this by providing a `projection` option.\\n * @return {number} The spherical length (in meters).\\n * @api\\n */\\nexport function getLength(geometry, opt_options) {\\n  var options = opt_options || {};\\n  var radius = options.radius || DEFAULT_RADIUS;\\n  var projection = options.projection || 'EPSG:3857';\\n  var type = geometry.getType();\\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n  }\\n  var length = 0;\\n  var coordinates, coords, i, ii, j, jj;\\n  switch (type) {\\n    case GeometryType.POINT:\\n    case GeometryType.MULTI_POINT: {\\n      break;\\n    }\\n    case GeometryType.LINE_STRING:\\n    case GeometryType.LINEAR_RING: {\\n      coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n      length = getLengthInternal(coordinates, radius);\\n      break;\\n    }\\n    case GeometryType.MULTI_LINE_STRING:\\n    case GeometryType.POLYGON: {\\n      coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n        length += getLengthInternal(coordinates[i], radius);\\n      }\\n      break;\\n    }\\n    case GeometryType.MULTI_POLYGON: {\\n      coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n        coords = coordinates[i];\\n        for (j = 0, jj = coords.length; j < jj; ++j) {\\n          length += getLengthInternal(coords[j], radius);\\n        }\\n      }\\n      break;\\n    }\\n    case GeometryType.GEOMETRY_COLLECTION: {\\n      var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\\n        length += getLength(geometries[i], opt_options);\\n      }\\n      break;\\n    }\\n    default: {\\n      throw new Error('Unsupported geometry type: ' + type);\\n    }\\n  }\\n  return length;\\n}\\n\\n\\n/**\\n * Returns the spherical area for a list of coordinates.\\n *\\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\\n * Robert. G. Chamberlain and William H. Duquette, \\\"Some Algorithms for\\n * Polygons on a Sphere\\\", JPL Publication 07-03, Jet Propulsion\\n * Laboratory, Pasadena, CA, June 2007\\n *\\n * @param {Array<import(\\\"./coordinate.js\\\").Coordinate>} coordinates List of coordinates of a linear\\n * ring. If the ring is oriented clockwise, the area will be positive,\\n * otherwise it will be negative.\\n * @param {number} radius The sphere radius.\\n * @return {number} Area (in square meters).\\n */\\nfunction getAreaInternal(coordinates, radius) {\\n  var area = 0;\\n  var len = coordinates.length;\\n  var x1 = coordinates[len - 1][0];\\n  var y1 = coordinates[len - 1][1];\\n  for (var i = 0; i < len; i++) {\\n    var x2 = coordinates[i][0];\\n    var y2 = coordinates[i][1];\\n    area += toRadians(x2 - x1) *\\n        (2 + Math.sin(toRadians(y1)) +\\n        Math.sin(toRadians(y2)));\\n    x1 = x2;\\n    y1 = y2;\\n  }\\n  return area * radius * radius / 2.0;\\n}\\n\\n\\n/**\\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\\n * that polygon edges are segments of great circles on a sphere.\\n * @param {import(\\\"./geom/Geometry.js\\\").default} geometry A geometry.\\n * @param {SphereMetricOptions=} opt_options Options for the area\\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\\n *     You can change this by providing a `projection` option.\\n * @return {number} The spherical area (in square meters).\\n * @api\\n */\\nexport function getArea(geometry, opt_options) {\\n  var options = opt_options || {};\\n  var radius = options.radius || DEFAULT_RADIUS;\\n  var projection = options.projection || 'EPSG:3857';\\n  var type = geometry.getType();\\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\\n  }\\n  var area = 0;\\n  var coordinates, coords, i, ii, j, jj;\\n  switch (type) {\\n    case GeometryType.POINT:\\n    case GeometryType.MULTI_POINT:\\n    case GeometryType.LINE_STRING:\\n    case GeometryType.MULTI_LINE_STRING:\\n    case GeometryType.LINEAR_RING: {\\n      break;\\n    }\\n    case GeometryType.POLYGON: {\\n      coordinates = /** @type {import(\\\"./geom/Polygon.js\\\").default} */ (geometry).getCoordinates();\\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\\n      }\\n      break;\\n    }\\n    case GeometryType.MULTI_POLYGON: {\\n      coordinates = /** @type {import(\\\"./geom/SimpleGeometry.js\\\").default} */ (geometry).getCoordinates();\\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\\n        coords = coordinates[i];\\n        area += Math.abs(getAreaInternal(coords[0], radius));\\n        for (j = 1, jj = coords.length; j < jj; ++j) {\\n          area -= Math.abs(getAreaInternal(coords[j], radius));\\n        }\\n      }\\n      break;\\n    }\\n    case GeometryType.GEOMETRY_COLLECTION: {\\n      var geometries = /** @type {import(\\\"./geom/GeometryCollection.js\\\").default} */ (geometry).getGeometries();\\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\\n        area += getArea(geometries[i], opt_options);\\n      }\\n      break;\\n    }\\n    default: {\\n      throw new Error('Unsupported geometry type: ' + type);\\n    }\\n  }\\n  return area;\\n}\\n\\n\\n/**\\n * Returns the coordinate at the given distance and bearing from `c1`.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\\n * @param {number} distance The great-circle distance between the origin\\n *     point and the target point.\\n * @param {number} bearing The bearing (in radians).\\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\\n *     mean radius using the WGS84 ellipsoid.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} The target point.\\n */\\nexport function offset(c1, distance, bearing, opt_radius) {\\n  var radius = opt_radius || DEFAULT_RADIUS;\\n  var lat1 = toRadians(c1[1]);\\n  var lon1 = toRadians(c1[0]);\\n  var dByR = distance / radius;\\n  var lat = Math.asin(\\n    Math.sin(lat1) * Math.cos(dByR) +\\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\\n  var lon = lon1 + Math.atan2(\\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\\n  return [toDegrees(lon), toDegrees(lat)];\\n}\\n\\n//# sourceMappingURL=sphere.js.map\",\"/**\\n * @module ol/proj/Projection\\n */\\nimport {METERS_PER_UNIT} from './Units.js';\\n\\n\\n/**\\n * @typedef {Object} Options\\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\\n * @property {import(\\\"./Units.js\\\").default|string} [units] Units. Required unless a\\n * proj4 projection is defined for `code`.\\n * @property {import(\\\"../extent.js\\\").Extent} [extent] The validity extent for the SRS.\\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\\n * lookup table.\\n * @property {import(\\\"../extent.js\\\").Extent} [worldExtent] The world extent for the SRS.\\n * @property {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} [getPointResolution]\\n * Function to determine resolution at a point. The function is called with a\\n * `{number}` view resolution and an `{import(\\\"../coordinate.js\\\").Coordinate}` as arguments, and returns\\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\\n * the default {@link module:ol/proj#getPointResolution} function will be used.\\n */\\n\\n\\n/**\\n * @classdesc\\n * Projection definition class. One of these is created for each projection\\n * supported in the application and stored in the {@link module:ol/proj} namespace.\\n * You can use these in applications, but this is not required, as API params\\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\\n * code will suffice.\\n *\\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\\n * projection.\\n *\\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\\n * with the following aliases:\\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\\n *     urn:x-ogc:def:crs:EPSG:4326\\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\\n *\\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\\n * be added using `proj4.defs()`. After all required projection definitions are\\n * added, call the {@link module:ol/proj/proj4~register} function.\\n *\\n * @api\\n */\\nvar Projection = function Projection(options) {\\n  /**\\n   * @private\\n   * @type {string}\\n   */\\n  this.code_ = options.code;\\n\\n  /**\\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\\n   * tile.\\n   * @private\\n   * @type {import(\\\"./Units.js\\\").default}\\n   */\\n  this.units_ = /** @type {import(\\\"./Units.js\\\").default} */ (options.units);\\n\\n  /**\\n   * Validity extent of the projection in projected coordinates. For projections\\n   * with `TILE_PIXELS` units, this is the extent of the tile in\\n   * tile pixel space.\\n   * @private\\n   * @type {import(\\\"../extent.js\\\").Extent}\\n   */\\n  this.extent_ = options.extent !== undefined ? options.extent : null;\\n\\n  /**\\n   * Extent of the world in EPSG:4326. For projections with\\n   * `TILE_PIXELS` units, this is the extent of the tile in\\n   * projected coordinate space.\\n   * @private\\n   * @type {import(\\\"../extent.js\\\").Extent}\\n   */\\n  this.worldExtent_ = options.worldExtent !== undefined ?\\n    options.worldExtent : null;\\n\\n  /**\\n   * @private\\n   * @type {string}\\n   */\\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\\n    options.axisOrientation : 'enu';\\n\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n  this.global_ = options.global !== undefined ? options.global : false;\\n\\n  /**\\n   * @private\\n   * @type {boolean}\\n   */\\n  this.canWrapX_ = !!(this.global_ && this.extent_);\\n\\n  /**\\n   * @private\\n   * @type {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined}\\n   */\\n  this.getPointResolutionFunc_ = options.getPointResolution;\\n\\n  /**\\n   * @private\\n   * @type {import(\\\"../tilegrid/TileGrid.js\\\").default}\\n   */\\n  this.defaultTileGrid_ = null;\\n\\n  /**\\n   * @private\\n   * @type {number|undefined}\\n   */\\n  this.metersPerUnit_ = options.metersPerUnit;\\n};\\n\\n/**\\n * @return {boolean} The projection is suitable for wrapping the x-axis\\n */\\nProjection.prototype.canWrapX = function canWrapX () {\\n  return this.canWrapX_;\\n};\\n\\n/**\\n * Get the code for this projection, e.g. 'EPSG:4326'.\\n * @return {string} Code.\\n * @api\\n */\\nProjection.prototype.getCode = function getCode () {\\n  return this.code_;\\n};\\n\\n/**\\n * Get the validity extent for this projection.\\n * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n * @api\\n */\\nProjection.prototype.getExtent = function getExtent () {\\n  return this.extent_;\\n};\\n\\n/**\\n * Get the units of this projection.\\n * @return {import(\\\"./Units.js\\\").default} Units.\\n * @api\\n */\\nProjection.prototype.getUnits = function getUnits () {\\n  return this.units_;\\n};\\n\\n/**\\n * Get the amount of meters per unit of this projection.If the projection is\\n * not configured with `metersPerUnit` or a units identifier, the return is\\n * `undefined`.\\n * @return {number|undefined} Meters.\\n * @api\\n */\\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\\n};\\n\\n/**\\n * Get the world extent for this projection.\\n * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n * @api\\n */\\nProjection.prototype.getWorldExtent = function getWorldExtent () {\\n  return this.worldExtent_;\\n};\\n\\n/**\\n * Get the axis orientation of this projection.\\n * Example values are:\\n * enu - the default easting, northing, elevation.\\n * neu - northing, easting, up - useful for \\\"lat/long\\\" geographic coordinates,\\n *   or south orientated transverse mercator.\\n * wnu - westing, northing, up - some planetary coordinate systems have\\n *   \\\"west positive\\\" coordinate systems\\n * @return {string} Axis orientation.\\n * @api\\n */\\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\\n  return this.axisOrientation_;\\n};\\n\\n/**\\n * Is this projection a global projection which spans the whole world?\\n * @return {boolean} Whether the projection is global.\\n * @api\\n */\\nProjection.prototype.isGlobal = function isGlobal () {\\n  return this.global_;\\n};\\n\\n/**\\n * Set if the projection is a global projection which spans the whole world\\n * @param {boolean} global Whether the projection is global.\\n * @api\\n */\\nProjection.prototype.setGlobal = function setGlobal (global) {\\n  this.global_ = global;\\n  this.canWrapX_ = !!(global && this.extent_);\\n};\\n\\n/**\\n * @return {import(\\\"../tilegrid/TileGrid.js\\\").default} The default tile grid.\\n */\\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\\n  return this.defaultTileGrid_;\\n};\\n\\n/**\\n * @param {import(\\\"../tilegrid/TileGrid.js\\\").default} tileGrid The default tile grid.\\n */\\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\\n  this.defaultTileGrid_ = tileGrid;\\n};\\n\\n/**\\n * Set the validity extent for this projection.\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @api\\n */\\nProjection.prototype.setExtent = function setExtent (extent) {\\n  this.extent_ = extent;\\n  this.canWrapX_ = !!(this.global_ && extent);\\n};\\n\\n/**\\n * Set the world extent for this projection.\\n * @param {import(\\\"../extent.js\\\").Extent} worldExtent World extent\\n *   [minlon, minlat, maxlon, maxlat].\\n * @api\\n */\\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\\n  this.worldExtent_ = worldExtent;\\n};\\n\\n/**\\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\\n * for this projection.\\n * @param {function(number, import(\\\"../coordinate.js\\\").Coordinate):number} func Function\\n * @api\\n */\\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\\n  this.getPointResolutionFunc_ = func;\\n};\\n\\n/**\\n * Get the custom point resolution function for this projection (if set).\\n * @return {function(number, import(\\\"../coordinate.js\\\").Coordinate):number|undefined} The custom point\\n * resolution function (if set).\\n */\\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\\n  return this.getPointResolutionFunc_;\\n};\\n\\nexport default Projection;\\n\\n//# sourceMappingURL=Projection.js.map\",\"/**\\n * @module ol/proj/epsg3857\\n */\\nimport {cosh} from '../math.js';\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n\\n\\n/**\\n * Radius of WGS84 sphere\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n\\n\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var HALF_SIZE = Math.PI * RADIUS;\\n\\n\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [\\n  -HALF_SIZE, -HALF_SIZE,\\n  HALF_SIZE, HALF_SIZE\\n];\\n\\n\\n/**\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\\n\\n\\n/**\\n * @classdesc\\n * Projection object for web/spherical Mercator (EPSG:3857).\\n */\\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\\n  function EPSG3857Projection(code) {\\n    Projection.call(this, {\\n      code: code,\\n      units: Units.METERS,\\n      extent: EXTENT,\\n      global: true,\\n      worldExtent: WORLD_EXTENT,\\n      getPointResolution: function(resolution, point) {\\n        return resolution / cosh(point[1] / RADIUS);\\n      }\\n    });\\n\\n  }\\n\\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\\n\\n  return EPSG3857Projection;\\n}(Projection));\\n\\n\\n/**\\n * Projections equal to EPSG:3857.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n  new EPSG3857Projection('EPSG:3857'),\\n  new EPSG3857Projection('EPSG:102100'),\\n  new EPSG3857Projection('EPSG:102113'),\\n  new EPSG3857Projection('EPSG:900913'),\\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\\n];\\n\\n\\n/**\\n * Transformation from EPSG:4326 to EPSG:3857.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\\n  var length = input.length;\\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n  var output = opt_output;\\n  if (output === undefined) {\\n    if (dimension > 2) {\\n      // preserve values beyond second dimension\\n      output = input.slice();\\n    } else {\\n      output = new Array(length);\\n    }\\n  }\\n  var halfSize = HALF_SIZE;\\n  for (var i = 0; i < length; i += dimension) {\\n    output[i] = halfSize * input[i] / 180;\\n    var y = RADIUS *\\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\\n    if (y > halfSize) {\\n      y = halfSize;\\n    } else if (y < -halfSize) {\\n      y = -halfSize;\\n    }\\n    output[i + 1] = y;\\n  }\\n  return output;\\n}\\n\\n\\n/**\\n * Transformation from EPSG:3857 to EPSG:4326.\\n *\\n * @param {Array<number>} input Input array of coordinate values.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension (default is `2`).\\n * @return {Array<number>} Output array of coordinate values.\\n */\\nexport function toEPSG4326(input, opt_output, opt_dimension) {\\n  var length = input.length;\\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\\n  var output = opt_output;\\n  if (output === undefined) {\\n    if (dimension > 2) {\\n      // preserve values beyond second dimension\\n      output = input.slice();\\n    } else {\\n      output = new Array(length);\\n    }\\n  }\\n  for (var i = 0; i < length; i += dimension) {\\n    output[i] = 180 * input[i] / HALF_SIZE;\\n    output[i + 1] = 360 * Math.atan(\\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\\n  }\\n  return output;\\n}\\n\\n//# sourceMappingURL=epsg3857.js.map\",\"/**\\n * @module ol/proj/epsg4326\\n */\\nimport Projection from './Projection.js';\\nimport Units from './Units.js';\\n\\n\\n/**\\n * Semi-major radius of the WGS84 ellipsoid.\\n *\\n * @const\\n * @type {number}\\n */\\nexport var RADIUS = 6378137;\\n\\n\\n/**\\n * Extent of the EPSG:4326 projection which is the whole world.\\n *\\n * @const\\n * @type {import(\\\"../extent.js\\\").Extent}\\n */\\nexport var EXTENT = [-180, -90, 180, 90];\\n\\n\\n/**\\n * @const\\n * @type {number}\\n */\\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\\n\\n\\n/**\\n * @classdesc\\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\\n *\\n * Note that OpenLayers does not strictly comply with the EPSG definition.\\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\\n */\\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\\n  function EPSG4326Projection(code, opt_axisOrientation) {\\n    Projection.call(this, {\\n      code: code,\\n      units: Units.DEGREES,\\n      extent: EXTENT,\\n      axisOrientation: opt_axisOrientation,\\n      global: true,\\n      metersPerUnit: METERS_PER_UNIT,\\n      worldExtent: EXTENT\\n    });\\n\\n  }\\n\\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\\n\\n  return EPSG4326Projection;\\n}(Projection));\\n\\n\\n/**\\n * Projections equal to EPSG:4326.\\n *\\n * @const\\n * @type {Array<import(\\\"./Projection.js\\\").default>}\\n */\\nexport var PROJECTIONS = [\\n  new EPSG4326Projection('CRS:84'),\\n  new EPSG4326Projection('EPSG:4326', 'neu'),\\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\\n];\\n\\n//# sourceMappingURL=epsg4326.js.map\",\"/**\\n * @module ol/proj/projections\\n */\\n\\n\\n/**\\n * @type {Object<string, import(\\\"./Projection.js\\\").default>}\\n */\\nvar cache = {};\\n\\n\\n/**\\n * Clear the projections cache.\\n */\\nexport function clear() {\\n  cache = {};\\n}\\n\\n\\n/**\\n * Get a cached projection by code.\\n * @param {string} code The code for the projection.\\n * @return {import(\\\"./Projection.js\\\").default} The projection (if cached).\\n */\\nexport function get(code) {\\n  return cache[code] || null;\\n}\\n\\n\\n/**\\n * Add a projection to the cache.\\n * @param {string} code The projection code.\\n * @param {import(\\\"./Projection.js\\\").default} projection The projection to cache.\\n */\\nexport function add(code, projection) {\\n  cache[code] = projection;\\n}\\n\\n//# sourceMappingURL=projections.js.map\",\"/**\\n * @module ol/proj/transforms\\n */\\nimport {isEmpty} from '../obj.js';\\n\\n\\n/**\\n * @private\\n * @type {!Object<string, Object<string, import(\\\"../proj.js\\\").TransformFunction>>}\\n */\\nvar transforms = {};\\n\\n\\n/**\\n * Clear the transform cache.\\n */\\nexport function clear() {\\n  transforms = {};\\n}\\n\\n\\n/**\\n * Registers a conversion function to convert coordinates from the source\\n * projection to the destination projection.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination.\\n * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n */\\nexport function add(source, destination, transformFn) {\\n  var sourceCode = source.getCode();\\n  var destinationCode = destination.getCode();\\n  if (!(sourceCode in transforms)) {\\n    transforms[sourceCode] = {};\\n  }\\n  transforms[sourceCode][destinationCode] = transformFn;\\n}\\n\\n\\n/**\\n * Unregisters the conversion function to convert coordinates from the source\\n * projection to the destination projection.  This method is used to clean up\\n * cached transforms during testing.\\n *\\n * @param {import(\\\"./Projection.js\\\").default} source Source projection.\\n * @param {import(\\\"./Projection.js\\\").default} destination Destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction} transformFn The unregistered transform.\\n */\\nexport function remove(source, destination) {\\n  var sourceCode = source.getCode();\\n  var destinationCode = destination.getCode();\\n  var transform = transforms[sourceCode][destinationCode];\\n  delete transforms[sourceCode][destinationCode];\\n  if (isEmpty(transforms[sourceCode])) {\\n    delete transforms[sourceCode];\\n  }\\n  return transform;\\n}\\n\\n\\n/**\\n * Get a transform given a source code and a destination code.\\n * @param {string} sourceCode The code for the source projection.\\n * @param {string} destinationCode The code for the destination projection.\\n * @return {import(\\\"../proj.js\\\").TransformFunction|undefined} The transform function (if found).\\n */\\nexport function get(sourceCode, destinationCode) {\\n  var transform;\\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\\n    transform = transforms[sourceCode][destinationCode];\\n  }\\n  return transform;\\n}\\n\\n//# sourceMappingURL=transforms.js.map\",\"/**\\n * @module ol/proj\\n */\\n\\n/**\\n * The ol/proj module stores:\\n * * a list of {@link module:ol/proj/Projection}\\n * objects, one for each projection supported by the application\\n * * a list of transform functions needed to convert coordinates in one projection\\n * into another.\\n *\\n * The static functions are the methods used to maintain these.\\n * Each transform function can handle not only simple coordinate pairs, but also\\n * large arrays of coordinates such as vector geometries.\\n *\\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\\n * for example by Bing Maps or OpenStreetMap), together with the relevant\\n * transform functions.\\n *\\n * Additional transforms may be added by using the http://proj4js.org/\\n * library (version 2.2 or later). You can use the full build supplied by\\n * Proj4js, or create a custom build to support those projections you need; see\\n * the Proj4js website for how to do this. You also need the Proj4js definitions\\n * for the required projections. These definitions can be obtained from\\n * https://epsg.io/, and are a JS function, so can be loaded in a script\\n * tag (as in the examples) or pasted into your application.\\n *\\n * After all required projection definitions are added to proj4's registry (by\\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\\n * package. Existing transforms are not changed by this function. See\\n * examples/wms-image-custom-proj for an example of this.\\n *\\n * Additional projection definitions can be registered with `proj4.defs()` any\\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\\n * know in advance what projections are needed, you can initially load minimal\\n * support and then load whichever are requested.\\n *\\n * Note that Proj4js does not support projection extents. If you want to add\\n * one for creating default tile grids, you can add it after the Projection\\n * object has been created with `setExtent`, for example,\\n * `get('EPSG:1234').setExtent(extent)`.\\n *\\n * In addition to Proj4js support, any transform functions can be added with\\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\\n * examples/wms-custom-proj for an example of this.\\n *\\n * Note that if no transforms are needed and you only need to define the\\n * projection, just add a {@link module:ol/proj/Projection} with\\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\\n * this.\\n */\\nimport {getDistance} from './sphere.js';\\nimport {applyTransform} from './extent.js';\\nimport {modulo} from './math.js';\\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\\nimport Projection from './proj/Projection.js';\\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\\nimport * as projections from './proj/projections.js';\\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\\n\\n\\n/**\\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\\n * string or undefined.\\n * @typedef {Projection|string|undefined} ProjectionLike\\n * @api\\n */\\n\\n\\n/**\\n * A transform function accepts an array of input coordinate values, an optional\\n * output array, and an optional dimension (default should be 2).  The function\\n * transforms the input coordinate values, populates the output array, and\\n * returns the output array.\\n *\\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\\n * @api\\n */\\n\\n\\nexport {METERS_PER_UNIT};\\n\\nexport {Projection};\\n\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Output coordinate array (new array, same coordinate\\n *     values).\\n */\\nexport function cloneTransform(input, opt_output, opt_dimension) {\\n  var output;\\n  if (opt_output !== undefined) {\\n    for (var i = 0, ii = input.length; i < ii; ++i) {\\n      opt_output[i] = input[i];\\n    }\\n    output = opt_output;\\n  } else {\\n    output = input.slice();\\n  }\\n  return output;\\n}\\n\\n\\n/**\\n * @param {Array<number>} input Input coordinate array.\\n * @param {Array<number>=} opt_output Output array of coordinate values.\\n * @param {number=} opt_dimension Dimension.\\n * @return {Array<number>} Input coordinate array (same array as input).\\n */\\nexport function identityTransform(input, opt_output, opt_dimension) {\\n  if (opt_output !== undefined && input !== opt_output) {\\n    for (var i = 0, ii = input.length; i < ii; ++i) {\\n      opt_output[i] = input[i];\\n    }\\n    input = opt_output;\\n  }\\n  return input;\\n}\\n\\n\\n/**\\n * Add a Projection object to the list of supported projections that can be\\n * looked up by their code.\\n *\\n * @param {Projection} projection Projection instance.\\n * @api\\n */\\nexport function addProjection(projection) {\\n  projections.add(projection.getCode(), projection);\\n  addTransformFunc(projection, projection, cloneTransform);\\n}\\n\\n\\n/**\\n * @param {Array<Projection>} projections Projections.\\n */\\nexport function addProjections(projections) {\\n  projections.forEach(addProjection);\\n}\\n\\n\\n/**\\n * Fetches a Projection object for the code specified.\\n *\\n * @param {ProjectionLike} projectionLike Either a code string which is\\n *     a combination of authority and identifier such as \\\"EPSG:4326\\\", or an\\n *     existing projection object, or undefined.\\n * @return {Projection} Projection object, or null if not in list.\\n * @api\\n */\\nexport function get(projectionLike) {\\n  return typeof projectionLike === 'string' ?\\n    projections.get(/** @type {string} */ (projectionLike)) :\\n    (/** @type {Projection} */ (projectionLike) || null);\\n}\\n\\n\\n/**\\n * Get the resolution of the point in degrees or distance units.\\n * For projections with degrees as the unit this will simply return the\\n * provided resolution. For other projections the point resolution is\\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\\n * measuring its width and height on the normal sphere,\\n * and taking the average of the width and height.\\n * A custom function can be provided for a specific projection, either\\n * by setting the `getPointResolution` option in the\\n * {@link module:ol/proj/Projection~Projection} constructor or by using\\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\\n * projection object.\\n * @param {ProjectionLike} projection The projection.\\n * @param {number} resolution Nominal resolution in projection units.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point to find adjusted resolution at.\\n * @param {Units=} opt_units Units to get the point resolution in.\\n * Default is the projection's units.\\n * @return {number} Point resolution.\\n * @api\\n */\\nexport function getPointResolution(projection, resolution, point, opt_units) {\\n  projection = get(projection);\\n  var pointResolution;\\n  var getter = projection.getPointResolutionFunc();\\n  if (getter) {\\n    pointResolution = getter(resolution, point);\\n  } else {\\n    var units = projection.getUnits();\\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\\n      pointResolution = resolution;\\n    } else {\\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\\n      // measuring its width and height on the normal sphere, and taking the\\n      // average of the width and height.\\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\\n      var vertices = [\\n        point[0] - resolution / 2, point[1],\\n        point[0] + resolution / 2, point[1],\\n        point[0], point[1] - resolution / 2,\\n        point[0], point[1] + resolution / 2\\n      ];\\n      vertices = toEPSG4326(vertices, vertices, 2);\\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\\n      pointResolution = (width + height) / 2;\\n      var metersPerUnit = opt_units ?\\n        METERS_PER_UNIT[opt_units] :\\n        projection.getMetersPerUnit();\\n      if (metersPerUnit !== undefined) {\\n        pointResolution /= metersPerUnit;\\n      }\\n    }\\n  }\\n  return pointResolution;\\n}\\n\\n\\n/**\\n * Registers transformation functions that don't alter coordinates. Those allow\\n * to transform between projections with equal meaning.\\n *\\n * @param {Array<Projection>} projections Projections.\\n * @api\\n */\\nexport function addEquivalentProjections(projections) {\\n  addProjections(projections);\\n  projections.forEach(function(source) {\\n    projections.forEach(function(destination) {\\n      if (source !== destination) {\\n        addTransformFunc(source, destination, cloneTransform);\\n      }\\n    });\\n  });\\n}\\n\\n\\n/**\\n * Registers transformation functions to convert coordinates in any projection\\n * in projection1 to any projection in projection2.\\n *\\n * @param {Array<Projection>} projections1 Projections with equal\\n *     meaning.\\n * @param {Array<Projection>} projections2 Projections with equal\\n *     meaning.\\n * @param {TransformFunction} forwardTransform Transformation from any\\n *   projection in projection1 to any projection in projection2.\\n * @param {TransformFunction} inverseTransform Transform from any projection\\n *   in projection2 to any projection in projection1..\\n */\\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\\n  projections1.forEach(function(projection1) {\\n    projections2.forEach(function(projection2) {\\n      addTransformFunc(projection1, projection2, forwardTransform);\\n      addTransformFunc(projection2, projection1, inverseTransform);\\n    });\\n  });\\n}\\n\\n\\n/**\\n * Clear all cached projections and transforms.\\n */\\nexport function clearAllProjections() {\\n  projections.clear();\\n  clearTransformFuncs();\\n}\\n\\n\\n/**\\n * @param {Projection|string|undefined} projection Projection.\\n * @param {string} defaultCode Default code.\\n * @return {Projection} Projection.\\n */\\nexport function createProjection(projection, defaultCode) {\\n  if (!projection) {\\n    return get(defaultCode);\\n  } else if (typeof projection === 'string') {\\n    return get(projection);\\n  } else {\\n    return (\\n      /** @type {Projection} */ (projection)\\n    );\\n  }\\n}\\n\\n\\n/**\\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\\n * function.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} coordTransform Coordinate\\n *     transform.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function createTransformFromCoordinateTransform(coordTransform) {\\n  return (\\n    /**\\n     * @param {Array<number>} input Input.\\n     * @param {Array<number>=} opt_output Output.\\n     * @param {number=} opt_dimension Dimension.\\n     * @return {Array<number>} Output.\\n     */\\n    function(input, opt_output, opt_dimension) {\\n      var length = input.length;\\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\\n      var output = opt_output !== undefined ? opt_output : new Array(length);\\n      for (var i = 0; i < length; i += dimension) {\\n        var point = coordTransform([input[i], input[i + 1]]);\\n        output[i] = point[0];\\n        output[i + 1] = point[1];\\n        for (var j = dimension - 1; j >= 2; --j) {\\n          output[i + j] = input[i + j];\\n        }\\n      }\\n      return output;\\n    });\\n}\\n\\n\\n/**\\n * Registers coordinate transform functions to convert coordinates between the\\n * source projection and the destination projection.\\n * The forward and inverse functions convert coordinate pairs; this function\\n * converts these into the functions used internally which also handle\\n * extents and coordinate arrays.\\n *\\n * @param {ProjectionLike} source Source projection.\\n * @param {ProjectionLike} destination Destination projection.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} forward The forward transform\\n *     function (that is, from the source projection to the destination\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @param {function(import(\\\"./coordinate.js\\\").Coordinate): import(\\\"./coordinate.js\\\").Coordinate} inverse The inverse transform\\n *     function (that is, from the destination projection to the source\\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\\n *     the transformed {@link module:ol/coordinate~Coordinate}.\\n * @api\\n */\\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\\n  var sourceProj = get(source);\\n  var destProj = get(destination);\\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\\n}\\n\\n\\n/**\\n * Transforms a coordinate from longitude/latitude to a different projection.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\\n *     an array with longitude as 1st and latitude as 2nd element.\\n * @param {ProjectionLike=} opt_projection Target projection. The\\n *     default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate projected to the target projection.\\n * @api\\n */\\nexport function fromLonLat(coordinate, opt_projection) {\\n  return transform(coordinate, 'EPSG:4326',\\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\\n}\\n\\n\\n/**\\n * Transforms a coordinate to longitude/latitude.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Projected coordinate.\\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate as longitude and latitude, i.e. an array\\n *     with longitude as 1st and latitude as 2nd element.\\n * @api\\n */\\nexport function toLonLat(coordinate, opt_projection) {\\n  var lonLat = transform(coordinate,\\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\\n  var lon = lonLat[0];\\n  if (lon < -180 || lon > 180) {\\n    lonLat[0] = modulo(lon + 180, 360) - 180;\\n  }\\n  return lonLat;\\n}\\n\\n\\n/**\\n * Checks if two projections are the same, that is every coordinate in one\\n * projection does represent the same geographic point as the same coordinate in\\n * the other projection.\\n *\\n * @param {Projection} projection1 Projection 1.\\n * @param {Projection} projection2 Projection 2.\\n * @return {boolean} Equivalent.\\n * @api\\n */\\nexport function equivalent(projection1, projection2) {\\n  if (projection1 === projection2) {\\n    return true;\\n  }\\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\\n  if (projection1.getCode() === projection2.getCode()) {\\n    return equalUnits;\\n  } else {\\n    var transformFunc = getTransformFromProjections(projection1, projection2);\\n    return transformFunc === cloneTransform && equalUnits;\\n  }\\n}\\n\\n\\n/**\\n * Searches in the list of transform functions for the function for converting\\n * coordinates from the source projection to the destination projection.\\n *\\n * @param {Projection} sourceProjection Source Projection object.\\n * @param {Projection} destinationProjection Destination Projection\\n *     object.\\n * @return {TransformFunction} Transform function.\\n */\\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\\n  var sourceCode = sourceProjection.getCode();\\n  var destinationCode = destinationProjection.getCode();\\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\\n  if (!transformFunc) {\\n    transformFunc = identityTransform;\\n  }\\n  return transformFunc;\\n}\\n\\n\\n/**\\n * Given the projection-like objects, searches for a transformation\\n * function to convert a coordinates array from the source projection to the\\n * destination projection.\\n *\\n * @param {ProjectionLike} source Source.\\n * @param {ProjectionLike} destination Destination.\\n * @return {TransformFunction} Transform function.\\n * @api\\n */\\nexport function getTransform(source, destination) {\\n  var sourceProjection = get(source);\\n  var destinationProjection = get(destination);\\n  return getTransformFromProjections(sourceProjection, destinationProjection);\\n}\\n\\n\\n/**\\n * Transforms a coordinate from source projection to destination projection.\\n * This returns a new coordinate (and does not modify the original).\\n *\\n * See {@link module:ol/proj~transformExtent} for extent transformation.\\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\\n * subclasses for geometry transforms.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Coordinate.\\n * @api\\n */\\nexport function transform(coordinate, source, destination) {\\n  var transformFunc = getTransform(source, destination);\\n  return transformFunc(coordinate, undefined, coordinate.length);\\n}\\n\\n\\n/**\\n * Transforms an extent from source projection to destination projection.  This\\n * returns a new extent (and does not modify the original).\\n *\\n * @param {import(\\\"./extent.js\\\").Extent} extent The extent to transform.\\n * @param {ProjectionLike} source Source projection-like.\\n * @param {ProjectionLike} destination Destination projection-like.\\n * @return {import(\\\"./extent.js\\\").Extent} The transformed extent.\\n * @api\\n */\\nexport function transformExtent(extent, source, destination) {\\n  var transformFunc = getTransform(source, destination);\\n  return applyTransform(extent, transformFunc);\\n}\\n\\n\\n/**\\n * Transforms the given point to the destination projection.\\n *\\n * @param {import(\\\"./coordinate.js\\\").Coordinate} point Point.\\n * @param {Projection} sourceProjection Source projection.\\n * @param {Projection} destinationProjection Destination projection.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate} Point.\\n */\\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\\n  return transformFunc(point);\\n}\\n\\n/**\\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\\n * by when this module is executed and should only need to be called again after\\n * `clearAllProjections()` is called (e.g. in tests).\\n */\\nexport function addCommon() {\\n  // Add transformations that don't alter coordinates to convert within set of\\n  // projections with equal meaning.\\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\\n  // coordinates and back.\\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\\n}\\n\\naddCommon();\\n\\n//# sourceMappingURL=proj.js.map\",\"/**\\n * @module ol/AssertionError\\n */\\nimport {VERSION} from './util.js';\\n\\n/**\\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\\n * extended with a `code` property.\\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\\n */\\nvar AssertionError = /*@__PURE__*/(function (Error) {\\n  function AssertionError(code) {\\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\\n    '/doc/errors/#' + code + ' for details.';\\n\\n    Error.call(this, message);\\n\\n    /**\\n     * Error code. The meaning of the code can be found on\\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\\n     * the version found in the OpenLayers script's header comment if a version\\n     * other than the latest is used).\\n     * @type {number}\\n     * @api\\n     */\\n    this.code = code;\\n\\n    /**\\n     * @type {string}\\n     */\\n    this.name = 'AssertionError';\\n\\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\\n    this.message = message;\\n  }\\n\\n  if ( Error ) AssertionError.__proto__ = Error;\\n  AssertionError.prototype = Object.create( Error && Error.prototype );\\n  AssertionError.prototype.constructor = AssertionError;\\n\\n  return AssertionError;\\n}(Error));\\n\\nexport default AssertionError;\\n\\n//# sourceMappingURL=AssertionError.js.map\",\"/**\\n * @module ol/ObjectEventType\\n */\\n\\n/**\\n * @enum {string}\\n */\\nexport default {\\n  /**\\n   * Triggered when a property is changed.\\n   * @event module:ol/Object.ObjectEvent#propertychange\\n   * @api\\n   */\\n  PROPERTYCHANGE: 'propertychange'\\n};\\n\\n//# sourceMappingURL=ObjectEventType.js.map\",\"/**\\n * @module ol/string\\n */\\n\\n/**\\n * @param {number} number Number to be formatted\\n * @param {number} width The desired width\\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\\n * @returns {string} Formatted string\\n */\\nexport function padNumber(number, width, opt_precision) {\\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\\n  var decimal = numberString.indexOf('.');\\n  decimal = decimal === -1 ? numberString.length : decimal;\\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\\n}\\n\\n\\n/**\\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\\n * @param {string|number} v1 First version\\n * @param {string|number} v2 Second version\\n * @returns {number} Value\\n */\\nexport function compareVersions(v1, v2) {\\n  var s1 = ('' + v1).split('.');\\n  var s2 = ('' + v2).split('.');\\n\\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\\n    var n1 = parseInt(s1[i] || '0', 10);\\n    var n2 = parseInt(s2[i] || '0', 10);\\n\\n    if (n1 > n2) {\\n      return 1;\\n    }\\n    if (n2 > n1) {\\n      return -1;\\n    }\\n  }\\n\\n  return 0;\\n}\\n\\n//# sourceMappingURL=string.js.map\",\"/**\\n * @module ol/coordinate\\n */\\nimport {modulo} from './math.js';\\nimport {padNumber} from './string.js';\\n\\n\\n/**\\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\\n * @typedef {Array<number>} Coordinate\\n * @api\\n */\\n\\n\\n/**\\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\\n * transforms it into a `{string}`.\\n *\\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\\n * @api\\n */\\n\\n\\n/**\\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {add} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     add(coord, [-2, 4]);\\n *     // coord is now [5.85, 51.983333]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {Coordinate} delta Delta.\\n * @return {Coordinate} The input coordinate adjusted by\\n * the given delta.\\n * @api\\n */\\nexport function add(coordinate, delta) {\\n  coordinate[0] += delta[0];\\n  coordinate[1] += delta[1];\\n  return coordinate;\\n}\\n\\n\\n/**\\n * Calculates the point closest to the passed coordinate on the passed circle.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {import(\\\"./geom/Circle.js\\\").default} circle The circle.\\n * @return {Coordinate} Closest point on the circumference.\\n */\\nexport function closestOnCircle(coordinate, circle) {\\n  var r = circle.getRadius();\\n  var center = circle.getCenter();\\n  var x0 = center[0];\\n  var y0 = center[1];\\n  var x1 = coordinate[0];\\n  var y1 = coordinate[1];\\n\\n  var dx = x1 - x0;\\n  var dy = y1 - y0;\\n  if (dx === 0 && dy === 0) {\\n    dx = 1;\\n  }\\n  var d = Math.sqrt(dx * dx + dy * dy);\\n\\n  var x = x0 + r * dx / d;\\n  var y = y0 + r * dy / d;\\n\\n  return [x, y];\\n}\\n\\n\\n/**\\n * Calculates the point closest to the passed coordinate on the passed segment.\\n * This is the foot of the perpendicular of the coordinate to the segment when\\n * the foot is on the segment, or the closest segment coordinate when the foot\\n * is outside the segment.\\n *\\n * @param {Coordinate} coordinate The coordinate.\\n * @param {Array<Coordinate>} segment The two coordinates\\n * of the segment.\\n * @return {Coordinate} The foot of the perpendicular of\\n * the coordinate to the segment.\\n */\\nexport function closestOnSegment(coordinate, segment) {\\n  var x0 = coordinate[0];\\n  var y0 = coordinate[1];\\n  var start = segment[0];\\n  var end = segment[1];\\n  var x1 = start[0];\\n  var y1 = start[1];\\n  var x2 = end[0];\\n  var y2 = end[1];\\n  var dx = x2 - x1;\\n  var dy = y2 - y1;\\n  var along = (dx === 0 && dy === 0) ? 0 :\\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\\n  var x, y;\\n  if (along <= 0) {\\n    x = x1;\\n    y = y1;\\n  } else if (along >= 1) {\\n    x = x2;\\n    y = y2;\\n  } else {\\n    x = x1 + along * dx;\\n    y = y1 + along * dy;\\n  }\\n  return [x, y];\\n}\\n\\n\\n/**\\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\\n * used to format\\n * a {Coordinate} to a string.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY();\\n *     var out = stringifyFunc(coord);\\n *     // out is now '8, 48'\\n *\\n * Example with explicitly specifying 2 fractional digits:\\n *\\n *     import {createStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var stringifyFunc = createStringXY(2);\\n *     var out = stringifyFunc(coord);\\n *     // out is now '7.85, 47.98'\\n *\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {CoordinateFormat} Coordinate format.\\n * @api\\n */\\nexport function createStringXY(opt_fractionDigits) {\\n  return (\\n    /**\\n     * @param {Coordinate} coordinate Coordinate.\\n     * @return {string} String XY.\\n     */\\n    function(coordinate) {\\n      return toStringXY(coordinate, opt_fractionDigits);\\n    }\\n  );\\n}\\n\\n\\n/**\\n * @param {string} hemispheres Hemispheres.\\n * @param {number} degrees Degrees.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} String.\\n */\\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\\n  var x = Math.abs(3600 * normalizedDegrees);\\n  var dflPrecision = opt_fractionDigits || 0;\\n  var precision = Math.pow(10, dflPrecision);\\n\\n  var deg = Math.floor(x / 3600);\\n  var min = Math.floor((x - deg * 3600) / 60);\\n  var sec = x - (deg * 3600) - (min * 60);\\n  sec = Math.ceil(sec * precision) / precision;\\n\\n  if (sec >= 60) {\\n    sec = 0;\\n    min += 1;\\n  }\\n\\n  if (min >= 60) {\\n    min = 0;\\n    deg += 1;\\n  }\\n\\n  return deg + '\\\\u00b0 ' + padNumber(min, 2) + '\\\\u2032 ' +\\n    padNumber(sec, 2, dflPrecision) + '\\\\u2033' +\\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\\n}\\n\\n\\n/**\\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\\n * using the given string template. The strings `{x}` and `{y}` in the template\\n * will be replaced with the first and second coordinate values respectively.\\n *\\n * Example without specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template);\\n *     // out is now 'Coordinate is (8|48).'\\n *\\n * Example explicitly specifying the fractional digits:\\n *\\n *     import {format} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var template = 'Coordinate is ({x}|{y}).';\\n *     var out = format(coord, template, 2);\\n *     // out is now 'Coordinate is (7.85|47.98).'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {string} template A template string with `{x}` and `{y}` placeholders\\n *     that will be replaced by first and second coordinate values.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Formatted coordinate.\\n * @api\\n */\\nexport function format(coordinate, template, opt_fractionDigits) {\\n  if (coordinate) {\\n    return template\\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\\n  } else {\\n    return '';\\n  }\\n}\\n\\n\\n/**\\n * @param {Coordinate} coordinate1 First coordinate.\\n * @param {Coordinate} coordinate2 Second coordinate.\\n * @return {boolean} The two coordinates are equal.\\n */\\nexport function equals(coordinate1, coordinate2) {\\n  var equals = true;\\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\\n    if (coordinate1[i] != coordinate2[i]) {\\n      equals = false;\\n      break;\\n    }\\n  }\\n  return equals;\\n}\\n\\n\\n/**\\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\\n * returned by the function.\\n *\\n * Example:\\n *\\n *     import {rotate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var rotateRadians = Math.PI / 2; // 90 degrees\\n *     rotate(coord, rotateRadians);\\n *     // coord is now [-47.983333, 7.85]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} angle Angle in radian.\\n * @return {Coordinate} Coordinate.\\n * @api\\n */\\nexport function rotate(coordinate, angle) {\\n  var cosAngle = Math.cos(angle);\\n  var sinAngle = Math.sin(angle);\\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\\n  coordinate[0] = x;\\n  coordinate[1] = y;\\n  return coordinate;\\n}\\n\\n\\n/**\\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\\n * by the function.\\n *\\n * Example:\\n *\\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var scale = 1.2;\\n *     scaleCoordinate(coord, scale);\\n *     // coord is now [9.42, 57.5799996]\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number} scale Scale factor.\\n * @return {Coordinate} Coordinate.\\n */\\nexport function scale(coordinate, scale) {\\n  coordinate[0] *= scale;\\n  coordinate[1] *= scale;\\n  return coordinate;\\n}\\n\\n\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Squared distance between coord1 and coord2.\\n */\\nexport function squaredDistance(coord1, coord2) {\\n  var dx = coord1[0] - coord2[0];\\n  var dy = coord1[1] - coord2[1];\\n  return dx * dx + dy * dy;\\n}\\n\\n\\n/**\\n * @param {Coordinate} coord1 First coordinate.\\n * @param {Coordinate} coord2 Second coordinate.\\n * @return {number} Distance between coord1 and coord2.\\n */\\nexport function distance(coord1, coord2) {\\n  return Math.sqrt(squaredDistance(coord1, coord2));\\n}\\n\\n\\n/**\\n * Calculate the squared distance from a coordinate to a line segment.\\n *\\n * @param {Coordinate} coordinate Coordinate of the point.\\n * @param {Array<Coordinate>} segment Line segment (2\\n * coordinates).\\n * @return {number} Squared distance from the point to the line segment.\\n */\\nexport function squaredDistanceToSegment(coordinate, segment) {\\n  return squaredDistance(coordinate,\\n    closestOnSegment(coordinate, segment));\\n}\\n\\n\\n/**\\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\\n * seconds.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord);\\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringHDMS} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringHDMS(coord, 1);\\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} Hemisphere, degrees, minutes and seconds.\\n * @api\\n */\\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\\n  if (coordinate) {\\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\\n  } else {\\n    return '';\\n  }\\n}\\n\\n\\n/**\\n * Format a coordinate as a comma delimited string.\\n *\\n * Example without specifying fractional digits:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord);\\n *     // out is now '8, 48'\\n *\\n * Example explicitly specifying 1 fractional digit:\\n *\\n *     import {toStringXY} from 'ol/coordinate';\\n *\\n *     var coord = [7.85, 47.983333];\\n *     var out = toStringXY(coord, 1);\\n *     // out is now '7.8, 48.0'\\n *\\n * @param {Coordinate} coordinate Coordinate.\\n * @param {number=} opt_fractionDigits The number of digits to include\\n *    after the decimal point. Default is `0`.\\n * @return {string} XY.\\n * @api\\n */\\nexport function toStringXY(coordinate, opt_fractionDigits) {\\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\\n}\\n\\n//# sourceMappingURL=coordinate.js.map\",\"/**\\n * @module ol/Feature\\n */\\nimport {assert} from './asserts.js';\\nimport {listen, unlisten, unlistenByKey} from './events.js';\\nimport EventType from './events/EventType.js';\\nimport BaseObject, {getChangeEventType} from './Object.js';\\n\\n/**\\n * @typedef {typeof Feature|typeof import(\\\"./render/Feature.js\\\").default} FeatureClass\\n */\\n\\n/**\\n * @typedef {Feature|import(\\\"./render/Feature.js\\\").default} FeatureLike\\n */\\n\\n/**\\n * @classdesc\\n * A vector object for geographic features with a geometry and other\\n * attribute properties, similar to the features in vector file formats like\\n * GeoJSON.\\n *\\n * Features can be styled individually with `setStyle`; otherwise they use the\\n * style of their vector layer.\\n *\\n * Note that attribute properties are set as {@link module:ol/Object} properties on\\n * the feature object, so they are observable, and have get/set accessors.\\n *\\n * Typically, a feature has a single geometry property. You can set the\\n * geometry using the `setGeometry` method and get it with `getGeometry`.\\n * It is possible to store more than one geometry on a feature using attribute\\n * properties. By default, the geometry used for rendering is identified by\\n * the property name `geometry`. If you want to use another geometry property\\n * for rendering, use the `setGeometryName` method to change the attribute\\n * property associated with the geometry for the feature.  For example:\\n *\\n * ```js\\n *\\n * import Feature from 'ol/Feature';\\n * import Polygon from 'ol/geom/Polygon';\\n * import Point from 'ol/geom/Point';\\n *\\n * var feature = new Feature({\\n *   geometry: new Polygon(polyCoords),\\n *   labelPoint: new Point(labelCoords),\\n *   name: 'My Polygon'\\n * });\\n *\\n * // get the polygon geometry\\n * var poly = feature.getGeometry();\\n *\\n * // Render the feature as a point using the coordinates from labelPoint\\n * feature.setGeometryName('labelPoint');\\n *\\n * // get the point geometry\\n * var point = feature.getGeometry();\\n * ```\\n *\\n * @api\\n */\\nvar Feature = /*@__PURE__*/(function (BaseObject) {\\n  function Feature(opt_geometryOrProperties) {\\n\\n    BaseObject.call(this);\\n\\n    /**\\n     * @private\\n     * @type {number|string|undefined}\\n     */\\n    this.id_ = undefined;\\n\\n    /**\\n     * @type {string}\\n     * @private\\n     */\\n    this.geometryName_ = 'geometry';\\n\\n    /**\\n     * User provided style.\\n     * @private\\n     * @type {import(\\\"./style/Style.js\\\").StyleLike}\\n     */\\n    this.style_ = null;\\n\\n    /**\\n     * @private\\n     * @type {import(\\\"./style/Style.js\\\").StyleFunction|undefined}\\n     */\\n    this.styleFunction_ = undefined;\\n\\n    /**\\n     * @private\\n     * @type {?import(\\\"./events.js\\\").EventsKey}\\n     */\\n    this.geometryChangeKey_ = null;\\n\\n    listen(\\n      this, getChangeEventType(this.geometryName_),\\n      this.handleGeometryChanged_, this);\\n\\n    if (opt_geometryOrProperties) {\\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\\n        var geometry = /** @type {import(\\\"./geom/Geometry.js\\\").default} */ (opt_geometryOrProperties);\\n        this.setGeometry(geometry);\\n      } else {\\n        /** @type {Object<string, *>} */\\n        var properties = opt_geometryOrProperties;\\n        this.setProperties(properties);\\n      }\\n    }\\n  }\\n\\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\\n  Feature.prototype.constructor = Feature;\\n\\n  /**\\n   * Clone this feature. If the original feature has a geometry it\\n   * is also cloned. The feature id is not set in the clone.\\n   * @return {Feature} The clone.\\n   * @api\\n   */\\n  Feature.prototype.clone = function clone () {\\n    var clone = new Feature(this.getProperties());\\n    clone.setGeometryName(this.getGeometryName());\\n    var geometry = this.getGeometry();\\n    if (geometry) {\\n      clone.setGeometry(geometry.clone());\\n    }\\n    var style = this.getStyle();\\n    if (style) {\\n      clone.setStyle(style);\\n    }\\n    return clone;\\n  };\\n\\n  /**\\n   * Get the feature's default geometry.  A feature may have any number of named\\n   * geometries.  The \\\"default\\\" geometry (the one that is rendered by default) is\\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\\n   * @return {import(\\\"./geom/Geometry.js\\\").default|undefined} The default geometry for the feature.\\n   * @api\\n   * @observable\\n   */\\n  Feature.prototype.getGeometry = function getGeometry () {\\n    return (\\n      /** @type {import(\\\"./geom/Geometry.js\\\").default|undefined} */ (this.get(this.geometryName_))\\n    );\\n  };\\n\\n  /**\\n   * Get the feature identifier.  This is a stable identifier for the feature and\\n   * is either set when reading data from a remote source or set explicitly by\\n   * calling {@link module:ol/Feature~Feature#setId}.\\n   * @return {number|string|undefined} Id.\\n   * @api\\n   */\\n  Feature.prototype.getId = function getId () {\\n    return this.id_;\\n  };\\n\\n  /**\\n   * Get the name of the feature's default geometry.  By default, the default\\n   * geometry is named `geometry`.\\n   * @return {string} Get the property name associated with the default geometry\\n   *     for this feature.\\n   * @api\\n   */\\n  Feature.prototype.getGeometryName = function getGeometryName () {\\n    return this.geometryName_;\\n  };\\n\\n  /**\\n   * Get the feature's style. Will return what was provided to the\\n   * {@link module:ol/Feature~Feature#setStyle} method.\\n   * @return {import(\\\"./style/Style.js\\\").StyleLike} The feature style.\\n   * @api\\n   */\\n  Feature.prototype.getStyle = function getStyle () {\\n    return this.style_;\\n  };\\n\\n  /**\\n   * Get the feature's style function.\\n   * @return {import(\\\"./style/Style.js\\\").StyleFunction|undefined} Return a function\\n   * representing the current style of this feature.\\n   * @api\\n   */\\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\\n    return this.styleFunction_;\\n  };\\n\\n  /**\\n   * @private\\n   */\\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\\n    this.changed();\\n  };\\n\\n  /**\\n   * @private\\n   */\\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\\n    if (this.geometryChangeKey_) {\\n      unlistenByKey(this.geometryChangeKey_);\\n      this.geometryChangeKey_ = null;\\n    }\\n    var geometry = this.getGeometry();\\n    if (geometry) {\\n      this.geometryChangeKey_ = listen(geometry,\\n        EventType.CHANGE, this.handleGeometryChange_, this);\\n    }\\n    this.changed();\\n  };\\n\\n  /**\\n   * Set the default geometry for the feature.  This will update the property\\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\\n   * @param {import(\\\"./geom/Geometry.js\\\").default|undefined} geometry The new geometry.\\n   * @api\\n   * @observable\\n   */\\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\\n    this.set(this.geometryName_, geometry);\\n  };\\n\\n  /**\\n   * Set the style for the feature.  This can be a single style object, an array\\n   * of styles, or a function that takes a resolution and returns an array of\\n   * styles. If it is `null` the feature has no style (a `null` style).\\n   * @param {import(\\\"./style/Style.js\\\").StyleLike} style Style for this feature.\\n   * @api\\n   * @fires module:ol/events/Event~Event#event:change\\n   */\\n  Feature.prototype.setStyle = function setStyle (style) {\\n    this.style_ = style;\\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\\n    this.changed();\\n  };\\n\\n  /**\\n   * Set the feature id.  The feature id is considered stable and may be used when\\n   * requesting features or comparing identifiers returned from a remote source.\\n   * The feature id can be used with the\\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\\n   * @param {number|string|undefined} id The feature id.\\n   * @api\\n   * @fires module:ol/events/Event~Event#event:change\\n   */\\n  Feature.prototype.setId = function setId (id) {\\n    this.id_ = id;\\n    this.changed();\\n  };\\n\\n  /**\\n   * Set the property name to be used when getting the feature's default geometry.\\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\\n   * this name will be returned.\\n   * @param {string} name The property name of the default geometry.\\n   * @api\\n   */\\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\\n    unlisten(\\n      this, getChangeEventType(this.geometryName_),\\n      this.handleGeometryChanged_, this);\\n    this.geometryName_ = name;\\n    listen(\\n      this, getChangeEventType(this.geometryName_),\\n      this.handleGeometryChanged_, this);\\n    this.handleGeometryChanged_();\\n  };\\n\\n  return Feature;\\n}(BaseObject));\\n\\n\\n/**\\n * Convert the provided object into a feature style function.  Functions passed\\n * through unchanged.  Arrays of Style or single style objects wrapped\\n * in a new feature style function.\\n * @param {!import(\\\"./style/Style.js\\\").StyleFunction|!Array<import(\\\"./style/Style.js\\\").default>|!import(\\\"./style/Style.js\\\").default} obj\\n *     A feature style function, a single style, or an array of styles.\\n * @return {import(\\\"./style/Style.js\\\").StyleFunction} A style function.\\n */\\nexport function createStyleFunction(obj) {\\n  if (typeof obj === 'function') {\\n    return obj;\\n  } else {\\n    /**\\n     * @type {Array<import(\\\"./style/Style.js\\\").default>}\\n     */\\n    var styles;\\n    if (Array.isArray(obj)) {\\n      styles = obj;\\n    } else {\\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\\n        41); // Expected an `import(\\\"./style/Style.js\\\").Style` or an array of `import(\\\"./style/Style.js\\\").Style`\\n      var style = /** @type {import(\\\"./style/Style.js\\\").default} */ (obj);\\n      styles = [style];\\n    }\\n    return function() {\\n      return styles;\\n    };\\n  }\\n}\\nexport default Feature;\\n\\n//# sourceMappingURL=Feature.js.map\",\"/**\\n * @module ol/geom/flat/transform\\n */\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {import(\\\"../../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\\n  var dest = opt_dest ? opt_dest : [];\\n  var i = 0;\\n  for (var j = offset; j < end; j += stride) {\\n    var x = flatCoordinates[j];\\n    var y = flatCoordinates[j + 1];\\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\\n  }\\n  if (opt_dest && dest.length != i) {\\n    dest.length = i;\\n  }\\n  return dest;\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} angle Angle.\\n * @param {Array<number>} anchor Rotation anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\\n  var dest = opt_dest ? opt_dest : [];\\n  var cos = Math.cos(angle);\\n  var sin = Math.sin(angle);\\n  var anchorX = anchor[0];\\n  var anchorY = anchor[1];\\n  var i = 0;\\n  for (var j = offset; j < end; j += stride) {\\n    var deltaX = flatCoordinates[j] - anchorX;\\n    var deltaY = flatCoordinates[j + 1] - anchorY;\\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\\n    for (var k = j + 2; k < j + stride; ++k) {\\n      dest[i++] = flatCoordinates[k];\\n    }\\n  }\\n  if (opt_dest && dest.length != i) {\\n    dest.length = i;\\n  }\\n  return dest;\\n}\\n\\n\\n/**\\n * Scale the coordinates.\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} sx Scale factor in the x-direction.\\n * @param {number} sy Scale factor in the y-direction.\\n * @param {Array<number>} anchor Scale anchor point.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\\n  var dest = opt_dest ? opt_dest : [];\\n  var anchorX = anchor[0];\\n  var anchorY = anchor[1];\\n  var i = 0;\\n  for (var j = offset; j < end; j += stride) {\\n    var deltaX = flatCoordinates[j] - anchorX;\\n    var deltaY = flatCoordinates[j + 1] - anchorY;\\n    dest[i++] = anchorX + sx * deltaX;\\n    dest[i++] = anchorY + sy * deltaY;\\n    for (var k = j + 2; k < j + stride; ++k) {\\n      dest[i++] = flatCoordinates[k];\\n    }\\n  }\\n  if (opt_dest && dest.length != i) {\\n    dest.length = i;\\n  }\\n  return dest;\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {number} end End.\\n * @param {number} stride Stride.\\n * @param {number} deltaX Delta X.\\n * @param {number} deltaY Delta Y.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed coordinates.\\n */\\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\\n  var dest = opt_dest ? opt_dest : [];\\n  var i = 0;\\n  for (var j = offset; j < end; j += stride) {\\n    dest[i++] = flatCoordinates[j] + deltaX;\\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\\n    for (var k = j + 2; k < j + stride; ++k) {\\n      dest[i++] = flatCoordinates[k];\\n    }\\n  }\\n  if (opt_dest && dest.length != i) {\\n    dest.length = i;\\n  }\\n  return dest;\\n}\\n\\n//# sourceMappingURL=transform.js.map\",\"/**\\n * @module ol/transform\\n */\\nimport {assert} from './asserts.js';\\n\\n\\n/**\\n * An array representing an affine 2d transformation for use with\\n * {@link module:ol/transform} functions. The array has 6 elements.\\n * @typedef {!Array<number>} Transform\\n */\\n\\n\\n/**\\n * Collection of affine 2d transformation functions. The functions work on an\\n * array of 6 elements. The element order is compatible with the [SVGMatrix\\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\\n * a subset (elements a to f) of a 3×3 matrix:\\n * ```\\n * [ a c e ]\\n * [ b d f ]\\n * [ 0 0 1 ]\\n * ```\\n */\\n\\n\\n/**\\n * @private\\n * @type {Transform}\\n */\\nvar tmp_ = new Array(6);\\n\\n\\n/**\\n * Create an identity transform.\\n * @return {!Transform} Identity transform.\\n */\\nexport function create() {\\n  return [1, 0, 0, 1, 0, 0];\\n}\\n\\n\\n/**\\n * Resets the given transform to an identity transform.\\n * @param {!Transform} transform Transform.\\n * @return {!Transform} Transform.\\n */\\nexport function reset(transform) {\\n  return set(transform, 1, 0, 0, 1, 0, 0);\\n}\\n\\n\\n/**\\n * Multiply the underlying matrices of two transforms and return the result in\\n * the first transform.\\n * @param {!Transform} transform1 Transform parameters of matrix 1.\\n * @param {!Transform} transform2 Transform parameters of matrix 2.\\n * @return {!Transform} transform1 multiplied with transform2.\\n */\\nexport function multiply(transform1, transform2) {\\n  var a1 = transform1[0];\\n  var b1 = transform1[1];\\n  var c1 = transform1[2];\\n  var d1 = transform1[3];\\n  var e1 = transform1[4];\\n  var f1 = transform1[5];\\n  var a2 = transform2[0];\\n  var b2 = transform2[1];\\n  var c2 = transform2[2];\\n  var d2 = transform2[3];\\n  var e2 = transform2[4];\\n  var f2 = transform2[5];\\n\\n  transform1[0] = a1 * a2 + c1 * b2;\\n  transform1[1] = b1 * a2 + d1 * b2;\\n  transform1[2] = a1 * c2 + c1 * d2;\\n  transform1[3] = b1 * c2 + d1 * d2;\\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\\n\\n  return transform1;\\n}\\n\\n/**\\n * Set the transform components a-f on a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} a The a component of the transform.\\n * @param {number} b The b component of the transform.\\n * @param {number} c The c component of the transform.\\n * @param {number} d The d component of the transform.\\n * @param {number} e The e component of the transform.\\n * @param {number} f The f component of the transform.\\n * @return {!Transform} Matrix with transform applied.\\n */\\nexport function set(transform, a, b, c, d, e, f) {\\n  transform[0] = a;\\n  transform[1] = b;\\n  transform[2] = c;\\n  transform[3] = d;\\n  transform[4] = e;\\n  transform[5] = f;\\n  return transform;\\n}\\n\\n\\n/**\\n * Set transform on one matrix from another matrix.\\n * @param {!Transform} transform1 Matrix to set transform to.\\n * @param {!Transform} transform2 Matrix to set transform from.\\n * @return {!Transform} transform1 with transform from transform2 applied.\\n */\\nexport function setFromArray(transform1, transform2) {\\n  transform1[0] = transform2[0];\\n  transform1[1] = transform2[1];\\n  transform1[2] = transform2[2];\\n  transform1[3] = transform2[3];\\n  transform1[4] = transform2[4];\\n  transform1[5] = transform2[5];\\n  return transform1;\\n}\\n\\n\\n/**\\n * Transforms the given coordinate with the given transform returning the\\n * resulting, transformed coordinate. The coordinate will be modified in-place.\\n *\\n * @param {Transform} transform The transformation.\\n * @param {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} coordinate The coordinate to transform.\\n * @return {import(\\\"./coordinate.js\\\").Coordinate|import(\\\"./pixel.js\\\").Pixel} return coordinate so that operations can be\\n *     chained together.\\n */\\nexport function apply(transform, coordinate) {\\n  var x = coordinate[0];\\n  var y = coordinate[1];\\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\\n  return coordinate;\\n}\\n\\n\\n/**\\n * Applies rotation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} angle Angle in radians.\\n * @return {!Transform} The rotated transform.\\n */\\nexport function rotate(transform, angle) {\\n  var cos = Math.cos(angle);\\n  var sin = Math.sin(angle);\\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\\n}\\n\\n\\n/**\\n * Applies scale to a given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} x Scale factor x.\\n * @param {number} y Scale factor y.\\n * @return {!Transform} The scaled transform.\\n */\\nexport function scale(transform, x, y) {\\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\\n}\\n\\n\\n/**\\n * Applies translation to the given transform.\\n * @param {!Transform} transform Transform.\\n * @param {number} dx Translation x.\\n * @param {number} dy Translation y.\\n * @return {!Transform} The translated transform.\\n */\\nexport function translate(transform, dx, dy) {\\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\\n}\\n\\n\\n/**\\n * Creates a composite transform given an initial translation, scale, rotation, and\\n * final translation (in that order only, not commutative).\\n * @param {!Transform} transform The transform (will be modified in place).\\n * @param {number} dx1 Initial translation x.\\n * @param {number} dy1 Initial translation y.\\n * @param {number} sx Scale factor x.\\n * @param {number} sy Scale factor y.\\n * @param {number} angle Rotation (in counter-clockwise radians).\\n * @param {number} dx2 Final translation x.\\n * @param {number} dy2 Final translation y.\\n * @return {!Transform} The composite transform.\\n */\\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\\n  var sin = Math.sin(angle);\\n  var cos = Math.cos(angle);\\n  transform[0] = sx * cos;\\n  transform[1] = sy * sin;\\n  transform[2] = -sx * sin;\\n  transform[3] = sy * cos;\\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\\n  return transform;\\n}\\n\\n\\n/**\\n * Invert the given transform.\\n * @param {!Transform} transform Transform.\\n * @return {!Transform} Inverse of the transform.\\n */\\nexport function invert(transform) {\\n  var det = determinant(transform);\\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\\n\\n  var a = transform[0];\\n  var b = transform[1];\\n  var c = transform[2];\\n  var d = transform[3];\\n  var e = transform[4];\\n  var f = transform[5];\\n\\n  transform[0] = d / det;\\n  transform[1] = -b / det;\\n  transform[2] = -c / det;\\n  transform[3] = a / det;\\n  transform[4] = (c * f - d * e) / det;\\n  transform[5] = -(a * f - b * e) / det;\\n\\n  return transform;\\n}\\n\\n\\n/**\\n * Returns the determinant of the given matrix.\\n * @param {!Transform} mat Matrix.\\n * @return {number} Determinant.\\n */\\nexport function determinant(mat) {\\n  return mat[0] * mat[3] - mat[1] * mat[2];\\n}\\n\\n//# sourceMappingURL=transform.js.map\",\"/**\\n * @module ol/geom/Geometry\\n */\\nimport {abstract} from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\\nimport {transform2D} from './flat/transform.js';\\nimport {get as getProjection, getTransform} from '../proj.js';\\nimport Units from '../proj/Units.js';\\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\\n\\n\\n/**\\n * @type {import(\\\"../transform.js\\\").Transform}\\n */\\nvar tmpTransform = createTransform();\\n\\n\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for vector geometries.\\n *\\n * To get notified of changes to the geometry, register a listener for the\\n * generic `change` event on your geometry instance.\\n *\\n * @abstract\\n * @api\\n */\\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\\n  function Geometry() {\\n\\n    BaseObject.call(this);\\n\\n    /**\\n     * @private\\n     * @type {import(\\\"../extent.js\\\").Extent}\\n     */\\n    this.extent_ = createEmpty();\\n\\n    /**\\n     * @private\\n     * @type {number}\\n     */\\n    this.extentRevision_ = -1;\\n\\n    /**\\n     * @protected\\n     * @type {Object<string, Geometry>}\\n     */\\n    this.simplifiedGeometryCache = {};\\n\\n    /**\\n     * @protected\\n     * @type {number}\\n     */\\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n\\n    /**\\n     * @protected\\n     * @type {number}\\n     */\\n    this.simplifiedGeometryRevision = 0;\\n\\n  }\\n\\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\\n  Geometry.prototype.constructor = Geometry;\\n\\n  /**\\n   * Make a complete copy of the geometry.\\n   * @abstract\\n   * @return {!Geometry} Clone.\\n   */\\n  Geometry.prototype.clone = function clone () {\\n    return abstract();\\n  };\\n\\n  /**\\n   * @abstract\\n   * @param {number} x X.\\n   * @param {number} y Y.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} closestPoint Closest point.\\n   * @param {number} minSquaredDistance Minimum squared distance.\\n   * @return {number} Minimum squared distance.\\n   */\\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\\n    return abstract();\\n  };\\n\\n  /**\\n   * @param {number} x X.\\n   * @param {number} y Y.\\n   * @return {boolean} Contains (x, y).\\n   */\\n  Geometry.prototype.containsXY = function containsXY (x, y) {\\n    return false;\\n  };\\n\\n  /**\\n   * Return the closest point of the geometry to the passed point as\\n   * {@link module:ol/coordinate~Coordinate coordinate}.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} point Point.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_closestPoint Closest point.\\n   * @return {import(\\\"../coordinate.js\\\").Coordinate} Closest point.\\n   * @api\\n   */\\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\\n    return closestPoint;\\n  };\\n\\n  /**\\n   * Returns true if this geometry includes the specified coordinate. If the\\n   * coordinate is on the boundary of the geometry, returns false.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n   * @return {boolean} Contains coordinate.\\n   * @api\\n   */\\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\\n    return this.containsXY(coordinate[0], coordinate[1]);\\n  };\\n\\n  /**\\n   * @abstract\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @protected\\n   * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   */\\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Get the extent of the geometry.\\n   * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n   * @return {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @api\\n   */\\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\\n    if (this.extentRevision_ != this.getRevision()) {\\n      this.extent_ = this.computeExtent(this.extent_);\\n      this.extentRevision_ = this.getRevision();\\n    }\\n    return returnOrUpdate(this.extent_, opt_extent);\\n  };\\n\\n  /**\\n   * Rotate the geometry around a given coordinate. This modifies the geometry\\n   * coordinates in place.\\n   * @abstract\\n   * @param {number} angle Rotation angle in radians.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} anchor The rotation center.\\n   * @api\\n   */\\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\\n    abstract();\\n  };\\n\\n  /**\\n   * Scale the geometry (with an optional origin).  This modifies the geometry\\n   * coordinates in place.\\n   * @abstract\\n   * @param {number} sx The scaling factor in the x-direction.\\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\\n   *     sx).\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate=} opt_anchor The scale origin (defaults to the center\\n   *     of the geometry extent).\\n   * @api\\n   */\\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\\n    abstract();\\n  };\\n\\n  /**\\n   * Create a simplified version of this geometry.  For linestrings, this uses\\n   * the the {@link\\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\\n   * simplification is used to preserve topology.\\n   * @param {number} tolerance The tolerance distance for simplification.\\n   * @return {Geometry} A new, simplified version of the original geometry.\\n   * @api\\n   */\\n  Geometry.prototype.simplify = function simplify (tolerance) {\\n    return this.getSimplifiedGeometry(tolerance * tolerance);\\n  };\\n\\n  /**\\n   * Create a simplified version of this geometry using the Douglas Peucker\\n   * algorithm.\\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\\n   * @abstract\\n   * @param {number} squaredTolerance Squared tolerance.\\n   * @return {Geometry} Simplified geometry.\\n   */\\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Get the type of this geometry.\\n   * @abstract\\n   * @return {import(\\\"./GeometryType.js\\\").default} Geometry type.\\n   */\\n  Geometry.prototype.getType = function getType () {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Apply a transform function to each coordinate of the geometry.\\n   * The geometry is modified in place.\\n   * If you do not want the geometry modified in place, first `clone()` it and\\n   * then use this function on the clone.\\n   * @abstract\\n   * @param {import(\\\"../proj.js\\\").TransformFunction} transformFn Transform.\\n   */\\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\\n    abstract();\\n  };\\n\\n  /**\\n   * Test if the geometry and the passed extent intersect.\\n   * @abstract\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @return {boolean} `true` if the geometry and the extent intersect.\\n   */\\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\\n   * instead you want a new geometry, first `clone()` this geometry.\\n   * @abstract\\n   * @param {number} deltaX Delta X.\\n   * @param {number} deltaY Delta Y.\\n   * @api\\n   */\\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\\n    abstract();\\n  };\\n\\n  /**\\n   * Transform each coordinate of the geometry from one coordinate reference\\n   * system to another. The geometry is modified in place.\\n   * For example, a line will be transformed to a line and a circle to a circle.\\n   * If you do not want the geometry modified in place, first `clone()` it and\\n   * then use this function on the clone.\\n   *\\n   * @param {import(\\\"../proj.js\\\").ProjectionLike} source The current projection.  Can be a\\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n   * @param {import(\\\"../proj.js\\\").ProjectionLike} destination The desired projection.  Can be a\\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\\n   * @return {Geometry} This geometry.  Note that original geometry is\\n   *     modified in place.\\n   * @api\\n   */\\n  Geometry.prototype.transform = function transform (source, destination) {\\n    /** @type {import(\\\"../proj/Projection.js\\\").default} */\\n    var sourceProj = getProjection(source);\\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\\n      function(inCoordinates, outCoordinates, stride) {\\n        var pixelExtent = sourceProj.getExtent();\\n        var projectedExtent = sourceProj.getWorldExtent();\\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\\n        composeTransform(tmpTransform,\\n          projectedExtent[0], projectedExtent[3],\\n          scale, -scale, 0,\\n          0, 0);\\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\\n          tmpTransform, outCoordinates);\\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\\n      } :\\n      getTransform(sourceProj, destination);\\n    this.applyTransform(transformFn);\\n    return this;\\n  };\\n\\n  return Geometry;\\n}(BaseObject));\\n\\n\\nexport default Geometry;\\n\\n//# sourceMappingURL=Geometry.js.map\",\"/**\\n * @module ol/geom/GeometryLayout\\n */\\n\\n/**\\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\\n * @enum {string}\\n */\\nexport default {\\n  XY: 'XY',\\n  XYZ: 'XYZ',\\n  XYM: 'XYM',\\n  XYZM: 'XYZM'\\n};\\n\\n//# sourceMappingURL=GeometryLayout.js.map\",\"/**\\n * @module ol/geom/SimpleGeometry\\n */\\nimport {abstract} from '../util.js';\\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\\nimport Geometry from './Geometry.js';\\nimport GeometryLayout from './GeometryLayout.js';\\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\\nimport {clear} from '../obj.js';\\n\\n/**\\n * @classdesc\\n * Abstract base class; only used for creating subclasses; do not instantiate\\n * in apps, as cannot be rendered.\\n *\\n * @abstract\\n * @api\\n */\\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\\n  function SimpleGeometry() {\\n\\n    Geometry.call(this);\\n\\n    /**\\n     * @protected\\n     * @type {GeometryLayout}\\n     */\\n    this.layout = GeometryLayout.XY;\\n\\n    /**\\n     * @protected\\n     * @type {number}\\n     */\\n    this.stride = 2;\\n\\n    /**\\n     * @protected\\n     * @type {Array<number>}\\n     */\\n    this.flatCoordinates = null;\\n\\n  }\\n\\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\\n      0, this.flatCoordinates.length, this.stride, extent);\\n  };\\n\\n  /**\\n   * @abstract\\n   * @return {Array} Coordinates.\\n   */\\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Return the first coordinate of the geometry.\\n   * @return {import(\\\"../coordinate.js\\\").Coordinate} First coordinate.\\n   * @api\\n   */\\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\\n    return this.flatCoordinates.slice(0, this.stride);\\n  };\\n\\n  /**\\n   * @return {Array<number>} Flat coordinates.\\n   */\\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\\n    return this.flatCoordinates;\\n  };\\n\\n  /**\\n   * Return the last coordinate of the geometry.\\n   * @return {import(\\\"../coordinate.js\\\").Coordinate} Last point.\\n   * @api\\n   */\\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\\n  };\\n\\n  /**\\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\\n   * @return {GeometryLayout} Layout.\\n   * @api\\n   */\\n  SimpleGeometry.prototype.getLayout = function getLayout () {\\n    return this.layout;\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\\n      clear(this.simplifiedGeometryCache);\\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\\n      this.simplifiedGeometryRevision = this.getRevision();\\n    }\\n    // If squaredTolerance is negative or if we know that simplification will not\\n    // have any effect then just return this.\\n    if (squaredTolerance < 0 ||\\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\\n      return this;\\n    }\\n    var key = squaredTolerance.toString();\\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\\n      return this.simplifiedGeometryCache[key];\\n    } else {\\n      var simplifiedGeometry =\\n          this.getSimplifiedGeometryInternal(squaredTolerance);\\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\\n        return simplifiedGeometry;\\n      } else {\\n        // Simplification did not actually remove any coordinates.  We now know\\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\\n        // than or equal to the current squaredTolerance will also not have any\\n        // effect.  This allows us to short circuit simplification (saving CPU\\n        // cycles) and prevents the cache of simplified geometries from filling\\n        // up with useless identical copies of this geometry (saving memory).\\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\\n        return this;\\n      }\\n    }\\n  };\\n\\n  /**\\n   * @param {number} squaredTolerance Squared tolerance.\\n   * @return {SimpleGeometry} Simplified geometry.\\n   * @protected\\n   */\\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\\n    return this;\\n  };\\n\\n  /**\\n   * @return {number} Stride.\\n   */\\n  SimpleGeometry.prototype.getStride = function getStride () {\\n    return this.stride;\\n  };\\n\\n  /**\\n   * @param {GeometryLayout} layout Layout.\\n   * @param {Array<number>} flatCoordinates Flat coordinates.\\n   */\\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\\n    this.stride = getStrideForLayout(layout);\\n    this.layout = layout;\\n    this.flatCoordinates = flatCoordinates;\\n  };\\n\\n  /**\\n   * @abstract\\n   * @param {!Array} coordinates Coordinates.\\n   * @param {GeometryLayout=} opt_layout Layout.\\n   */\\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\\n    abstract();\\n  };\\n\\n  /**\\n   * @param {GeometryLayout|undefined} layout Layout.\\n   * @param {Array} coordinates Coordinates.\\n   * @param {number} nesting Nesting.\\n   * @protected\\n   */\\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\\n    /** @type {number} */\\n    var stride;\\n    if (layout) {\\n      stride = getStrideForLayout(layout);\\n    } else {\\n      for (var i = 0; i < nesting; ++i) {\\n        if (coordinates.length === 0) {\\n          this.layout = GeometryLayout.XY;\\n          this.stride = 2;\\n          return;\\n        } else {\\n          coordinates = /** @type {Array} */ (coordinates[0]);\\n        }\\n      }\\n      stride = coordinates.length;\\n      layout = getLayoutForStride(stride);\\n    }\\n    this.layout = layout;\\n    this.stride = stride;\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\\n    if (this.flatCoordinates) {\\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\\n      this.changed();\\n    }\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\\n    var flatCoordinates = this.getFlatCoordinates();\\n    if (flatCoordinates) {\\n      var stride = this.getStride();\\n      rotate(\\n        flatCoordinates, 0, flatCoordinates.length,\\n        stride, angle, anchor, flatCoordinates);\\n      this.changed();\\n    }\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\\n    var sy = opt_sy;\\n    if (sy === undefined) {\\n      sy = sx;\\n    }\\n    var anchor = opt_anchor;\\n    if (!anchor) {\\n      anchor = getCenter(this.getExtent());\\n    }\\n    var flatCoordinates = this.getFlatCoordinates();\\n    if (flatCoordinates) {\\n      var stride = this.getStride();\\n      scale(\\n        flatCoordinates, 0, flatCoordinates.length,\\n        stride, sx, sy, anchor, flatCoordinates);\\n      this.changed();\\n    }\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\\n    var flatCoordinates = this.getFlatCoordinates();\\n    if (flatCoordinates) {\\n      var stride = this.getStride();\\n      translate(\\n        flatCoordinates, 0, flatCoordinates.length, stride,\\n        deltaX, deltaY, flatCoordinates);\\n      this.changed();\\n    }\\n  };\\n\\n  return SimpleGeometry;\\n}(Geometry));\\n\\n\\n/**\\n * @param {number} stride Stride.\\n * @return {GeometryLayout} layout Layout.\\n */\\nfunction getLayoutForStride(stride) {\\n  var layout;\\n  if (stride == 2) {\\n    layout = GeometryLayout.XY;\\n  } else if (stride == 3) {\\n    layout = GeometryLayout.XYZ;\\n  } else if (stride == 4) {\\n    layout = GeometryLayout.XYZM;\\n  }\\n  return (\\n    /** @type {GeometryLayout} */ (layout)\\n  );\\n}\\n\\n\\n/**\\n * @param {GeometryLayout} layout Layout.\\n * @return {number} Stride.\\n */\\nexport function getStrideForLayout(layout) {\\n  var stride;\\n  if (layout == GeometryLayout.XY) {\\n    stride = 2;\\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\\n    stride = 3;\\n  } else if (layout == GeometryLayout.XYZM) {\\n    stride = 4;\\n  }\\n  return /** @type {number} */ (stride);\\n}\\n\\n\\n/**\\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\\n * @param {import(\\\"../transform.js\\\").Transform} transform Transform.\\n * @param {Array<number>=} opt_dest Destination.\\n * @return {Array<number>} Transformed flat coordinates.\\n */\\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\\n  if (!flatCoordinates) {\\n    return null;\\n  } else {\\n    var stride = simpleGeometry.getStride();\\n    return transform2D(\\n      flatCoordinates, 0, flatCoordinates.length, stride,\\n      transform, opt_dest);\\n  }\\n}\\n\\nexport default SimpleGeometry;\\n\\n//# sourceMappingURL=SimpleGeometry.js.map\",\"/**\\n * @module ol/geom/Point\\n */\\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\\nimport GeometryType from './GeometryType.js';\\nimport SimpleGeometry from './SimpleGeometry.js';\\nimport {deflateCoordinate} from './flat/deflate.js';\\nimport {squaredDistance as squaredDx} from '../math.js';\\n\\n/**\\n * @classdesc\\n * Point geometry.\\n *\\n * @api\\n */\\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\\n  function Point(coordinates, opt_layout) {\\n    SimpleGeometry.call(this);\\n    this.setCoordinates(coordinates, opt_layout);\\n  }\\n\\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\\n  Point.prototype.constructor = Point;\\n\\n  /**\\n   * Make a complete copy of the geometry.\\n   * @return {!Point} Clone.\\n   * @override\\n   * @api\\n   */\\n  Point.prototype.clone = function clone () {\\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\\n    return point;\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\\n    var flatCoordinates = this.flatCoordinates;\\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\\n    if (squaredDistance < minSquaredDistance) {\\n      var stride = this.stride;\\n      for (var i = 0; i < stride; ++i) {\\n        closestPoint[i] = flatCoordinates[i];\\n      }\\n      closestPoint.length = stride;\\n      return squaredDistance;\\n    } else {\\n      return minSquaredDistance;\\n    }\\n  };\\n\\n  /**\\n   * Return the coordinate of the point.\\n   * @return {import(\\\"../coordinate.js\\\").Coordinate} Coordinates.\\n   * @override\\n   * @api\\n   */\\n  Point.prototype.getCoordinates = function getCoordinates () {\\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  Point.prototype.computeExtent = function computeExtent (extent) {\\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  Point.prototype.getType = function getType () {\\n    return GeometryType.POINT;\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   * @api\\n   */\\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\\n    this.setLayout(opt_layout, coordinates, 0);\\n    if (!this.flatCoordinates) {\\n      this.flatCoordinates = [];\\n    }\\n    this.flatCoordinates.length = deflateCoordinate(\\n      this.flatCoordinates, 0, coordinates, this.stride);\\n    this.changed();\\n  };\\n\\n  return Point;\\n}(SimpleGeometry));\\n\\n\\nexport default Point;\\n\\n//# sourceMappingURL=Point.js.map\",\"/**\\n * @module ol/geom/flat/deflate\\n */\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {import(\\\"../../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\\n    flatCoordinates[offset++] = coordinate[i];\\n  }\\n  return offset;\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<import(\\\"../../coordinate.js\\\").Coordinate>} coordinates Coordinates.\\n * @param {number} stride Stride.\\n * @return {number} offset Offset.\\n */\\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\\n    var coordinate = coordinates[i];\\n    for (var j = 0; j < stride; ++j) {\\n      flatCoordinates[offset++] = coordinate[j];\\n    }\\n  }\\n  return offset;\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>} coordinatess Coordinatess.\\n * @param {number} stride Stride.\\n * @param {Array<number>=} opt_ends Ends.\\n * @return {Array<number>} Ends.\\n */\\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\\n  var ends = opt_ends ? opt_ends : [];\\n  var i = 0;\\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\\n    var end = deflateCoordinates(\\n      flatCoordinates, offset, coordinatess[j], stride);\\n    ends[i++] = end;\\n    offset = end;\\n  }\\n  ends.length = i;\\n  return ends;\\n}\\n\\n\\n/**\\n * @param {Array<number>} flatCoordinates Flat coordinates.\\n * @param {number} offset Offset.\\n * @param {Array<Array<Array<import(\\\"../../coordinate.js\\\").Coordinate>>>} coordinatesss Coordinatesss.\\n * @param {number} stride Stride.\\n * @param {Array<Array<number>>=} opt_endss Endss.\\n * @return {Array<Array<number>>} Endss.\\n */\\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\\n  var endss = opt_endss ? opt_endss : [];\\n  var i = 0;\\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\\n    var ends = deflateCoordinatesArray(\\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\\n    endss[i++] = ends;\\n    offset = ends[ends.length - 1];\\n  }\\n  endss.length = i;\\n  return endss;\\n}\\n\\n//# sourceMappingURL=deflate.js.map\",\"'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\\\"value\\\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\\n\\nvar _util = require('ol/util.js');\\n\\nvar _Cluster2 = require('ol/source/Cluster.js');\\n\\nvar _Cluster3 = _interopRequireDefault(_Cluster2);\\n\\nvar _proj = require('ol/proj.js');\\n\\nvar _extent = require('ol/extent.js');\\n\\nvar _Point = require('ol/geom/Point.js');\\n\\nvar _Point2 = _interopRequireDefault(_Point);\\n\\nvar _Feature = require('ol/Feature.js');\\n\\nvar _Feature2 = _interopRequireDefault(_Feature);\\n\\nvar _coordinate = require('ol/coordinate.js');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**\\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * @module n2es6/ol5support/N2Cluster\\nn\\n/**\\n * @classdesc\\n * Layer source to cluster vector data. Working module for nunaliit webgis\\n * system\\n * @api\\n */\\nvar N2Cluster = function (_Cluster) {\\n  _inherits(N2Cluster, _Cluster);\\n\\n  /**\\n   * @param {Options} options CLuster options\\n   */\\n  function N2Cluster(options) {\\n    _classCallCheck(this, N2Cluster);\\n\\n    /**\\n     * @type {number|undefined}\\n     * @protected\\n     */\\n    var _this = _possibleConstructorReturn(this, (N2Cluster.__proto__ || Object.getPrototypeOf(N2Cluster)).call(this, options));\\n\\n    _this.distance = options.distance !== undefined ? options.distance : 20;\\n\\n    /**\\n     * @type {number}\\n     */\\n    _this.minimumPolygonPixelSize = options.minimumPolygonPixelSize !== undefined ? options.minimumPolygonPixelSize : _this.distance;\\n\\n    /**\\n     * @type {number}\\n     */\\n    _this.minimumLinePixelSize = options.minimumLinePixelSize !== undefined ? options.minimumLinePixelSize : _this.distance;\\n\\n    /**\\n     * @type {boolean}\\n     */\\n    _this.disableDynamicClustering = options.disableDynamicClustering !== undefined ? options.disableDynamicClustering : false;\\n\\n    /**\\n     * @type {boolean}\\n     */\\n    _this.clusterPointsOnly = options.clusterPointsOnly !== undefined ? options.clusterPointsOnly : false;\\n\\n    /**\\n     * @type {number}\\n     */\\n    _this.threshold = options.threshold !== undefined ? options.threshold : null;\\n\\n    /**\\n     *  @type {number}\\n     */\\n    _this.resolution = 1;\\n\\n    /**\\n     *  @type {string}\\n     */\\n    _this.projection = null;\\n\\n    /**\\n     * @type {string}\\n     */\\n    _this.clusterPrefix = options.clusterPrefix;\\n\\n    /**\\n     * @type {number}\\n     */\\n    _this.clusterId = 1;\\n\\n    return _this;\\n  }\\n  /**\\n   * Loading the feature from the layer source, and config the resolution and projection\\n   * @override\\n   */\\n\\n\\n  _createClass(N2Cluster, [{\\n    key: 'loadFeatures',\\n    value: function loadFeatures(extent, resolution, projection) {\\n      this.source.loadFeatures(extent, resolution, projection);\\n      if (resolution !== this.resolution) {\\n        this.clear();\\n        this.resolution = resolution;\\n        this.projection = projection;\\n        this.cluster();\\n        this.addFeatures(this.features);\\n      }\\n    }\\n\\n    /**\\n     * The cluster function for cluster Point, Line and Geometry\\n     * @override\\n     */\\n\\n  }, {\\n    key: 'cluster',\\n    value: function cluster() {\\n      var _this2 = this;\\n\\n      var that_ = this;\\n      if (this.resolution === undefined) {\\n        return;\\n      }\\n      this.features.length = 0;\\n      var extent = (0, _extent.createEmpty)();\\n      var mapDistance = this.distance * this.resolution;\\n      var features = this.source.getFeatures();\\n      /**\\n      * @type {!Object<string, boolean>}\\n      */\\n      var clustered = {};\\n      var ineligibleList = {};\\n\\n      var _loop = function _loop(i, ii) {\\n        var feature = features[i];\\n        var uid = (0, _util.getUid)(feature);\\n        if (!_this2._isEligibleFeature(feature)) {\\n          ineligibleList[uid] = true;\\n          _this2.features.push(feature);\\n          return 'continue';\\n        }\\n        if (!((0, _util.getUid)(feature) in clustered)) {\\n\\n          var coordinates = (0, _extent.getCenter)(feature.getGeometry().computeExtent());\\n          (0, _extent.createOrUpdateFromCoordinate)(coordinates, extent);\\n          (0, _extent.buffer)(extent, mapDistance, extent);\\n\\n          var neighbors = _this2.source.getFeaturesInExtent(extent);\\n          neighbors = neighbors.filter(function (neighbor) {\\n            var uid = (0, _util.getUid)(neighbor);\\n            if (!(uid in clustered) && !(uid in ineligibleList || !that_._isEligibleFeature(feature))) {\\n              clustered[uid] = true;\\n              return true;\\n            } else {\\n              return false;\\n            }\\n          });\\n          _this2.features.push(_this2.createCluster(neighbors));\\n        }\\n      };\\n\\n      for (var i = 0, ii = features.length; i < ii; i++) {\\n        var _ret = _loop(i, ii);\\n\\n        if (_ret === 'continue') continue;\\n      }\\n    }\\n\\n    /**\\n     * @param {Array<Feature>} features Features\\n     * @return {Feature} The cluster feature.\\n     * @protected\\n     */\\n\\n  }, {\\n    key: 'createCluster',\\n    value: function createCluster(features) {\\n\\n      var centroid = [0, 0];\\n      for (var i = features.length - 1; i >= 0; --i) {\\n        var centerDelta = (0, _extent.getCenter)(features[i].getGeometry().computeExtent());\\n        if (centerDelta) {\\n          (0, _coordinate.add)(centroid, centerDelta);\\n        }\\n      }\\n      (0, _coordinate.scale)(centroid, 1 / features.length);\\n\\n      var cluster = new _Feature2.default(new _Point2.default(centroid));\\n      cluster.set('features', features);\\n      cluster.set('fid', this.clusterPrefix + this.clusterId);\\n      ++this.clusterId;\\n      return cluster;\\n    }\\n\\n    /**\\n     * @param {Feature} feature The feature from source\\n     * @return {boolean} true if a feature is eligible feature to be clustered\\n     * @protected\\n     */\\n\\n  }, {\\n    key: '_isEligibleFeature',\\n    value: function _isEligibleFeature(feature) {\\n      if (feature.n2DisableClustering) {\\n        return false;\\n      }\\n\\n      // By default, cluster everything\\n      var eligible = true;\\n\\n      if (!this.disableDynamicClustering) {\\n        // Dynamic Clustering\\n        // Small polygons and lines are turned into a cluster\\n        eligible = false;\\n\\n        var extent = this._computeFullBoundingBox(feature);\\n        if (extent) {\\n          // If the original bounds are larger than what is expected\\n          // by the resolution, do not cluster. At one point, the correct\\n          // geometry will arrive to show this feature.\\n          var xLen = (extent[2] - extent[0]) / this.resolution;\\n          var yLen = (extent[3] - extent[1]) / this.resolution;\\n          if (xLen < this.minimumLinePixelSize && yLen < this.minimumLinePixelSize) {\\n            eligible = true;\\n          }\\n        } else {\\n          // We are unable to compute the bounds for this feature.\\n          // Use the geometry for the purpose of clustering\\n          if (feature.getGeometry().getType().indexOf('Point') >= 0) {\\n            eligible = true;\\n          } else {\\n            var bounds = feature.getGeometry().computeExtent();\\n\\n            var _xLen = (bounds[2] - bounds[0]) / this.resolution;\\n            var _yLen = (bounds[3] - bounds[1]) / this.resolution;\\n            if (_xLen < this.minimumLinePixelSize && _yLen < this.minimumLinePixelSize) {\\n              eligible = true;\\n            }\\n          }\\n        }\\n      } else if (this.clusterPointsOnly) {\\n        // Cluster Point Only\\n        // Do not cluster polygons and lines\\n        eligible = false;\\n        if (feature.getGeometry().getType().indexOf('Point') >= 0) {\\n          eligible = true;\\n        }\\n      }\\n\\n      return eligible;\\n    }\\n\\n    /**\\n     * Compute the bounding box of the original geometry. This may differ from\\n     * the bounding box of the geometry on the feature since this can be a\\n     * simplification.\\n     * @param {Feature} f The bounding box value from nunaliit project, which considers both the simplified geometries and original one.\\n     * @return {Array<number>} Extent\\n     * @protected\\n     */\\n\\n  }, {\\n    key: '_computeFullBoundingBox',\\n    value: function _computeFullBoundingBox(f) {\\n      return this._ComputeFeatureOriginalBboxForMapProjection(f, this.projection);\\n    }\\n  }, {\\n    key: '_ComputeFeatureOriginalBboxForMapProjection',\\n    value: function _ComputeFeatureOriginalBboxForMapProjection(f, mapProj) {\\n      // Each feature has a projection stored at f.n2GeomProj\\n      // that represents the original projection for a feature\\n      //\\n      // Each feature has a property named 'n2ConvertedBbox' that contains\\n      // the full geometry bbox converted for the map projection, if\\n      // already computed.\\n\\n      if (f && f.n2ConvertedBbox) {\\n        return f.n2ConvertedBbox;\\n      }\\n\\n      var geomBounds = undefined;\\n      if (f.data && f.data.nunaliit_geom && f.data.nunaliit_geom.bbox && f.n2GeomProj && mapProj) {\\n\\n        var bbox = f.data.nunaliit_geom.bbox;\\n        if (Array.isArray(bbox) && bbox.length >= 4) {\\n          geomBounds = bbox;\\n\\n          if (mapProj.getCode() !== f.n2GeomProj.getCode) {\\n            geomBounds = (0, _proj.transformExtent)(bbox, f.n2GeomProj, mapProj);\\n          }\\n\\n          f.n2ConvertedBbox = geomBounds;\\n        }\\n      }\\n\\n      return geomBounds;\\n    }\\n  }]);\\n\\n  return N2Cluster;\\n}(_Cluster3.default);\\n\\nexports.default = N2Cluster;\",\"'use strict';\\n\\nmodule.exports = rbush;\\nmodule.exports.default = rbush;\\n\\nvar quickselect = require('quickselect');\\n\\nfunction rbush(maxEntries, format) {\\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\\n\\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\\n    this._maxEntries = Math.max(4, maxEntries || 9);\\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\\n\\n    if (format) {\\n        this._initFormat(format);\\n    }\\n\\n    this.clear();\\n}\\n\\nrbush.prototype = {\\n\\n    all: function () {\\n        return this._all(this.data, []);\\n    },\\n\\n    search: function (bbox) {\\n\\n        var node = this.data,\\n            result = [],\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return result;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf) result.push(child);\\n                    else if (contains(bbox, childBBox)) this._all(child, result);\\n                    else nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return result;\\n    },\\n\\n    collides: function (bbox) {\\n\\n        var node = this.data,\\n            toBBox = this.toBBox;\\n\\n        if (!intersects(bbox, node)) return false;\\n\\n        var nodesToSearch = [],\\n            i, len, child, childBBox;\\n\\n        while (node) {\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n\\n                child = node.children[i];\\n                childBBox = node.leaf ? toBBox(child) : child;\\n\\n                if (intersects(bbox, childBBox)) {\\n                    if (node.leaf || contains(bbox, childBBox)) return true;\\n                    nodesToSearch.push(child);\\n                }\\n            }\\n            node = nodesToSearch.pop();\\n        }\\n\\n        return false;\\n    },\\n\\n    load: function (data) {\\n        if (!(data && data.length)) return this;\\n\\n        if (data.length < this._minEntries) {\\n            for (var i = 0, len = data.length; i < len; i++) {\\n                this.insert(data[i]);\\n            }\\n            return this;\\n        }\\n\\n        // recursively build the tree with the given data from scratch using OMT algorithm\\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\\n\\n        if (!this.data.children.length) {\\n            // save as is if tree is empty\\n            this.data = node;\\n\\n        } else if (this.data.height === node.height) {\\n            // split root if trees have the same height\\n            this._splitRoot(this.data, node);\\n\\n        } else {\\n            if (this.data.height < node.height) {\\n                // swap trees if inserted one is bigger\\n                var tmpNode = this.data;\\n                this.data = node;\\n                node = tmpNode;\\n            }\\n\\n            // insert the small tree into the large tree at appropriate level\\n            this._insert(node, this.data.height - node.height - 1, true);\\n        }\\n\\n        return this;\\n    },\\n\\n    insert: function (item) {\\n        if (item) this._insert(item, this.data.height - 1);\\n        return this;\\n    },\\n\\n    clear: function () {\\n        this.data = createNode([]);\\n        return this;\\n    },\\n\\n    remove: function (item, equalsFn) {\\n        if (!item) return this;\\n\\n        var node = this.data,\\n            bbox = this.toBBox(item),\\n            path = [],\\n            indexes = [],\\n            i, parent, index, goingUp;\\n\\n        // depth-first iterative tree traversal\\n        while (node || path.length) {\\n\\n            if (!node) { // go up\\n                node = path.pop();\\n                parent = path[path.length - 1];\\n                i = indexes.pop();\\n                goingUp = true;\\n            }\\n\\n            if (node.leaf) { // check current node\\n                index = findItem(item, node.children, equalsFn);\\n\\n                if (index !== -1) {\\n                    // item found, remove the item and condense tree upwards\\n                    node.children.splice(index, 1);\\n                    path.push(node);\\n                    this._condense(path);\\n                    return this;\\n                }\\n            }\\n\\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\\n                path.push(node);\\n                indexes.push(i);\\n                i = 0;\\n                parent = node;\\n                node = node.children[0];\\n\\n            } else if (parent) { // go right\\n                i++;\\n                node = parent.children[i];\\n                goingUp = false;\\n\\n            } else node = null; // nothing found\\n        }\\n\\n        return this;\\n    },\\n\\n    toBBox: function (item) { return item; },\\n\\n    compareMinX: compareNodeMinX,\\n    compareMinY: compareNodeMinY,\\n\\n    toJSON: function () { return this.data; },\\n\\n    fromJSON: function (data) {\\n        this.data = data;\\n        return this;\\n    },\\n\\n    _all: function (node, result) {\\n        var nodesToSearch = [];\\n        while (node) {\\n            if (node.leaf) result.push.apply(result, node.children);\\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\\n\\n            node = nodesToSearch.pop();\\n        }\\n        return result;\\n    },\\n\\n    _build: function (items, left, right, height) {\\n\\n        var N = right - left + 1,\\n            M = this._maxEntries,\\n            node;\\n\\n        if (N <= M) {\\n            // reached leaf level; return leaf\\n            node = createNode(items.slice(left, right + 1));\\n            calcBBox(node, this.toBBox);\\n            return node;\\n        }\\n\\n        if (!height) {\\n            // target height of the bulk-loaded tree\\n            height = Math.ceil(Math.log(N) / Math.log(M));\\n\\n            // target number of root entries to maximize storage utilization\\n            M = Math.ceil(N / Math.pow(M, height - 1));\\n        }\\n\\n        node = createNode([]);\\n        node.leaf = false;\\n        node.height = height;\\n\\n        // split the items into M mostly square tiles\\n\\n        var N2 = Math.ceil(N / M),\\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\\n            i, j, right2, right3;\\n\\n        multiSelect(items, left, right, N1, this.compareMinX);\\n\\n        for (i = left; i <= right; i += N1) {\\n\\n            right2 = Math.min(i + N1 - 1, right);\\n\\n            multiSelect(items, i, right2, N2, this.compareMinY);\\n\\n            for (j = i; j <= right2; j += N2) {\\n\\n                right3 = Math.min(j + N2 - 1, right2);\\n\\n                // pack each entry recursively\\n                node.children.push(this._build(items, j, right3, height - 1));\\n            }\\n        }\\n\\n        calcBBox(node, this.toBBox);\\n\\n        return node;\\n    },\\n\\n    _chooseSubtree: function (bbox, node, level, path) {\\n\\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\\n\\n        while (true) {\\n            path.push(node);\\n\\n            if (node.leaf || path.length - 1 === level) break;\\n\\n            minArea = minEnlargement = Infinity;\\n\\n            for (i = 0, len = node.children.length; i < len; i++) {\\n                child = node.children[i];\\n                area = bboxArea(child);\\n                enlargement = enlargedArea(bbox, child) - area;\\n\\n                // choose entry with the least area enlargement\\n                if (enlargement < minEnlargement) {\\n                    minEnlargement = enlargement;\\n                    minArea = area < minArea ? area : minArea;\\n                    targetNode = child;\\n\\n                } else if (enlargement === minEnlargement) {\\n                    // otherwise choose one with the smallest area\\n                    if (area < minArea) {\\n                        minArea = area;\\n                        targetNode = child;\\n                    }\\n                }\\n            }\\n\\n            node = targetNode || node.children[0];\\n        }\\n\\n        return node;\\n    },\\n\\n    _insert: function (item, level, isNode) {\\n\\n        var toBBox = this.toBBox,\\n            bbox = isNode ? item : toBBox(item),\\n            insertPath = [];\\n\\n        // find the best node for accommodating the item, saving all nodes along the path too\\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\\n\\n        // put the item into the node\\n        node.children.push(item);\\n        extend(node, bbox);\\n\\n        // split on node overflow; propagate upwards if necessary\\n        while (level >= 0) {\\n            if (insertPath[level].children.length > this._maxEntries) {\\n                this._split(insertPath, level);\\n                level--;\\n            } else break;\\n        }\\n\\n        // adjust bboxes along the insertion path\\n        this._adjustParentBBoxes(bbox, insertPath, level);\\n    },\\n\\n    // split overflowed node into two\\n    _split: function (insertPath, level) {\\n\\n        var node = insertPath[level],\\n            M = node.children.length,\\n            m = this._minEntries;\\n\\n        this._chooseSplitAxis(node, m, M);\\n\\n        var splitIndex = this._chooseSplitIndex(node, m, M);\\n\\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\\n        newNode.height = node.height;\\n        newNode.leaf = node.leaf;\\n\\n        calcBBox(node, this.toBBox);\\n        calcBBox(newNode, this.toBBox);\\n\\n        if (level) insertPath[level - 1].children.push(newNode);\\n        else this._splitRoot(node, newNode);\\n    },\\n\\n    _splitRoot: function (node, newNode) {\\n        // split root node\\n        this.data = createNode([node, newNode]);\\n        this.data.height = node.height + 1;\\n        this.data.leaf = false;\\n        calcBBox(this.data, this.toBBox);\\n    },\\n\\n    _chooseSplitIndex: function (node, m, M) {\\n\\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\\n\\n        minOverlap = minArea = Infinity;\\n\\n        for (i = m; i <= M - m; i++) {\\n            bbox1 = distBBox(node, 0, i, this.toBBox);\\n            bbox2 = distBBox(node, i, M, this.toBBox);\\n\\n            overlap = intersectionArea(bbox1, bbox2);\\n            area = bboxArea(bbox1) + bboxArea(bbox2);\\n\\n            // choose distribution with minimum overlap\\n            if (overlap < minOverlap) {\\n                minOverlap = overlap;\\n                index = i;\\n\\n                minArea = area < minArea ? area : minArea;\\n\\n            } else if (overlap === minOverlap) {\\n                // otherwise choose distribution with minimum area\\n                if (area < minArea) {\\n                    minArea = area;\\n                    index = i;\\n                }\\n            }\\n        }\\n\\n        return index;\\n    },\\n\\n    // sorts node children by the best axis for split\\n    _chooseSplitAxis: function (node, m, M) {\\n\\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\\n\\n        // if total distributions margin value is minimal for x, sort by minX,\\n        // otherwise it's already sorted by minY\\n        if (xMargin < yMargin) node.children.sort(compareMinX);\\n    },\\n\\n    // total margin of all possible split distributions where each node is at least m full\\n    _allDistMargin: function (node, m, M, compare) {\\n\\n        node.children.sort(compare);\\n\\n        var toBBox = this.toBBox,\\n            leftBBox = distBBox(node, 0, m, toBBox),\\n            rightBBox = distBBox(node, M - m, M, toBBox),\\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\\n            i, child;\\n\\n        for (i = m; i < M - m; i++) {\\n            child = node.children[i];\\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(leftBBox);\\n        }\\n\\n        for (i = M - m - 1; i >= m; i--) {\\n            child = node.children[i];\\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\\n            margin += bboxMargin(rightBBox);\\n        }\\n\\n        return margin;\\n    },\\n\\n    _adjustParentBBoxes: function (bbox, path, level) {\\n        // adjust bboxes along the given tree path\\n        for (var i = level; i >= 0; i--) {\\n            extend(path[i], bbox);\\n        }\\n    },\\n\\n    _condense: function (path) {\\n        // go through the path, removing empty nodes and updating bboxes\\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\\n            if (path[i].children.length === 0) {\\n                if (i > 0) {\\n                    siblings = path[i - 1].children;\\n                    siblings.splice(siblings.indexOf(path[i]), 1);\\n\\n                } else this.clear();\\n\\n            } else calcBBox(path[i], this.toBBox);\\n        }\\n    },\\n\\n    _initFormat: function (format) {\\n        // data format (minX, minY, maxX, maxY accessors)\\n\\n        // uses eval-type function compilation instead of just accepting a toBBox function\\n        // because the algorithms are very sensitive to sorting functions performance,\\n        // so they should be dead simple and without inner calls\\n\\n        var compareArr = ['return a', ' - b', ';'];\\n\\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\\n\\n        this.toBBox = new Function('a',\\n            'return {minX: a' + format[0] +\\n            ', minY: a' + format[1] +\\n            ', maxX: a' + format[2] +\\n            ', maxY: a' + format[3] + '};');\\n    }\\n};\\n\\nfunction findItem(item, items, equalsFn) {\\n    if (!equalsFn) return items.indexOf(item);\\n\\n    for (var i = 0; i < items.length; i++) {\\n        if (equalsFn(item, items[i])) return i;\\n    }\\n    return -1;\\n}\\n\\n// calculate node's bbox from bboxes of its children\\nfunction calcBBox(node, toBBox) {\\n    distBBox(node, 0, node.children.length, toBBox, node);\\n}\\n\\n// min bounding rectangle of node children from k to p-1\\nfunction distBBox(node, k, p, toBBox, destNode) {\\n    if (!destNode) destNode = createNode(null);\\n    destNode.minX = Infinity;\\n    destNode.minY = Infinity;\\n    destNode.maxX = -Infinity;\\n    destNode.maxY = -Infinity;\\n\\n    for (var i = k, child; i < p; i++) {\\n        child = node.children[i];\\n        extend(destNode, node.leaf ? toBBox(child) : child);\\n    }\\n\\n    return destNode;\\n}\\n\\nfunction extend(a, b) {\\n    a.minX = Math.min(a.minX, b.minX);\\n    a.minY = Math.min(a.minY, b.minY);\\n    a.maxX = Math.max(a.maxX, b.maxX);\\n    a.maxY = Math.max(a.maxY, b.maxY);\\n    return a;\\n}\\n\\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\\n\\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\\n\\nfunction enlargedArea(a, b) {\\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\\n}\\n\\nfunction intersectionArea(a, b) {\\n    var minX = Math.max(a.minX, b.minX),\\n        minY = Math.max(a.minY, b.minY),\\n        maxX = Math.min(a.maxX, b.maxX),\\n        maxY = Math.min(a.maxY, b.maxY);\\n\\n    return Math.max(0, maxX - minX) *\\n           Math.max(0, maxY - minY);\\n}\\n\\nfunction contains(a, b) {\\n    return a.minX <= b.minX &&\\n           a.minY <= b.minY &&\\n           b.maxX <= a.maxX &&\\n           b.maxY <= a.maxY;\\n}\\n\\nfunction intersects(a, b) {\\n    return b.minX <= a.maxX &&\\n           b.minY <= a.maxY &&\\n           b.maxX >= a.minX &&\\n           b.maxY >= a.minY;\\n}\\n\\nfunction createNode(children) {\\n    return {\\n        children: children,\\n        height: 1,\\n        leaf: true,\\n        minX: Infinity,\\n        minY: Infinity,\\n        maxX: -Infinity,\\n        maxY: -Infinity\\n    };\\n}\\n\\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\\n// combines selection algorithm with binary divide & conquer approach\\n\\nfunction multiSelect(arr, left, right, n, compare) {\\n    var stack = [left, right],\\n        mid;\\n\\n    while (stack.length) {\\n        right = stack.pop();\\n        left = stack.pop();\\n\\n        if (right - left <= n) continue;\\n\\n        mid = left + Math.ceil((right - left) / n / 2) * n;\\n        quickselect(arr, mid, left, right, compare);\\n\\n        stack.push(left, mid, mid, right);\\n    }\\n}\\n\",\"import $n2es6$ol5support$N2Cluster from './n2es6/ol5support/N2Cluster';\\n\\nimport nunaliit2 from './n2es6/n2core/nunaliit2.js';\\n\\nvar n2es6 = {};\\n\\nn2es6.ol5support = {};\\nn2es6.ol5support.N2Cluster = $n2es6$ol5support$N2Cluster;\\n\\nexport default n2es6;\",\"(function (global, factory) {\\n\\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\\n\\ttypeof define === 'function' && define.amd ? define(factory) :\\n\\t(global.quickselect = factory());\\n}(this, (function () { 'use strict';\\n\\nfunction quickselect(arr, k, left, right, compare) {\\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\\n}\\n\\nfunction quickselectStep(arr, k, left, right, compare) {\\n\\n    while (right > left) {\\n        if (right - left > 600) {\\n            var n = right - left + 1;\\n            var m = k - left + 1;\\n            var z = Math.log(n);\\n            var s = 0.5 * Math.exp(2 * z / 3);\\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\\n            quickselectStep(arr, k, newLeft, newRight, compare);\\n        }\\n\\n        var t = arr[k];\\n        var i = left;\\n        var j = right;\\n\\n        swap(arr, left, k);\\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\\n\\n        while (i < j) {\\n            swap(arr, i, j);\\n            i++;\\n            j--;\\n            while (compare(arr[i], t) < 0) i++;\\n            while (compare(arr[j], t) > 0) j--;\\n        }\\n\\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\\n        else {\\n            j++;\\n            swap(arr, j, right);\\n        }\\n\\n        if (j <= k) left = j + 1;\\n        if (k <= j) right = j - 1;\\n    }\\n}\\n\\nfunction swap(arr, i, j) {\\n    var tmp = arr[i];\\n    arr[i] = arr[j];\\n    arr[j] = tmp;\\n}\\n\\nfunction defaultCompare(a, b) {\\n    return a < b ? -1 : a > b ? 1 : 0;\\n}\\n\\nreturn quickselect;\\n\\n})));\\n\",\"/**\\n * @module ol/CollectionEventType\\n */\\n\\n/**\\n * @enum {string}\\n */\\nexport default {\\n  /**\\n   * Triggered when an item is added to the collection.\\n   * @event module:ol/Collection.CollectionEvent#add\\n   * @api\\n   */\\n  ADD: 'add',\\n  /**\\n   * Triggered when an item is removed from the collection.\\n   * @event module:ol/Collection.CollectionEvent#remove\\n   * @api\\n   */\\n  REMOVE: 'remove'\\n};\\n\\n//# sourceMappingURL=CollectionEventType.js.map\",\"/**\\n * @module ol/Collection\\n */\\nimport AssertionError from './AssertionError.js';\\nimport CollectionEventType from './CollectionEventType.js';\\nimport BaseObject from './Object.js';\\nimport Event from './events/Event.js';\\n\\n\\n/**\\n * @enum {string}\\n * @private\\n */\\nvar Property = {\\n  LENGTH: 'length'\\n};\\n\\n\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\\n * type.\\n */\\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\\n  function CollectionEvent(type, opt_element) {\\n    Event.call(this, type);\\n\\n    /**\\n     * The element that is added to or removed from the collection.\\n     * @type {*}\\n     * @api\\n     */\\n    this.element = opt_element;\\n\\n  }\\n\\n  if ( Event ) CollectionEvent.__proto__ = Event;\\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\\n  CollectionEvent.prototype.constructor = CollectionEvent;\\n\\n  return CollectionEvent;\\n}(Event));\\n\\n\\n/**\\n * @typedef {Object} Options\\n * @property {boolean} [unique=false] Disallow the same item from being added to\\n * the collection twice.\\n */\\n\\n/**\\n * @classdesc\\n * An expanded version of standard JS Array, adding convenience methods for\\n * manipulation. Add and remove changes to the Collection trigger a Collection\\n * event. Note that this does not cover changes to the objects _within_ the\\n * Collection; they trigger events on the appropriate object, not on the\\n * Collection as a whole.\\n *\\n * @fires CollectionEvent\\n *\\n * @template T\\n * @api\\n */\\nvar Collection = /*@__PURE__*/(function (BaseObject) {\\n  function Collection(opt_array, opt_options) {\\n\\n    BaseObject.call(this);\\n\\n    var options = opt_options || {};\\n\\n    /**\\n     * @private\\n     * @type {boolean}\\n     */\\n    this.unique_ = !!options.unique;\\n\\n    /**\\n     * @private\\n     * @type {!Array<T>}\\n     */\\n    this.array_ = opt_array ? opt_array : [];\\n\\n    if (this.unique_) {\\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\\n        this.assertUnique_(this.array_[i], i);\\n      }\\n    }\\n\\n    this.updateLength_();\\n\\n  }\\n\\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\\n  Collection.prototype.constructor = Collection;\\n\\n  /**\\n   * Remove all elements from the collection.\\n   * @api\\n   */\\n  Collection.prototype.clear = function clear () {\\n    while (this.getLength() > 0) {\\n      this.pop();\\n    }\\n  };\\n\\n  /**\\n   * Add elements to the collection.  This pushes each item in the provided array\\n   * to the end of the collection.\\n   * @param {!Array<T>} arr Array.\\n   * @return {Collection<T>} This collection.\\n   * @api\\n   */\\n  Collection.prototype.extend = function extend (arr) {\\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\\n      this.push(arr[i]);\\n    }\\n    return this;\\n  };\\n\\n  /**\\n   * Iterate over each element, calling the provided callback.\\n   * @param {function(T, number, Array<T>): *} f The function to call\\n   *     for every element. This function takes 3 arguments (the element, the\\n   *     index and the array). The return value is ignored.\\n   * @api\\n   */\\n  Collection.prototype.forEach = function forEach (f) {\\n    var array = this.array_;\\n    for (var i = 0, ii = array.length; i < ii; ++i) {\\n      f(array[i], i, array);\\n    }\\n  };\\n\\n  /**\\n   * Get a reference to the underlying Array object. Warning: if the array\\n   * is mutated, no events will be dispatched by the collection, and the\\n   * collection's \\\"length\\\" property won't be in sync with the actual length\\n   * of the array.\\n   * @return {!Array<T>} Array.\\n   * @api\\n   */\\n  Collection.prototype.getArray = function getArray () {\\n    return this.array_;\\n  };\\n\\n  /**\\n   * Get the element at the provided index.\\n   * @param {number} index Index.\\n   * @return {T} Element.\\n   * @api\\n   */\\n  Collection.prototype.item = function item (index) {\\n    return this.array_[index];\\n  };\\n\\n  /**\\n   * Get the length of this collection.\\n   * @return {number} The length of the array.\\n   * @observable\\n   * @api\\n   */\\n  Collection.prototype.getLength = function getLength () {\\n    return this.get(Property.LENGTH);\\n  };\\n\\n  /**\\n   * Insert an element at the provided index.\\n   * @param {number} index Index.\\n   * @param {T} elem Element.\\n   * @api\\n   */\\n  Collection.prototype.insertAt = function insertAt (index, elem) {\\n    if (this.unique_) {\\n      this.assertUnique_(elem);\\n    }\\n    this.array_.splice(index, 0, elem);\\n    this.updateLength_();\\n    this.dispatchEvent(\\n      new CollectionEvent(CollectionEventType.ADD, elem));\\n  };\\n\\n  /**\\n   * Remove the last element of the collection and return it.\\n   * Return `undefined` if the collection is empty.\\n   * @return {T|undefined} Element.\\n   * @api\\n   */\\n  Collection.prototype.pop = function pop () {\\n    return this.removeAt(this.getLength() - 1);\\n  };\\n\\n  /**\\n   * Insert the provided element at the end of the collection.\\n   * @param {T} elem Element.\\n   * @return {number} New length of the collection.\\n   * @api\\n   */\\n  Collection.prototype.push = function push (elem) {\\n    if (this.unique_) {\\n      this.assertUnique_(elem);\\n    }\\n    var n = this.getLength();\\n    this.insertAt(n, elem);\\n    return this.getLength();\\n  };\\n\\n  /**\\n   * Remove the first occurrence of an element from the collection.\\n   * @param {T} elem Element.\\n   * @return {T|undefined} The removed element or undefined if none found.\\n   * @api\\n   */\\n  Collection.prototype.remove = function remove (elem) {\\n    var arr = this.array_;\\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\\n      if (arr[i] === elem) {\\n        return this.removeAt(i);\\n      }\\n    }\\n    return undefined;\\n  };\\n\\n  /**\\n   * Remove the element at the provided index and return it.\\n   * Return `undefined` if the collection does not contain this index.\\n   * @param {number} index Index.\\n   * @return {T|undefined} Value.\\n   * @api\\n   */\\n  Collection.prototype.removeAt = function removeAt (index) {\\n    var prev = this.array_[index];\\n    this.array_.splice(index, 1);\\n    this.updateLength_();\\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\\n    return prev;\\n  };\\n\\n  /**\\n   * Set the element at the provided index.\\n   * @param {number} index Index.\\n   * @param {T} elem Element.\\n   * @api\\n   */\\n  Collection.prototype.setAt = function setAt (index, elem) {\\n    var n = this.getLength();\\n    if (index < n) {\\n      if (this.unique_) {\\n        this.assertUnique_(elem, index);\\n      }\\n      var prev = this.array_[index];\\n      this.array_[index] = elem;\\n      this.dispatchEvent(\\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\\n      this.dispatchEvent(\\n        new CollectionEvent(CollectionEventType.ADD, elem));\\n    } else {\\n      for (var j = n; j < index; ++j) {\\n        this.insertAt(j, undefined);\\n      }\\n      this.insertAt(index, elem);\\n    }\\n  };\\n\\n  /**\\n   * @private\\n   */\\n  Collection.prototype.updateLength_ = function updateLength_ () {\\n    this.set(Property.LENGTH, this.array_.length);\\n  };\\n\\n  /**\\n   * @private\\n   * @param {T} elem Element.\\n   * @param {number=} opt_except Optional index to ignore.\\n   */\\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\\n      if (this.array_[i] === elem && i !== opt_except) {\\n        throw new AssertionError(58);\\n      }\\n    }\\n  };\\n\\n  return Collection;\\n}(BaseObject));\\n\\n\\nexport default Collection;\\n\\n//# sourceMappingURL=Collection.js.map\",\"/**\\n * @module ol/format/FormatType\\n */\\n\\n/**\\n * @enum {string}\\n */\\nexport default {\\n  ARRAY_BUFFER: 'arraybuffer',\\n  JSON: 'json',\\n  TEXT: 'text',\\n  XML: 'xml'\\n};\\n\\n//# sourceMappingURL=FormatType.js.map\",\"/**\\n * @module ol/featureloader\\n */\\nimport {VOID} from './functions.js';\\nimport FormatType from './format/FormatType.js';\\n\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * load features.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\\n * a `{number}` representing the resolution (map units per pixel) and an\\n * {@link module:ol/proj/Projection} for the projection  as\\n * arguments. `this` within the function is bound to the\\n * {@link module:ol/source/Vector} it's called from.\\n *\\n * The function is responsible for loading the features and adding them to the\\n * source.\\n * @typedef {function(this:(import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default), import(\\\"./extent.js\\\").Extent, number,\\n *                    import(\\\"./proj/Projection.js\\\").default)} FeatureLoader\\n * @api\\n */\\n\\n\\n/**\\n * {@link module:ol/source/Vector} sources use a function of this type to\\n * get the url to load features from.\\n *\\n * This function takes an {@link module:ol/extent~Extent} representing the area\\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\\n * and an {@link module:ol/proj/Projection} for the projection  as\\n * arguments and returns a `{string}` representing the URL.\\n * @typedef {function(import(\\\"./extent.js\\\").Extent, number, import(\\\"./proj/Projection.js\\\").default): string} FeatureUrlFunction\\n * @api\\n */\\n\\n\\n/**\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default, Array<import(\\\"./Feature.js\\\").default>, import(\\\"./proj/Projection.js\\\").default, import(\\\"./extent.js\\\").Extent)|function(this:import(\\\"./source/Vector\\\").default, Array<import(\\\"./Feature.js\\\").default>)} success\\n *     Function called with the loaded features and optionally with the data\\n *     projection. Called with the vector tile or source as `this`.\\n * @param {function(this:import(\\\"./VectorTile.js\\\").default)|function(this:import(\\\"./source/Vector\\\").default)} failure\\n *     Function called when loading failed. Called with the vector tile or\\n *     source as `this`.\\n * @return {FeatureLoader} The feature loader.\\n */\\nexport function loadFeaturesXhr(url, format, success, failure) {\\n  return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} projection Projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function(extent, resolution, projection) {\\n      var xhr = new XMLHttpRequest();\\n      xhr.open('GET',\\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\\n        true);\\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\\n        xhr.responseType = 'arraybuffer';\\n      }\\n      /**\\n       * @param {Event} event Event.\\n       * @private\\n       */\\n      xhr.onload = function(event) {\\n        // status will be 0 for file:// urls\\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\\n          var type = format.getType();\\n          /** @type {Document|Node|Object|string|undefined} */\\n          var source;\\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\\n            source = xhr.responseText;\\n          } else if (type == FormatType.XML) {\\n            source = xhr.responseXML;\\n            if (!source) {\\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\\n            }\\n          } else if (type == FormatType.ARRAY_BUFFER) {\\n            source = /** @type {ArrayBuffer} */ (xhr.response);\\n          }\\n          if (source) {\\n            success.call(this, format.readFeatures(source,\\n              {featureProjection: projection}),\\n            format.readProjection(source), format.getLastExtent());\\n          } else {\\n            failure.call(this);\\n          }\\n        } else {\\n          failure.call(this);\\n        }\\n      }.bind(this);\\n      /**\\n       * @private\\n       */\\n      xhr.onerror = function() {\\n        failure.call(this);\\n      }.bind(this);\\n      xhr.send();\\n    }\\n  );\\n}\\n\\n\\n/**\\n * Create an XHR feature loader for a `url` and `format`. The feature loader\\n * loads features (with XHR), parses the features, and adds them to the\\n * vector source.\\n * @param {string|FeatureUrlFunction} url Feature URL service.\\n * @param {import(\\\"./format/Feature.js\\\").default} format Feature format.\\n * @return {FeatureLoader} The feature loader.\\n * @api\\n */\\nexport function xhr(url, format) {\\n  return loadFeaturesXhr(url, format,\\n    /**\\n     * @param {Array<import(\\\"./Feature.js\\\").default>} features The loaded features.\\n     * @param {import(\\\"./proj/Projection.js\\\").default} dataProjection Data\\n     * projection.\\n     * @this {import(\\\"./source/Vector\\\").default|import(\\\"./VectorTile.js\\\").default}\\n     */\\n    function(features, dataProjection) {\\n      var sourceOrTile = /** @type {?} */ (this);\\n      if (typeof sourceOrTile.addFeatures === 'function') {\\n        /** @type {import(\\\"./source/Vector\\\").default} */ (sourceOrTile).addFeatures(features);\\n      }\\n    }, /* FIXME handle error */ VOID);\\n}\\n\\n//# sourceMappingURL=featureloader.js.map\",\"/**\\n * @module ol/loadingstrategy\\n */\\n\\n\\n/**\\n * Strategy function for loading all features with a single request.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function all(extent, resolution) {\\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\\n}\\n\\n\\n/**\\n * Strategy function for loading features based on the view's extent and\\n * resolution.\\n * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n * @param {number} resolution Resolution.\\n * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n * @api\\n */\\nexport function bbox(extent, resolution) {\\n  return [extent];\\n}\\n\\n\\n/**\\n * Creates a strategy function for loading features based on a tile grid.\\n * @param {import(\\\"./tilegrid/TileGrid.js\\\").default} tileGrid Tile grid.\\n * @return {function(import(\\\"./extent.js\\\").Extent, number): Array<import(\\\"./extent.js\\\").Extent>} Loading strategy.\\n * @api\\n */\\nexport function tile(tileGrid) {\\n  return (\\n    /**\\n     * @param {import(\\\"./extent.js\\\").Extent} extent Extent.\\n     * @param {number} resolution Resolution.\\n     * @return {Array<import(\\\"./extent.js\\\").Extent>} Extents.\\n     */\\n    function(extent, resolution) {\\n      var z = tileGrid.getZForResolution(resolution);\\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\\n      /** @type {Array<import(\\\"./extent.js\\\").Extent>} */\\n      var extents = [];\\n      /** @type {import(\\\"./tilecoord.js\\\").TileCoord} */\\n      var tileCoord = [z, 0, 0];\\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\\n        }\\n      }\\n      return extents;\\n    }\\n  );\\n}\\n\\n//# sourceMappingURL=loadingstrategy.js.map\",\"/**\\n * @module ol/source/State\\n */\\n\\n/**\\n * @enum {string}\\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\\n */\\nexport default {\\n  UNDEFINED: 'undefined',\\n  LOADING: 'loading',\\n  READY: 'ready',\\n  ERROR: 'error'\\n};\\n\\n//# sourceMappingURL=State.js.map\",\"/**\\n * @module ol/source/Source\\n */\\nimport {abstract} from '../util.js';\\nimport BaseObject from '../Object.js';\\nimport {get as getProjection} from '../proj.js';\\nimport SourceState from './State.js';\\n\\n\\n/**\\n * A function that returns a string or an array of strings representing source\\n * attributions.\\n *\\n * @typedef {function(import(\\\"../PluggableMap.js\\\").FrameState): (string|Array<string>)} Attribution\\n */\\n\\n\\n/**\\n * A type that can be used to provide attribution information for data sources.\\n *\\n * It represents either\\n * * a simple string (e.g. `'© Acme Inc.'`)\\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\\n *\\n * @typedef {string|Array<string>|Attribution} AttributionLike\\n */\\n\\n\\n/**\\n * @typedef {Object} Options\\n * @property {AttributionLike} [attributions]\\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\\n * @property {import(\\\"../proj.js\\\").ProjectionLike} projection\\n * @property {SourceState} [state='ready']\\n * @property {boolean} [wrapX=false]\\n */\\n\\n\\n/**\\n * @classdesc\\n * Abstract base class; normally only used for creating subclasses and not\\n * instantiated in apps.\\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\\n *\\n * A generic `change` event is triggered when the state of the source changes.\\n * @abstract\\n * @api\\n */\\nvar Source = /*@__PURE__*/(function (BaseObject) {\\n  function Source(options) {\\n\\n    BaseObject.call(this);\\n\\n    /**\\n     * @private\\n     * @type {import(\\\"../proj/Projection.js\\\").default}\\n     */\\n    this.projection_ = getProjection(options.projection);\\n\\n    /**\\n     * @private\\n     * @type {?Attribution}\\n     */\\n    this.attributions_ = adaptAttributions(options.attributions);\\n\\n    /**\\n     * @private\\n     * @type {boolean}\\n     */\\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\\n      options.attributionsCollapsible : true;\\n\\n    /**\\n     * This source is currently loading data. Sources that defer loading to the\\n     * map's tile queue never set this to `true`.\\n     * @type {boolean}\\n     */\\n    this.loading = false;\\n\\n    /**\\n     * @private\\n     * @type {SourceState}\\n     */\\n    this.state_ = options.state !== undefined ?\\n      options.state : SourceState.READY;\\n\\n    /**\\n     * @private\\n     * @type {boolean}\\n     */\\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\\n\\n  }\\n\\n  if ( BaseObject ) Source.__proto__ = BaseObject;\\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\\n  Source.prototype.constructor = Source;\\n\\n  /**\\n   * Get the attribution function for the source.\\n   * @return {?Attribution} Attribution function.\\n   */\\n  Source.prototype.getAttributions = function getAttributions () {\\n    return this.attributions_;\\n  };\\n\\n  /**\\n   * @return {boolean} Aattributions are collapsible.\\n   */\\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\\n    return this.attributionsCollapsible_;\\n  };\\n\\n  /**\\n   * Get the projection of the source.\\n   * @return {import(\\\"../proj/Projection.js\\\").default} Projection.\\n   * @api\\n   */\\n  Source.prototype.getProjection = function getProjection () {\\n    return this.projection_;\\n  };\\n\\n  /**\\n   * @abstract\\n   * @return {Array<number>|undefined} Resolutions.\\n   */\\n  Source.prototype.getResolutions = function getResolutions () {\\n    return abstract();\\n  };\\n\\n  /**\\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\\n   * @return {SourceState} State.\\n   * @api\\n   */\\n  Source.prototype.getState = function getState () {\\n    return this.state_;\\n  };\\n\\n  /**\\n   * @return {boolean|undefined} Wrap X.\\n   */\\n  Source.prototype.getWrapX = function getWrapX () {\\n    return this.wrapX_;\\n  };\\n\\n  /**\\n   * Refreshes the source and finally dispatches a 'change' event.\\n   * @api\\n   */\\n  Source.prototype.refresh = function refresh () {\\n    this.changed();\\n  };\\n\\n  /**\\n   * Set the attributions of the source.\\n   * @param {AttributionLike|undefined} attributions Attributions.\\n   *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\\n   *     or `undefined`.\\n   * @api\\n   */\\n  Source.prototype.setAttributions = function setAttributions (attributions) {\\n    this.attributions_ = adaptAttributions(attributions);\\n    this.changed();\\n  };\\n\\n  /**\\n   * Set the state of the source.\\n   * @param {SourceState} state State.\\n   * @protected\\n   */\\n  Source.prototype.setState = function setState (state) {\\n    this.state_ = state;\\n    this.changed();\\n  };\\n\\n  return Source;\\n}(BaseObject));\\n\\n\\n/**\\n * Turns the attributions option into an attributions function.\\n * @param {AttributionLike|undefined} attributionLike The attribution option.\\n * @return {?Attribution} An attribution function (or null).\\n */\\nfunction adaptAttributions(attributionLike) {\\n  if (!attributionLike) {\\n    return null;\\n  }\\n  if (Array.isArray(attributionLike)) {\\n    return function(frameState) {\\n      return attributionLike;\\n    };\\n  }\\n\\n  if (typeof attributionLike === 'function') {\\n    return attributionLike;\\n  }\\n\\n  return function(frameState) {\\n    return [attributionLike];\\n  };\\n}\\n\\n\\nexport default Source;\\n\\n//# sourceMappingURL=Source.js.map\",\"/**\\n * @module ol/source/VectorEventType\\n */\\n\\n/**\\n * @enum {string}\\n */\\nexport default {\\n  /**\\n   * Triggered when a feature is added to the source.\\n   * @event ol/source/Vector.VectorSourceEvent#addfeature\\n   * @api\\n   */\\n  ADDFEATURE: 'addfeature',\\n\\n  /**\\n   * Triggered when a feature is updated.\\n   * @event ol/source/Vector.VectorSourceEvent#changefeature\\n   * @api\\n   */\\n  CHANGEFEATURE: 'changefeature',\\n\\n  /**\\n   * Triggered when the clear method is called on the source.\\n   * @event ol/source/Vector.VectorSourceEvent#clear\\n   * @api\\n   */\\n  CLEAR: 'clear',\\n\\n  /**\\n   * Triggered when a feature is removed from the source.\\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\\n   * @event ol/source/Vector.VectorSourceEvent#removefeature\\n   * @api\\n   */\\n  REMOVEFEATURE: 'removefeature'\\n};\\n\\n//# sourceMappingURL=VectorEventType.js.map\",\"/**\\n * @module ol/structs/RBush\\n */\\nimport {getUid} from '../util.js';\\nimport rbush from 'rbush';\\nimport {createOrUpdate, equals} from '../extent.js';\\nimport {isEmpty} from '../obj.js';\\n\\n/**\\n * @typedef {Object} Entry\\n * @property {number} minX\\n * @property {number} minY\\n * @property {number} maxX\\n * @property {number} maxY\\n * @property {Object} [value]\\n */\\n\\n/**\\n * @classdesc\\n * Wrapper around the RBush by Vladimir Agafonkin.\\n * See https://github.com/mourner/rbush.\\n *\\n * @template T\\n */\\nvar RBush = function RBush(opt_maxEntries) {\\n\\n  /**\\n   * @private\\n   */\\n  this.rbush_ = rbush(opt_maxEntries, undefined);\\n\\n  /**\\n   * A mapping between the objects added to this rbush wrapper\\n   * and the objects that are actually added to the internal rbush.\\n   * @private\\n   * @type {Object<string, Entry>}\\n   */\\n  this.items_ = {};\\n\\n};\\n\\n/**\\n * Insert a value into the RBush.\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @param {T} value Value.\\n */\\nRBush.prototype.insert = function insert (extent, value) {\\n  /** @type {Entry} */\\n  var item = {\\n    minX: extent[0],\\n    minY: extent[1],\\n    maxX: extent[2],\\n    maxY: extent[3],\\n    value: value\\n  };\\n\\n  this.rbush_.insert(item);\\n  this.items_[getUid(value)] = item;\\n};\\n\\n\\n/**\\n * Bulk-insert values into the RBush.\\n * @param {Array<import(\\\"../extent.js\\\").Extent>} extents Extents.\\n * @param {Array<T>} values Values.\\n */\\nRBush.prototype.load = function load (extents, values) {\\n  var items = new Array(values.length);\\n  for (var i = 0, l = values.length; i < l; i++) {\\n    var extent = extents[i];\\n    var value = values[i];\\n\\n    /** @type {Entry} */\\n    var item = {\\n      minX: extent[0],\\n      minY: extent[1],\\n      maxX: extent[2],\\n      maxY: extent[3],\\n      value: value\\n    };\\n    items[i] = item;\\n    this.items_[getUid(value)] = item;\\n  }\\n  this.rbush_.load(items);\\n};\\n\\n\\n/**\\n * Remove a value from the RBush.\\n * @param {T} value Value.\\n * @return {boolean} Removed.\\n */\\nRBush.prototype.remove = function remove (value) {\\n  var uid = getUid(value);\\n\\n  // get the object in which the value was wrapped when adding to the\\n  // internal rbush. then use that object to do the removal.\\n  var item = this.items_[uid];\\n  delete this.items_[uid];\\n  return this.rbush_.remove(item) !== null;\\n};\\n\\n\\n/**\\n * Update the extent of a value in the RBush.\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @param {T} value Value.\\n */\\nRBush.prototype.update = function update (extent, value) {\\n  var item = this.items_[getUid(value)];\\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\\n  if (!equals(bbox, extent)) {\\n    this.remove(value);\\n    this.insert(extent, value);\\n  }\\n};\\n\\n\\n/**\\n * Return all values in the RBush.\\n * @return {Array<T>} All.\\n */\\nRBush.prototype.getAll = function getAll () {\\n  var items = this.rbush_.all();\\n  return items.map(function(item) {\\n    return item.value;\\n  });\\n};\\n\\n\\n/**\\n * Return all values in the given extent.\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @return {Array<T>} All in extent.\\n */\\nRBush.prototype.getInExtent = function getInExtent (extent) {\\n  /** @type {Entry} */\\n  var bbox = {\\n    minX: extent[0],\\n    minY: extent[1],\\n    maxX: extent[2],\\n    maxY: extent[3]\\n  };\\n  var items = this.rbush_.search(bbox);\\n  return items.map(function(item) {\\n    return item.value;\\n  });\\n};\\n\\n\\n/**\\n * Calls a callback function with each value in the tree.\\n * If the callback returns a truthy value, this value is returned without\\n * checking the rest of the tree.\\n * @param {function(this: S, T): *} callback Callback.\\n * @param {S=} opt_this The object to use as `this` in `callback`.\\n * @return {*} Callback return value.\\n * @template S\\n */\\nRBush.prototype.forEach = function forEach (callback, opt_this) {\\n  return this.forEach_(this.getAll(), callback, opt_this);\\n};\\n\\n\\n/**\\n * Calls a callback function with each value in the provided extent.\\n * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n * @param {function(this: S, T): *} callback Callback.\\n * @param {S=} opt_this The object to use as `this` in `callback`.\\n * @return {*} Callback return value.\\n * @template S\\n */\\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\\n};\\n\\n\\n/**\\n * @param {Array<T>} values Values.\\n * @param {function(this: S, T): *} callback Callback.\\n * @param {S=} opt_this The object to use as `this` in `callback`.\\n * @private\\n * @return {*} Callback return value.\\n * @template S\\n */\\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\\n  var result;\\n  for (var i = 0, l = values.length; i < l; i++) {\\n    result = callback.call(opt_this, values[i]);\\n    if (result) {\\n      return result;\\n    }\\n  }\\n  return result;\\n};\\n\\n\\n/**\\n * @return {boolean} Is empty.\\n */\\nRBush.prototype.isEmpty = function isEmpty$1 () {\\n  return isEmpty(this.items_);\\n};\\n\\n\\n/**\\n * Remove all values from the RBush.\\n */\\nRBush.prototype.clear = function clear () {\\n  this.rbush_.clear();\\n  this.items_ = {};\\n};\\n\\n\\n/**\\n * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Extent.\\n * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n */\\nRBush.prototype.getExtent = function getExtent (opt_extent) {\\n  var data = this.rbush_.toJSON();\\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\\n};\\n\\n\\n/**\\n * @param {RBush} rbush R-Tree.\\n */\\nRBush.prototype.concat = function concat (rbush) {\\n  this.rbush_.load(rbush.rbush_.all());\\n  for (var i in rbush.items_) {\\n    this.items_[i] = rbush.items_[i];\\n  }\\n};\\n\\n\\nexport default RBush;\\n\\n//# sourceMappingURL=RBush.js.map\",\"/**\\n * @module ol/source/Vector\\n */\\n\\nimport {getUid} from '../util.js';\\nimport Collection from '../Collection.js';\\nimport CollectionEventType from '../CollectionEventType.js';\\nimport ObjectEventType from '../ObjectEventType.js';\\nimport {extend} from '../array.js';\\nimport {assert} from '../asserts.js';\\nimport {listen, unlistenByKey} from '../events.js';\\nimport Event from '../events/Event.js';\\nimport EventType from '../events/EventType.js';\\nimport {containsExtent, equals} from '../extent.js';\\nimport {xhr} from '../featureloader.js';\\nimport {TRUE, VOID} from '../functions.js';\\nimport {all as allStrategy} from '../loadingstrategy.js';\\nimport {isEmpty, getValues} from '../obj.js';\\nimport Source from './Source.js';\\nimport SourceState from './State.js';\\nimport VectorEventType from './VectorEventType.js';\\nimport RBush from '../structs/RBush.js';\\n\\n/**\\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\\n *\\n * @typedef {function(import(\\\"../extent.js\\\").Extent, number): Array<import(\\\"../extent.js\\\").Extent>} LoadingStrategy\\n * @api\\n */\\n\\n\\n/**\\n * @classdesc\\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\\n * type.\\n */\\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\\n  function VectorSourceEvent(type, opt_feature) {\\n\\n    Event.call(this, type);\\n\\n    /**\\n     * The feature being added or removed.\\n     * @type {import(\\\"../Feature.js\\\").default|undefined}\\n     * @api\\n     */\\n    this.feature = opt_feature;\\n\\n  }\\n\\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\\n\\n  return VectorSourceEvent;\\n}(Event));\\n\\n\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {Array<import(\\\"../Feature.js\\\").default>|Collection<import(\\\"../Feature.js\\\").default>} [features]\\n * Features. If provided as {@link module:ol/Collection}, the features in the source\\n * and the collection will stay in sync.\\n * @property {import(\\\"../format/Feature.js\\\").default} [format] The feature format used by the XHR\\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\\n * @property {import(\\\"../featureloader.js\\\").FeatureLoader} [loader]\\n * The loader function used to load features, from a remote source for example.\\n * If this is not set and `url` is set, the source will create and use an XHR\\n * feature loader.\\n *\\n * Example:\\n *\\n * ```js\\n * import {Vector} from 'ol/source';\\n * import {GeoJSON} from 'ol/format';\\n * import {bbox} from 'ol/loadingstrategy';\\n *\\n * var vectorSource = new Vector({\\n *   format: new GeoJSON(),\\n *   loader: function(extent, resolution, projection) {\\n *      var proj = projection.getCode();\\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\\n *          'outputFormat=application/json&srsname=' + proj + '&' +\\n *          'bbox=' + extent.join(',') + ',' + proj;\\n *      var xhr = new XMLHttpRequest();\\n *      xhr.open('GET', url);\\n *      var onError = function() {\\n *        vectorSource.removeLoadedExtent(extent);\\n *      }\\n *      xhr.onerror = onError;\\n *      xhr.onload = function() {\\n *        if (xhr.status == 200) {\\n *          vectorSource.addFeatures(\\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\\n *        } else {\\n *          onError();\\n *        }\\n *      }\\n *      xhr.send();\\n *    },\\n *    strategy: bbox\\n *  });\\n * ```\\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\\n * stroke operations.\\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\\n * By default an {@link module:ol/loadingstrategy~all}\\n * strategy is used, a one-off strategy which loads all features at once.\\n * @property {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction} [url]\\n * Setting this option instructs the source to load features using an XHR loader\\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\\n * other loading strategies.\\n * Requires `format` to be set as well.\\n * When default XHR feature loader is provided, the features will\\n * be transformed from the data projection to the view projection\\n * during parsing. If your remote data source does not advertise its projection\\n * properly, this transformation will be incorrect. For some formats, the\\n * default projection (usually EPSG:4326) can be overridden by setting the\\n * dataProjection constructor option on the format.\\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\\n * @property {boolean} [useSpatialIndex=true]\\n * By default, an RTree is used as spatial index. When features are removed and\\n * added frequently, and the total number of features is low, setting this to\\n * `false` may improve performance.\\n *\\n * Note that\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\\n * through all features.\\n *\\n * When set to `false`, the features will be maintained in an\\n * {@link module:ol/Collection}, which can be retrieved through\\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\\n * -180° and 180° meridians to work properly, this should be set to `false`. The\\n * resulting geometry coordinates will then exceed the world bounds.\\n */\\n\\n\\n/**\\n * @classdesc\\n * Provides a source of features for vector layers. Vector features provided\\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\\n * vector data that is optimized for rendering.\\n *\\n * @fires ol/source/Vector.VectorSourceEvent\\n * @api\\n */\\nvar VectorSource = /*@__PURE__*/(function (Source) {\\n  function VectorSource(opt_options) {\\n\\n    var options = opt_options || {};\\n\\n    Source.call(this, {\\n      attributions: options.attributions,\\n      projection: undefined,\\n      state: SourceState.READY,\\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\\n    });\\n\\n    /**\\n     * @private\\n     * @type {import(\\\"../featureloader.js\\\").FeatureLoader}\\n     */\\n    this.loader_ = VOID;\\n\\n    /**\\n     * @private\\n     * @type {import(\\\"../format/Feature.js\\\").default|undefined}\\n     */\\n    this.format_ = options.format;\\n\\n    /**\\n     * @private\\n     * @type {boolean}\\n     */\\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\\n\\n    /**\\n     * @private\\n     * @type {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined}\\n     */\\n    this.url_ = options.url;\\n\\n    if (options.loader !== undefined) {\\n      this.loader_ = options.loader;\\n    } else if (this.url_ !== undefined) {\\n      assert(this.format_, 7); // `format` must be set when `url` is set\\n      // create a XHR feature loader for \\\"url\\\" and \\\"format\\\"\\n      this.loader_ = xhr(this.url_, /** @type {import(\\\"../format/Feature.js\\\").default} */ (this.format_));\\n    }\\n\\n    /**\\n     * @private\\n     * @type {LoadingStrategy}\\n     */\\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\\n\\n    var useSpatialIndex =\\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\\n\\n    /**\\n     * @private\\n     * @type {RBush<import(\\\"../Feature.js\\\").default>}\\n     */\\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\\n\\n    /**\\n     * @private\\n     * @type {RBush<{extent: import(\\\"../extent.js\\\").Extent}>}\\n     */\\n    this.loadedExtentsRtree_ = new RBush();\\n\\n    /**\\n     * @private\\n     * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n     */\\n    this.nullGeometryFeatures_ = {};\\n\\n    /**\\n     * A lookup of features by id (the return from feature.getId()).\\n     * @private\\n     * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n     */\\n    this.idIndex_ = {};\\n\\n    /**\\n     * A lookup of features without id (keyed by getUid(feature)).\\n     * @private\\n     * @type {!Object<string, import(\\\"../Feature.js\\\").default>}\\n     */\\n    this.undefIdIndex_ = {};\\n\\n    /**\\n     * @private\\n     * @type {Object<string, Array<import(\\\"../events.js\\\").EventsKey>>}\\n     */\\n    this.featureChangeKeys_ = {};\\n\\n    /**\\n     * @private\\n     * @type {Collection<import(\\\"../Feature.js\\\").default>}\\n     */\\n    this.featuresCollection_ = null;\\n\\n    var collection, features;\\n    if (Array.isArray(options.features)) {\\n      features = options.features;\\n    } else if (options.features) {\\n      collection = options.features;\\n      features = collection.getArray();\\n    }\\n    if (!useSpatialIndex && collection === undefined) {\\n      collection = new Collection(features);\\n    }\\n    if (features !== undefined) {\\n      this.addFeaturesInternal(features);\\n    }\\n    if (collection !== undefined) {\\n      this.bindFeaturesCollection_(collection);\\n    }\\n\\n  }\\n\\n  if ( Source ) VectorSource.__proto__ = Source;\\n  VectorSource.prototype = Object.create( Source && Source.prototype );\\n  VectorSource.prototype.constructor = VectorSource;\\n\\n  /**\\n   * Add a single feature to the source.  If you want to add a batch of features\\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\\n   * instead. A feature will not be added to the source if feature with\\n   * the same id is already there. The reason for this behavior is to avoid\\n   * feature duplication when using bbox or tile loading strategies.\\n   * @param {import(\\\"../Feature.js\\\").default} feature Feature to add.\\n   * @api\\n   */\\n  VectorSource.prototype.addFeature = function addFeature (feature) {\\n    this.addFeatureInternal(feature);\\n    this.changed();\\n  };\\n\\n\\n  /**\\n   * Add a feature without firing a `change` event.\\n   * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n   * @protected\\n   */\\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\\n    var featureKey = getUid(feature);\\n\\n    if (!this.addToIndex_(featureKey, feature)) {\\n      return;\\n    }\\n\\n    this.setupChangeEvents_(featureKey, feature);\\n\\n    var geometry = feature.getGeometry();\\n    if (geometry) {\\n      var extent = geometry.getExtent();\\n      if (this.featuresRtree_) {\\n        this.featuresRtree_.insert(extent, feature);\\n      }\\n    } else {\\n      this.nullGeometryFeatures_[featureKey] = feature;\\n    }\\n\\n    this.dispatchEvent(\\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\\n  };\\n\\n\\n  /**\\n   * @param {string} featureKey Unique identifier for the feature.\\n   * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n   * @private\\n   */\\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\\n    this.featureChangeKeys_[featureKey] = [\\n      listen(feature, EventType.CHANGE,\\n        this.handleFeatureChange_, this),\\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\\n        this.handleFeatureChange_, this)\\n    ];\\n  };\\n\\n\\n  /**\\n   * @param {string} featureKey Unique identifier for the feature.\\n   * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n   * @return {boolean} The feature is \\\"valid\\\", in the sense that it is also a\\n   *     candidate for insertion into the Rtree.\\n   * @private\\n   */\\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\\n    var valid = true;\\n    var id = feature.getId();\\n    if (id !== undefined) {\\n      if (!(id.toString() in this.idIndex_)) {\\n        this.idIndex_[id.toString()] = feature;\\n      } else {\\n        valid = false;\\n      }\\n    } else {\\n      assert(!(featureKey in this.undefIdIndex_),\\n        30); // The passed `feature` was already added to the source\\n      this.undefIdIndex_[featureKey] = feature;\\n    }\\n    return valid;\\n  };\\n\\n\\n  /**\\n   * Add a batch of features to the source.\\n   * @param {Array<import(\\\"../Feature.js\\\").default>} features Features to add.\\n   * @api\\n   */\\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\\n    this.addFeaturesInternal(features);\\n    this.changed();\\n  };\\n\\n\\n  /**\\n   * Add features without firing a `change` event.\\n   * @param {Array<import(\\\"../Feature.js\\\").default>} features Features.\\n   * @protected\\n   */\\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\\n    var extents = [];\\n    var newFeatures = [];\\n    var geometryFeatures = [];\\n\\n    for (var i = 0, length = features.length; i < length; i++) {\\n      var feature = features[i];\\n      var featureKey = getUid(feature);\\n      if (this.addToIndex_(featureKey, feature)) {\\n        newFeatures.push(feature);\\n      }\\n    }\\n\\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\\n      var feature$1 = newFeatures[i$1];\\n      var featureKey$1 = getUid(feature$1);\\n      this.setupChangeEvents_(featureKey$1, feature$1);\\n\\n      var geometry = feature$1.getGeometry();\\n      if (geometry) {\\n        var extent = geometry.getExtent();\\n        extents.push(extent);\\n        geometryFeatures.push(feature$1);\\n      } else {\\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\\n      }\\n    }\\n    if (this.featuresRtree_) {\\n      this.featuresRtree_.load(extents, geometryFeatures);\\n    }\\n\\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\\n    }\\n  };\\n\\n\\n  /**\\n   * @param {!Collection<import(\\\"../Feature.js\\\").default>} collection Collection.\\n   * @private\\n   */\\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\\n    var modifyingCollection = false;\\n    listen(this, VectorEventType.ADDFEATURE,\\n      /**\\n       * @param {VectorSourceEvent} evt The vector source event\\n       */\\n      function(evt) {\\n        if (!modifyingCollection) {\\n          modifyingCollection = true;\\n          collection.push(evt.feature);\\n          modifyingCollection = false;\\n        }\\n      });\\n    listen(this, VectorEventType.REMOVEFEATURE,\\n      /**\\n       * @param {VectorSourceEvent} evt The vector source event\\n       */\\n      function(evt) {\\n        if (!modifyingCollection) {\\n          modifyingCollection = true;\\n          collection.remove(evt.feature);\\n          modifyingCollection = false;\\n        }\\n      });\\n    listen(collection, CollectionEventType.ADD,\\n      /**\\n       * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n       */\\n      function(evt) {\\n        if (!modifyingCollection) {\\n          modifyingCollection = true;\\n          this.addFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n          modifyingCollection = false;\\n        }\\n      }, this);\\n    listen(collection, CollectionEventType.REMOVE,\\n      /**\\n       * @param {import(\\\"../Collection.js\\\").CollectionEvent} evt The collection event\\n       */\\n      function(evt) {\\n        if (!modifyingCollection) {\\n          modifyingCollection = true;\\n          this.removeFeature(/** @type {import(\\\"../Feature.js\\\").default} */ (evt.element));\\n          modifyingCollection = false;\\n        }\\n      }, this);\\n    this.featuresCollection_ = collection;\\n  };\\n\\n\\n  /**\\n   * Remove all features from the source.\\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\\n   * @api\\n   */\\n  VectorSource.prototype.clear = function clear (opt_fast) {\\n    if (opt_fast) {\\n      for (var featureId in this.featureChangeKeys_) {\\n        var keys = this.featureChangeKeys_[featureId];\\n        keys.forEach(unlistenByKey);\\n      }\\n      if (!this.featuresCollection_) {\\n        this.featureChangeKeys_ = {};\\n        this.idIndex_ = {};\\n        this.undefIdIndex_ = {};\\n      }\\n    } else {\\n      if (this.featuresRtree_) {\\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\\n        for (var id in this.nullGeometryFeatures_) {\\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\\n        }\\n      }\\n    }\\n    if (this.featuresCollection_) {\\n      this.featuresCollection_.clear();\\n    }\\n\\n    if (this.featuresRtree_) {\\n      this.featuresRtree_.clear();\\n    }\\n    this.loadedExtentsRtree_.clear();\\n    this.nullGeometryFeatures_ = {};\\n\\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\\n    this.dispatchEvent(clearEvent);\\n    this.changed();\\n  };\\n\\n\\n  /**\\n   * Iterate through all features on the source, calling the provided callback\\n   * with each one.  If the callback returns any \\\"truthy\\\" value, iteration will\\n   * stop and the function will return the same value.\\n   * Note: this function only iterate through the feature that have a defined geometry.\\n   *\\n   * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n   *     on the source.  Return a truthy value to stop iteration.\\n   * @return {T|undefined} The return value from the last call to the callback.\\n   * @template T\\n   * @api\\n   */\\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\\n    if (this.featuresRtree_) {\\n      return this.featuresRtree_.forEach(callback);\\n    } else if (this.featuresCollection_) {\\n      this.featuresCollection_.forEach(callback);\\n    }\\n  };\\n\\n\\n  /**\\n   * Iterate through all features whose geometries contain the provided\\n   * coordinate, calling the callback with each feature.  If the callback returns\\n   * a \\\"truthy\\\" value, iteration will stop and the function will return the same\\n   * value.\\n   *\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n   * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n   *     whose goemetry contains the provided coordinate.\\n   * @return {T|undefined} The return value from the last call to the callback.\\n   * @template T\\n   */\\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\\n    return this.forEachFeatureInExtent(extent, function(feature) {\\n      var geometry = feature.getGeometry();\\n      if (geometry.intersectsCoordinate(coordinate)) {\\n        return callback(feature);\\n      } else {\\n        return undefined;\\n      }\\n    });\\n  };\\n\\n\\n  /**\\n   * Iterate through all features whose bounding box intersects the provided\\n   * extent (note that the feature's geometry may not intersect the extent),\\n   * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n   * value, iteration will stop and the function will return the same value.\\n   *\\n   * If you are interested in features whose geometry intersects an extent, call\\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\\n   *\\n   * When `useSpatialIndex` is set to false, this method will loop through all\\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\\n   *\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n   *     whose bounding box intersects the provided extent.\\n   * @return {T|undefined} The return value from the last call to the callback.\\n   * @template T\\n   * @api\\n   */\\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\\n    if (this.featuresRtree_) {\\n      return this.featuresRtree_.forEachInExtent(extent, callback);\\n    } else if (this.featuresCollection_) {\\n      this.featuresCollection_.forEach(callback);\\n    }\\n  };\\n\\n\\n  /**\\n   * Iterate through all features whose geometry intersects the provided extent,\\n   * calling the callback with each feature.  If the callback returns a \\\"truthy\\\"\\n   * value, iteration will stop and the function will return the same value.\\n   *\\n   * If you only want to test for bounding box intersection, call the\\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\\n   *\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @param {function(import(\\\"../Feature.js\\\").default): T} callback Called with each feature\\n   *     whose geometry intersects the provided extent.\\n   * @return {T|undefined} The return value from the last call to the callback.\\n   * @template T\\n   * @api\\n   */\\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\\n    return this.forEachFeatureInExtent(extent,\\n      /**\\n       * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n       * @return {T|undefined} The return value from the last call to the callback.\\n       */\\n      function(feature) {\\n        var geometry = feature.getGeometry();\\n        if (geometry.intersectsExtent(extent)) {\\n          var result = callback(feature);\\n          if (result) {\\n            return result;\\n          }\\n        }\\n      });\\n  };\\n\\n\\n  /**\\n   * Get the features collection associated with this source. Will be `null`\\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\\n   * with an {@link module:ol/Collection} as `features`.\\n   * @return {Collection<import(\\\"../Feature.js\\\").default>} The collection of features.\\n   * @api\\n   */\\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\\n    return this.featuresCollection_;\\n  };\\n\\n\\n  /**\\n   * Get all features on the source in random order.\\n   * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n   * @api\\n   */\\n  VectorSource.prototype.getFeatures = function getFeatures () {\\n    var features;\\n    if (this.featuresCollection_) {\\n      features = this.featuresCollection_.getArray();\\n    } else if (this.featuresRtree_) {\\n      features = this.featuresRtree_.getAll();\\n      if (!isEmpty(this.nullGeometryFeatures_)) {\\n        extend(features, getValues(this.nullGeometryFeatures_));\\n      }\\n    }\\n    return (\\n      /** @type {Array<import(\\\"../Feature.js\\\").default>} */ (features)\\n    );\\n  };\\n\\n\\n  /**\\n   * Get all features whose geometry intersects the provided coordinate.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n   * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n   * @api\\n   */\\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\\n    var features = [];\\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\\n      features.push(feature);\\n    });\\n    return features;\\n  };\\n\\n\\n  /**\\n   * Get all features in the provided extent.  Note that this returns an array of\\n   * all features intersecting the given extent in random order (so it may include\\n   * features whose geometries do not intersect the extent).\\n   *\\n   * This method is not available when the source is configured with\\n   * `useSpatialIndex` set to `false`.\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @return {Array<import(\\\"../Feature.js\\\").default>} Features.\\n   * @api\\n   */\\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\\n    return this.featuresRtree_.getInExtent(extent);\\n  };\\n\\n\\n  /**\\n   * Get the closest feature to the provided coordinate.\\n   *\\n   * This method is not available when the source is configured with\\n   * `useSpatialIndex` set to `false`.\\n   * @param {import(\\\"../coordinate.js\\\").Coordinate} coordinate Coordinate.\\n   * @param {function(import(\\\"../Feature.js\\\").default):boolean=} opt_filter Feature filter function.\\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\\n   *     and it should return a boolean value. By default, no filtering is made.\\n   * @return {import(\\\"../Feature.js\\\").default} Closest feature.\\n   * @api\\n   */\\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\\n    // Find the closest feature using branch and bound.  We start searching an\\n    // infinite extent, and find the distance from the first feature found.  This\\n    // becomes the closest feature.  We then compute a smaller extent which any\\n    // closer feature must intersect.  We continue searching with this smaller\\n    // extent, trying to find a closer feature.  Every time we find a closer\\n    // feature, we update the extent being searched so that any even closer\\n    // feature must intersect it.  We continue until we run out of features.\\n    var x = coordinate[0];\\n    var y = coordinate[1];\\n    var closestFeature = null;\\n    var closestPoint = [NaN, NaN];\\n    var minSquaredDistance = Infinity;\\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\\n    var filter = opt_filter ? opt_filter : TRUE;\\n    this.featuresRtree_.forEachInExtent(extent,\\n      /**\\n       * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n       */\\n      function(feature) {\\n        if (filter(feature)) {\\n          var geometry = feature.getGeometry();\\n          var previousMinSquaredDistance = minSquaredDistance;\\n          minSquaredDistance = geometry.closestPointXY(\\n            x, y, closestPoint, minSquaredDistance);\\n          if (minSquaredDistance < previousMinSquaredDistance) {\\n            closestFeature = feature;\\n            // This is sneaky.  Reduce the extent that it is currently being\\n            // searched while the R-Tree traversal using this same extent object\\n            // is still in progress.  This is safe because the new extent is\\n            // strictly contained by the old extent.\\n            var minDistance = Math.sqrt(minSquaredDistance);\\n            extent[0] = x - minDistance;\\n            extent[1] = y - minDistance;\\n            extent[2] = x + minDistance;\\n            extent[3] = y + minDistance;\\n          }\\n        }\\n      });\\n    return closestFeature;\\n  };\\n\\n\\n  /**\\n   * Get the extent of the features currently in the source.\\n   *\\n   * This method is not available when the source is configured with\\n   * `useSpatialIndex` set to `false`.\\n   * @param {import(\\\"../extent.js\\\").Extent=} opt_extent Destination extent. If provided, no new extent\\n   *     will be created. Instead, that extent's coordinates will be overwritten.\\n   * @return {import(\\\"../extent.js\\\").Extent} Extent.\\n   * @api\\n   */\\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\\n    return this.featuresRtree_.getExtent(opt_extent);\\n  };\\n\\n\\n  /**\\n   * Get a feature by its identifier (the value returned by feature.getId()).\\n   * Note that the index treats string and numeric identifiers as the same.  So\\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\\n   *\\n   * @param {string|number} id Feature identifier.\\n   * @return {import(\\\"../Feature.js\\\").default} The feature (or `null` if not found).\\n   * @api\\n   */\\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\\n    var feature = this.idIndex_[id.toString()];\\n    return feature !== undefined ? feature : null;\\n  };\\n\\n\\n  /**\\n   * Get the format associated with this source.\\n   *\\n   * @return {import(\\\"../format/Feature.js\\\").default|undefined} The feature format.\\n   * @api\\n   */\\n  VectorSource.prototype.getFormat = function getFormat () {\\n    return this.format_;\\n  };\\n\\n\\n  /**\\n   * @return {boolean} The source can have overlapping geometries.\\n   */\\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\\n    return this.overlaps_;\\n  };\\n\\n\\n  /**\\n   * Get the url associated with this source.\\n   *\\n   * @return {string|import(\\\"../featureloader.js\\\").FeatureUrlFunction|undefined} The url.\\n   * @api\\n   */\\n  VectorSource.prototype.getUrl = function getUrl () {\\n    return this.url_;\\n  };\\n\\n\\n  /**\\n   * @param {Event} event Event.\\n   * @private\\n   */\\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\\n    var feature = /** @type {import(\\\"../Feature.js\\\").default} */ (event.target);\\n    var featureKey = getUid(feature);\\n    var geometry = feature.getGeometry();\\n    if (!geometry) {\\n      if (!(featureKey in this.nullGeometryFeatures_)) {\\n        if (this.featuresRtree_) {\\n          this.featuresRtree_.remove(feature);\\n        }\\n        this.nullGeometryFeatures_[featureKey] = feature;\\n      }\\n    } else {\\n      var extent = geometry.getExtent();\\n      if (featureKey in this.nullGeometryFeatures_) {\\n        delete this.nullGeometryFeatures_[featureKey];\\n        if (this.featuresRtree_) {\\n          this.featuresRtree_.insert(extent, feature);\\n        }\\n      } else {\\n        if (this.featuresRtree_) {\\n          this.featuresRtree_.update(extent, feature);\\n        }\\n      }\\n    }\\n    var id = feature.getId();\\n    if (id !== undefined) {\\n      var sid = id.toString();\\n      if (featureKey in this.undefIdIndex_) {\\n        delete this.undefIdIndex_[featureKey];\\n        this.idIndex_[sid] = feature;\\n      } else {\\n        if (this.idIndex_[sid] !== feature) {\\n          this.removeFromIdIndex_(feature);\\n          this.idIndex_[sid] = feature;\\n        }\\n      }\\n    } else {\\n      if (!(featureKey in this.undefIdIndex_)) {\\n        this.removeFromIdIndex_(feature);\\n        this.undefIdIndex_[featureKey] = feature;\\n      }\\n    }\\n    this.changed();\\n    this.dispatchEvent(new VectorSourceEvent(\\n      VectorEventType.CHANGEFEATURE, feature));\\n  };\\n\\n  /**\\n   * Returns true if the feature is contained within the source.\\n   * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n   * @return {boolean} Has feature.\\n   * @api\\n   */\\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\\n    var id = feature.getId();\\n    if (id !== undefined) {\\n      return id in this.idIndex_;\\n    } else {\\n      return getUid(feature) in this.undefIdIndex_;\\n    }\\n  };\\n\\n  /**\\n   * @return {boolean} Is empty.\\n   */\\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\\n  };\\n\\n\\n  /**\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @param {number} resolution Resolution.\\n   * @param {import(\\\"../proj/Projection.js\\\").default} projection Projection.\\n   */\\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\\n    var this$1 = this;\\n\\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\\n    var extentsToLoad = this.strategy_(extent, resolution);\\n    this.loading = false;\\n    var loop = function ( i, ii ) {\\n      var extentToLoad = extentsToLoad[i];\\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\\n        /**\\n         * @param {{extent: import(\\\"../extent.js\\\").Extent}} object Object.\\n         * @return {boolean} Contains.\\n         */\\n        function(object) {\\n          return containsExtent(object.extent, extentToLoad);\\n        });\\n      if (!alreadyLoaded) {\\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\\n        this$1.loading = this$1.loader_ !== VOID;\\n      }\\n    };\\n\\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\\n  };\\n\\n\\n  /**\\n   * Remove an extent from the list of loaded extents.\\n   * @param {import(\\\"../extent.js\\\").Extent} extent Extent.\\n   * @api\\n   */\\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\\n    var obj;\\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\\n      if (equals(object.extent, extent)) {\\n        obj = object;\\n        return true;\\n      }\\n    });\\n    if (obj) {\\n      loadedExtentsRtree.remove(obj);\\n    }\\n  };\\n\\n\\n  /**\\n   * Remove a single feature from the source.  If you want to remove all features\\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\\n   * instead.\\n   * @param {import(\\\"../Feature.js\\\").default} feature Feature to remove.\\n   * @api\\n   */\\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\\n    var featureKey = getUid(feature);\\n    if (featureKey in this.nullGeometryFeatures_) {\\n      delete this.nullGeometryFeatures_[featureKey];\\n    } else {\\n      if (this.featuresRtree_) {\\n        this.featuresRtree_.remove(feature);\\n      }\\n    }\\n    this.removeFeatureInternal(feature);\\n    this.changed();\\n  };\\n\\n\\n  /**\\n   * Remove feature without firing a `change` event.\\n   * @param {import(\\\"../Feature.js\\\").default} feature Feature.\\n   * @protected\\n   */\\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\\n    var featureKey = getUid(feature);\\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\\n    delete this.featureChangeKeys_[featureKey];\\n    var id = feature.getId();\\n    if (id !== undefined) {\\n      delete this.idIndex_[id.toString()];\\n    } else {\\n      delete this.undefIdIndex_[featureKey];\\n    }\\n    this.dispatchEvent(new VectorSourceEvent(\\n      VectorEventType.REMOVEFEATURE, feature));\\n  };\\n\\n\\n  /**\\n   * Remove a feature from the id index.  Called internally when the feature id\\n   * may have changed.\\n   * @param {import(\\\"../Feature.js\\\").default} feature The feature.\\n   * @return {boolean} Removed the feature from the index.\\n   * @private\\n   */\\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\\n    var removed = false;\\n    for (var id in this.idIndex_) {\\n      if (this.idIndex_[id] === feature) {\\n        delete this.idIndex_[id];\\n        removed = true;\\n        break;\\n      }\\n    }\\n    return removed;\\n  };\\n\\n\\n  /**\\n   * Set the new loader of the source. The next loadFeatures call will use the\\n   * new loader.\\n   * @param {import(\\\"../featureloader.js\\\").FeatureLoader} loader The loader to set.\\n   * @api\\n   */\\n  VectorSource.prototype.setLoader = function setLoader (loader) {\\n    this.loader_ = loader;\\n  };\\n\\n  return VectorSource;\\n}(Source));\\n\\n\\nexport default VectorSource;\\n\\n//# sourceMappingURL=Vector.js.map\",\"/**\\n * @module ol/source/Cluster\\n */\\n\\nimport {getUid} from '../util.js';\\nimport {assert} from '../asserts.js';\\nimport Feature from '../Feature.js';\\nimport GeometryType from '../geom/GeometryType.js';\\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\\nimport {listen} from '../events.js';\\nimport EventType from '../events/EventType.js';\\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\\nimport Point from '../geom/Point.js';\\nimport VectorSource from './Vector.js';\\n\\n/**\\n * @typedef {Object} Options\\n * @property {import(\\\"./Source.js\\\").AttributionLike} [attributions] Attributions.\\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\\n * @property {function(Feature):Point} [geometryFunction]\\n * Function that takes an {@link module:ol/Feature} as argument and returns an\\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\\n * feature should not be considered for clustering, the function should return\\n * `null`. The default, which works when the underyling source contains point\\n * features only, is\\n * ```js\\n * function(feature) {\\n *   return feature.getGeometry();\\n * }\\n * ```\\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\\n * calculation point for polygons.\\n * @property {VectorSource} source Source.\\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\\n */\\n\\n\\n/**\\n * @classdesc\\n * Layer source to cluster vector data. Works out of the box with point\\n * geometries. For other geometry types, or if not all geometries should be\\n * considered for clustering, a custom `geometryFunction` can be defined.\\n * @api\\n */\\nvar Cluster = /*@__PURE__*/(function (VectorSource) {\\n  function Cluster(options) {\\n    VectorSource.call(this, {\\n      attributions: options.attributions,\\n      wrapX: options.wrapX\\n    });\\n\\n    /**\\n     * @type {number|undefined}\\n     * @protected\\n     */\\n    this.resolution = undefined;\\n\\n    /**\\n     * @type {number}\\n     * @protected\\n     */\\n    this.distance = options.distance !== undefined ? options.distance : 20;\\n\\n    /**\\n     * @type {Array<Feature>}\\n     * @protected\\n     */\\n    this.features = [];\\n\\n    /**\\n     * @param {Feature} feature Feature.\\n     * @return {Point} Cluster calculation point.\\n     * @protected\\n     */\\n    this.geometryFunction = options.geometryFunction || function(feature) {\\n      var geometry = /** @type {Point} */ (feature.getGeometry());\\n      assert(geometry.getType() == GeometryType.POINT,\\n        10); // The default `geometryFunction` can only handle `Point` geometries\\n      return geometry;\\n    };\\n\\n    /**\\n     * @type {VectorSource}\\n     * @protected\\n     */\\n    this.source = options.source;\\n\\n    listen(this.source, EventType.CHANGE, this.refresh, this);\\n  }\\n\\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\\n  Cluster.prototype.constructor = Cluster;\\n\\n  /**\\n   * Get the distance in pixels between clusters.\\n   * @return {number} Distance.\\n   * @api\\n   */\\n  Cluster.prototype.getDistance = function getDistance () {\\n    return this.distance;\\n  };\\n\\n  /**\\n   * Get a reference to the wrapped source.\\n   * @return {VectorSource} Source.\\n   * @api\\n   */\\n  Cluster.prototype.getSource = function getSource () {\\n    return this.source;\\n  };\\n\\n  /**\\n   * @inheritDoc\\n   */\\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\\n    this.source.loadFeatures(extent, resolution, projection);\\n    if (resolution !== this.resolution) {\\n      this.clear();\\n      this.resolution = resolution;\\n      this.cluster();\\n      this.addFeatures(this.features);\\n    }\\n  };\\n\\n  /**\\n   * Set the distance in pixels between clusters.\\n   * @param {number} distance The distance in pixels.\\n   * @api\\n   */\\n  Cluster.prototype.setDistance = function setDistance (distance) {\\n    this.distance = distance;\\n    this.refresh();\\n  };\\n\\n  /**\\n   * handle the source changing\\n   * @override\\n   */\\n  Cluster.prototype.refresh = function refresh () {\\n    this.clear();\\n    this.cluster();\\n    this.addFeatures(this.features);\\n    VectorSource.prototype.refresh.call(this);\\n  };\\n\\n  /**\\n   * @protected\\n   */\\n  Cluster.prototype.cluster = function cluster () {\\n    if (this.resolution === undefined) {\\n      return;\\n    }\\n    this.features.length = 0;\\n    var extent = createEmpty();\\n    var mapDistance = this.distance * this.resolution;\\n    var features = this.source.getFeatures();\\n\\n    /**\\n     * @type {!Object<string, boolean>}\\n     */\\n    var clustered = {};\\n\\n    for (var i = 0, ii = features.length; i < ii; i++) {\\n      var feature = features[i];\\n      if (!(getUid(feature) in clustered)) {\\n        var geometry = this.geometryFunction(feature);\\n        if (geometry) {\\n          var coordinates = geometry.getCoordinates();\\n          createOrUpdateFromCoordinate(coordinates, extent);\\n          buffer(extent, mapDistance, extent);\\n\\n          var neighbors = this.source.getFeaturesInExtent(extent);\\n          neighbors = neighbors.filter(function(neighbor) {\\n            var uid = getUid(neighbor);\\n            if (!(uid in clustered)) {\\n              clustered[uid] = true;\\n              return true;\\n            } else {\\n              return false;\\n            }\\n          });\\n          this.features.push(this.createCluster(neighbors));\\n        }\\n      }\\n    }\\n  };\\n\\n  /**\\n   * @param {Array<Feature>} features Features\\n   * @return {Feature} The cluster feature.\\n   * @protected\\n   */\\n  Cluster.prototype.createCluster = function createCluster (features) {\\n    var centroid = [0, 0];\\n    for (var i = features.length - 1; i >= 0; --i) {\\n      var geometry = this.geometryFunction(features[i]);\\n      if (geometry) {\\n        addCoordinate(centroid, geometry.getCoordinates());\\n      } else {\\n        features.splice(i, 1);\\n      }\\n    }\\n    scaleCoordinate(centroid, 1 / features.length);\\n\\n    var cluster = new Feature(new Point(centroid));\\n    cluster.set('features', features);\\n    return cluster;\\n  };\\n\\n  return Cluster;\\n}(VectorSource));\\n\\n\\nexport default Cluster;\\n\\n//# sourceMappingURL=Cluster.js.map\",\"/**\\n * @module ol/array\\n */\\n\\n\\n/**\\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\\n * https://github.com/darkskyapp/binary-search\\n *\\n * @param {Array<*>} haystack Items to search through.\\n * @param {*} needle The item to look for.\\n * @param {Function=} opt_comparator Comparator function.\\n * @return {number} The index of the item if found, -1 if not.\\n */\\nexport function binarySearch(haystack, needle, opt_comparator) {\\n  var mid, cmp;\\n  var comparator = opt_comparator || numberSafeCompareFunction;\\n  var low = 0;\\n  var high = haystack.length;\\n  var found = false;\\n\\n  while (low < high) {\\n    /* Note that \\\"(low + high) >>> 1\\\" may overflow, and results in a typecast\\n     * to double (which gives the wrong results). */\\n    mid = low + (high - low >> 1);\\n    cmp = +comparator(haystack[mid], needle);\\n\\n    if (cmp < 0.0) { /* Too low. */\\n      low = mid + 1;\\n\\n    } else { /* Key found or too high */\\n      high = mid;\\n      found = !cmp;\\n    }\\n  }\\n\\n  /* Key not found. */\\n  return found ? low : ~low;\\n}\\n\\n\\n/**\\n * Compare function for array sort that is safe for numbers.\\n * @param {*} a The first object to be compared.\\n * @param {*} b The second object to be compared.\\n * @return {number} A negative number, zero, or a positive number as the first\\n *     argument is less than, equal to, or greater than the second.\\n */\\nexport function numberSafeCompareFunction(a, b) {\\n  return a > b ? 1 : a < b ? -1 : 0;\\n}\\n\\n\\n/**\\n * Whether the array contains the given object.\\n * @param {Array<*>} arr The array to test for the presence of the element.\\n * @param {*} obj The object for which to test.\\n * @return {boolean} The object is in the array.\\n */\\nexport function includes(arr, obj) {\\n  return arr.indexOf(obj) >= 0;\\n}\\n\\n\\n/**\\n * @param {Array<number>} arr Array.\\n * @param {number} target Target.\\n * @param {number} direction 0 means return the nearest, > 0\\n *    means return the largest nearest, < 0 means return the\\n *    smallest nearest.\\n * @return {number} Index.\\n */\\nexport function linearFindNearest(arr, target, direction) {\\n  var n = arr.length;\\n  if (arr[0] <= target) {\\n    return 0;\\n  } else if (target <= arr[n - 1]) {\\n    return n - 1;\\n  } else {\\n    var i;\\n    if (direction > 0) {\\n      for (i = 1; i < n; ++i) {\\n        if (arr[i] < target) {\\n          return i - 1;\\n        }\\n      }\\n    } else if (direction < 0) {\\n      for (i = 1; i < n; ++i) {\\n        if (arr[i] <= target) {\\n          return i;\\n        }\\n      }\\n    } else {\\n      for (i = 1; i < n; ++i) {\\n        if (arr[i] == target) {\\n          return i;\\n        } else if (arr[i] < target) {\\n          if (arr[i - 1] - target < target - arr[i]) {\\n            return i - 1;\\n          } else {\\n            return i;\\n          }\\n        }\\n      }\\n    }\\n    return n - 1;\\n  }\\n}\\n\\n\\n/**\\n * @param {Array<*>} arr Array.\\n * @param {number} begin Begin index.\\n * @param {number} end End index.\\n */\\nexport function reverseSubArray(arr, begin, end) {\\n  while (begin < end) {\\n    var tmp = arr[begin];\\n    arr[begin] = arr[end];\\n    arr[end] = tmp;\\n    ++begin;\\n    --end;\\n  }\\n}\\n\\n\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\\n * @template VALUE\\n */\\nexport function extend(arr, data) {\\n  var extension = Array.isArray(data) ? data : [data];\\n  var length = extension.length;\\n  for (var i = 0; i < length; i++) {\\n    arr[arr.length] = extension[i];\\n  }\\n}\\n\\n\\n/**\\n * @param {Array<VALUE>} arr The array to modify.\\n * @param {VALUE} obj The element to remove.\\n * @template VALUE\\n * @return {boolean} If the element was removed.\\n */\\nexport function remove(arr, obj) {\\n  var i = arr.indexOf(obj);\\n  var found = i > -1;\\n  if (found) {\\n    arr.splice(i, 1);\\n  }\\n  return found;\\n}\\n\\n\\n/**\\n * @param {Array<VALUE>} arr The array to search in.\\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\\n * @template VALUE\\n * @return {VALUE|null} The element found or null.\\n */\\nexport function find(arr, func) {\\n  var length = arr.length >>> 0;\\n  var value;\\n\\n  for (var i = 0; i < length; i++) {\\n    value = arr[i];\\n    if (func(value, i, arr)) {\\n      return value;\\n    }\\n  }\\n  return null;\\n}\\n\\n\\n/**\\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\\n * @return {boolean} Whether the two arrays are equal.\\n */\\nexport function equals(arr1, arr2) {\\n  var len1 = arr1.length;\\n  if (len1 !== arr2.length) {\\n    return false;\\n  }\\n  for (var i = 0; i < len1; i++) {\\n    if (arr1[i] !== arr2[i]) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\n\\n/**\\n * Sort the passed array such that the relative order of equal elements is preverved.\\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\\n * @param {Array<*>} arr The array to sort (modifies original).\\n * @param {!function(*, *): number} compareFnc Comparison function.\\n * @api\\n */\\nexport function stableSort(arr, compareFnc) {\\n  var length = arr.length;\\n  var tmp = Array(arr.length);\\n  var i;\\n  for (i = 0; i < length; i++) {\\n    tmp[i] = {index: i, value: arr[i]};\\n  }\\n  tmp.sort(function(a, b) {\\n    return compareFnc(a.value, b.value) || a.index - b.index;\\n  });\\n  for (i = 0; i < arr.length; i++) {\\n    arr[i] = tmp[i].value;\\n  }\\n}\\n\\n\\n/**\\n * @param {Array<*>} arr The array to search in.\\n * @param {Function} func Comparison function.\\n * @return {number} Return index.\\n */\\nexport function findIndex(arr, func) {\\n  var index;\\n  var found = !arr.every(function(el, idx) {\\n    index = idx;\\n    return !func(el, idx, arr);\\n  });\\n  return found ? index : -1;\\n}\\n\\n\\n/**\\n * @param {Array<*>} arr The array to test.\\n * @param {Function=} opt_func Comparison function.\\n * @param {boolean=} opt_strict Strictly sorted (default false).\\n * @return {boolean} Return index.\\n */\\nexport function isSorted(arr, opt_func, opt_strict) {\\n  var compare = opt_func || numberSafeCompareFunction;\\n  return arr.every(function(currentVal, index) {\\n    if (index === 0) {\\n      return true;\\n    }\\n    var res = compare(arr[index - 1], currentVal);\\n    return !(res > 0 || opt_strict && res === 0);\\n  });\\n}\\n\\n//# sourceMappingURL=array.js.map\"]}","code":"!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.n2es6=e():t.n2es6=e()}(window,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"../dist/\",n(n.s=20)}([function(t,e,n){\"use strict\";function r(){return function(){throw new Error(\"Unimplemented abstract method.\")}()}function i(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t}n.r(e),n.d(e,\"abstract\",function(){return r}),n.d(e,\"inherits\",function(){return i}),n.d(e,\"getUid\",function(){return a}),n.d(e,\"VERSION\",function(){return s});var o=0;function a(t){return t.ol_uid||(t.ol_uid=String(++o))}var s=\"5.3.0\"},function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return u}),n.d(e,\"b\",function(){return c}),n.d(e,\"c\",function(){return h}),n.d(e,\"e\",function(){return f}),n.d(e,\"d\",function(){return l});var r=n(5);function i(t,e,n,r){for(var i,o=0,a=t.length;o<a;++o)if((i=t[o]).listener===e&&i.bindTo===n)return r&&(i.deleteIndex=o),i}function o(t,e){var n=a(t);return n?n[e]:void 0}function a(t,e){var n=t.ol_lm;return!n&&e&&(n=t.ol_lm={}),n}function s(t,e){var n=o(t,e);if(n){for(var i=0,s=n.length;i<s;++i)t.removeEventListener(e,n[i].boundListener),Object(r.b)(n[i]);n.length=0;var u=a(t);u&&(delete u[e],0===Object.keys(u).length&&function(t){delete t.ol_lm}(t))}}function u(t,e,n,r,o){var s=a(t,!0),u=s[e];u||(u=s[e]=[]);var c=i(u,n,r,!1);return c?o||(c.callOnce=!1):(c={bindTo:r,callOnce:!!o,listener:n,target:t,type:e},t.addEventListener(e,function(t){var e=function(e){var n=t.listener,r=t.bindTo||t.target;return t.callOnce&&f(t),n.call(r,e)};return t.boundListener=e,e}(c)),u.push(c)),c}function c(t,e,n,r){return u(t,e,n,r,!0)}function h(t,e,n,r){var a=o(t,e);if(a){var s=i(a,n,r,!0);s&&f(s)}}function f(t){if(t&&t.target){t.target.removeEventListener(t.type,t.boundListener);var e=o(t.target,t.type);if(e){var n=\"deleteIndex\"in t?t.deleteIndex:e.indexOf(t);-1!==n&&e.splice(n,1),0===e.length&&s(t.target,t.type)}Object(r.b)(t)}}function l(t){var e=a(t);if(e)for(var n in e)s(t,n)}},function(t,e,n){\"use strict\";n.r(e);var r=n(6),i={BOTTOM_LEFT:\"bottom-left\",BOTTOM_RIGHT:\"bottom-right\",TOP_LEFT:\"top-left\",TOP_RIGHT:\"top-right\"},o={UNKNOWN:0,INTERSECTING:1,ABOVE:2,RIGHT:4,BELOW:8,LEFT:16};function a(t){for(var e=d(),n=0,r=t.length;n<r;++n)O(e,t[n]);return e}function s(t,e,n){return n?(n[0]=t[0]-e,n[1]=t[1]-e,n[2]=t[2]+e,n[3]=t[3]+e,n):[t[0]-e,t[1]-e,t[2]+e,t[3]+e]}function u(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t.slice()}function c(t,e,n){var r,i;return(r=e<t[0]?t[0]-e:t[2]<e?e-t[2]:0)*r+(i=n<t[1]?t[1]-n:t[3]<n?n-t[3]:0)*i}function h(t,e){return l(t,e[0],e[1])}function f(t,e){return t[0]<=e[0]&&e[2]<=t[2]&&t[1]<=e[1]&&e[3]<=t[3]}function l(t,e,n){return t[0]<=e&&e<=t[2]&&t[1]<=n&&n<=t[3]}function p(t,e){var n=t[0],r=t[1],i=t[2],a=t[3],s=e[0],u=e[1],c=o.UNKNOWN;return s<n?c|=o.LEFT:s>i&&(c|=o.RIGHT),u<r?c|=o.BELOW:u>a&&(c|=o.ABOVE),c===o.UNKNOWN&&(c=o.INTERSECTING),c}function d(){return[1/0,1/0,-1/0,-1/0]}function g(t,e,n,r,i){return i?(i[0]=t,i[1]=e,i[2]=n,i[3]=r,i):[t,e,n,r]}function y(t){return g(1/0,1/0,-1/0,-1/0,t)}function m(t,e){var n=t[0],r=t[1];return g(n,r,n,r,e)}function v(t,e){return C(y(e),t)}function _(t,e,n,r,i){return j(y(i),t,e,n,r)}function b(t,e){return M(y(e),t)}function x(t,e){return t[0]==e[0]&&t[2]==e[2]&&t[1]==e[1]&&t[3]==e[3]}function E(t,e){return e[0]<t[0]&&(t[0]=e[0]),e[2]>t[2]&&(t[2]=e[2]),e[1]<t[1]&&(t[1]=e[1]),e[3]>t[3]&&(t[3]=e[3]),t}function O(t,e){e[0]<t[0]&&(t[0]=e[0]),e[0]>t[2]&&(t[2]=e[0]),e[1]<t[1]&&(t[1]=e[1]),e[1]>t[3]&&(t[3]=e[1])}function C(t,e){for(var n=0,r=e.length;n<r;++n)O(t,e[n]);return t}function j(t,e,n,r,i){for(;n<r;n+=i)I(t,e[n],e[n+1]);return t}function M(t,e){for(var n=0,r=e.length;n<r;++n)C(t,e[n]);return t}function I(t,e,n){t[0]=Math.min(t[0],e),t[1]=Math.min(t[1],n),t[2]=Math.max(t[2],e),t[3]=Math.max(t[3],n)}function F(t,e,n){var r;return(r=e.call(n,S(t)))?r:(r=e.call(n,P(t)))?r:(r=e.call(n,D(t)))?r:(r=e.call(n,B(t)))||!1}function R(t){var e=0;return W(t)||(e=q(t)*Y(t)),e}function S(t){return[t[0],t[1]]}function P(t){return[t[2],t[1]]}function T(t){return[(t[0]+t[2])/2,(t[1]+t[3])/2]}function G(t,e){var n;return e===i.BOTTOM_LEFT?n=S(t):e===i.BOTTOM_RIGHT?n=P(t):e===i.TOP_LEFT?n=B(t):e===i.TOP_RIGHT?n=D(t):Object(r.a)(!1,13),n}function w(t,e){var n=Math.min(t[0],e[0]),r=Math.min(t[1],e[1]);return(Math.max(t[2],e[2])-n)*(Math.max(t[3],e[3])-r)}function X(t,e,n,r,i){var o=e*r[0]/2,a=e*r[1]/2,s=Math.cos(n),u=Math.sin(n),c=o*s,h=o*u,f=a*s,l=a*u,p=t[0],d=t[1],y=p-c+l,m=p-c-l,v=p+c-l,_=p+c+l,b=d-h-f,x=d-h+f,E=d+h+f,O=d+h-f;return g(Math.min(y,m,v,_),Math.min(b,x,E,O),Math.max(y,m,v,_),Math.max(b,x,E,O),i)}function Y(t){return t[3]-t[1]}function L(t,e){return R(A(t,e))}function A(t,e,n){var r=n||[1/0,1/0,-1/0,-1/0];return H(t,e)?(t[0]>e[0]?r[0]=t[0]:r[0]=e[0],t[1]>e[1]?r[1]=t[1]:r[1]=e[1],t[2]<e[2]?r[2]=t[2]:r[2]=e[2],t[3]<e[3]?r[3]=t[3]:r[3]=e[3]):y(r),r}function N(t){return q(t)+Y(t)}function U(t){return[t[2]-t[0],t[3]-t[1]]}function B(t){return[t[0],t[3]]}function D(t){return[t[2],t[3]]}function q(t){return t[2]-t[0]}function H(t,e){return t[0]<=e[2]&&t[2]>=e[0]&&t[1]<=e[3]&&t[3]>=e[1]}function W(t){return t[2]<t[0]||t[3]<t[1]}function K(t,e){return e?(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e):t}function k(t,e){var n=(t[2]-t[0])/2*(e-1),r=(t[3]-t[1])/2*(e-1);t[0]-=n,t[2]+=n,t[1]-=r,t[3]+=r}function z(t,e,n){var r=!1,i=p(t,e),a=p(t,n);if(i===o.INTERSECTING||a===o.INTERSECTING)r=!0;else{var s,u,c=t[0],h=t[1],f=t[2],l=t[3],d=e[0],g=e[1],y=n[0],m=n[1],v=(m-g)/(y-d);a&o.ABOVE&&!(i&o.ABOVE)&&(r=(s=y-(m-l)/v)>=c&&s<=f),r||!(a&o.RIGHT)||i&o.RIGHT||(r=(u=m-(y-f)*v)>=h&&u<=l),r||!(a&o.BELOW)||i&o.BELOW||(r=(s=y-(m-h)/v)>=c&&s<=f),r||!(a&o.LEFT)||i&o.LEFT||(r=(u=m-(y-c)*v)>=h&&u<=l)}return r}function V(t,e,n){var r=[t[0],t[1],t[0],t[3],t[2],t[1],t[2],t[3]];return e(r,r,2),function(t,e,n){return g(Math.min.apply(null,t),Math.min.apply(null,e),Math.max.apply(null,t),Math.max.apply(null,e),n)}([r[0],r[2],r[4],r[6]],[r[1],r[3],r[5],r[7]],n)}n.d(e,\"boundingExtent\",function(){return a}),n.d(e,\"buffer\",function(){return s}),n.d(e,\"clone\",function(){return u}),n.d(e,\"closestSquaredDistanceXY\",function(){return c}),n.d(e,\"containsCoordinate\",function(){return h}),n.d(e,\"containsExtent\",function(){return f}),n.d(e,\"containsXY\",function(){return l}),n.d(e,\"coordinateRelationship\",function(){return p}),n.d(e,\"createEmpty\",function(){return d}),n.d(e,\"createOrUpdate\",function(){return g}),n.d(e,\"createOrUpdateEmpty\",function(){return y}),n.d(e,\"createOrUpdateFromCoordinate\",function(){return m}),n.d(e,\"createOrUpdateFromCoordinates\",function(){return v}),n.d(e,\"createOrUpdateFromFlatCoordinates\",function(){return _}),n.d(e,\"createOrUpdateFromRings\",function(){return b}),n.d(e,\"equals\",function(){return x}),n.d(e,\"extend\",function(){return E}),n.d(e,\"extendCoordinate\",function(){return O}),n.d(e,\"extendCoordinates\",function(){return C}),n.d(e,\"extendFlatCoordinates\",function(){return j}),n.d(e,\"extendRings\",function(){return M}),n.d(e,\"extendXY\",function(){return I}),n.d(e,\"forEachCorner\",function(){return F}),n.d(e,\"getArea\",function(){return R}),n.d(e,\"getBottomLeft\",function(){return S}),n.d(e,\"getBottomRight\",function(){return P}),n.d(e,\"getCenter\",function(){return T}),n.d(e,\"getCorner\",function(){return G}),n.d(e,\"getEnlargedArea\",function(){return w}),n.d(e,\"getForViewAndSize\",function(){return X}),n.d(e,\"getHeight\",function(){return Y}),n.d(e,\"getIntersectionArea\",function(){return L}),n.d(e,\"getIntersection\",function(){return A}),n.d(e,\"getMargin\",function(){return N}),n.d(e,\"getSize\",function(){return U}),n.d(e,\"getTopLeft\",function(){return B}),n.d(e,\"getTopRight\",function(){return D}),n.d(e,\"getWidth\",function(){return q}),n.d(e,\"intersects\",function(){return H}),n.d(e,\"isEmpty\",function(){return W}),n.d(e,\"returnOrUpdate\",function(){return K}),n.d(e,\"scaleFromCenter\",function(){return k}),n.d(e,\"intersectsSegment\",function(){return z}),n.d(e,\"applyTransform\",function(){return V})},function(t,e,n){\"use strict\";e.a={POINT:\"Point\",LINE_STRING:\"LineString\",LINEAR_RING:\"LinearRing\",POLYGON:\"Polygon\",MULTI_POINT:\"MultiPoint\",MULTI_LINE_STRING:\"MultiLineString\",MULTI_POLYGON:\"MultiPolygon\",GEOMETRY_COLLECTION:\"GeometryCollection\",CIRCLE:\"Circle\"}},function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return r}),n.d(e,\"c\",function(){return i}),n.d(e,\"d\",function(){return o}),n.d(e,\"e\",function(){return a}),n.d(e,\"b\",function(){return s});n(6);var r=\"cosh\"in Math?Math.cosh:function(t){var e=Math.exp(t);return(e+1/e)/2};function i(t,e,n,r){var i=n-t,o=r-e;return i*i+o*o}function o(t){return 180*t/Math.PI}function a(t){return t*Math.PI/180}function s(t,e){var n=t%e;return n*e<0?n+e:n}},function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return r}),n.d(e,\"b\",function(){return i}),n.d(e,\"c\",function(){return o}),n.d(e,\"d\",function(){return a});var r=\"function\"==typeof Object.assign?Object.assign:function(t,e){var n=arguments;if(null==t)throw new TypeError(\"Cannot convert undefined or null to object\");for(var r=Object(t),i=1,o=arguments.length;i<o;++i){var a=n[i];if(null!=a)for(var s in a)a.hasOwnProperty(s)&&(r[s]=a[s])}return r};function i(t){for(var e in t)delete t[e]}function o(t){var e=[];for(var n in t)e.push(t[n]);return e}function a(t){var e;for(e in t)return!1;return!e}},function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return i});var r=n(13);function i(t,e){if(!t)throw new r.a(e)}},function(t,e,n){\"use strict\";n.d(e,\"a\",function(){return i});var r={DEGREES:\"degrees\",FEET:\"ft\",METERS:\"m\",PIXELS:\"pixels\",TILE_PIXELS:\"tile-pixels\",USFEET:\"us-ft\"},i={};i[r.DEGREES]=2*Math.PI*6370997/360,i[r.FEET]=.3048,i[r.METERS]=1,i[r.USFEET]=1200/3937,e.b=r},function(t,e,n){\"use strict\";var r=n(0),i=n(14),o=n(1),a=function(){this.disposed_=!1};a.prototype.dispose=function(){this.disposed_||(this.disposed_=!0,this.disposeInternal())},a.prototype.disposeInternal=function(){};var s=a,u=n(9),c=n(11),h=function(t){function e(){t.call(this),this.pendingRemovals_={},this.dispatching_={},this.listeners_={}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.addEventListener=function(t,e){var n=this.listeners_[t];n||(n=this.listeners_[t]=[]),-1===n.indexOf(e)&&n.push(e)},e.prototype.dispatchEvent=function(t){var e=\"string\"==typeof t?new c.a(t):t,n=e.type;e.target=this;var r,i=this.listeners_[n];if(i){n in this.dispatching_||(this.dispatching_[n]=0,this.pendingRemovals_[n]=0),++this.dispatching_[n];for(var o=0,a=i.length;o<a;++o)if(!1===i[o].call(this,e)||e.propagationStopped){r=!1;break}if(--this.dispatching_[n],0===this.dispatching_[n]){var s=this.pendingRemovals_[n];for(delete this.pendingRemovals_[n];s--;)this.removeEventListener(n,u.b);delete this.dispatching_[n]}return r}},e.prototype.disposeInternal=function(){Object(o.d)(this)},e.prototype.getListeners=function(t){return this.listeners_[t]},e.prototype.hasListener=function(t){return t?t in this.listeners_:Object.keys(this.listeners_).length>0},e.prototype.removeEventListener=function(t,e){var n=this.listeners_[t];if(n){var r=n.indexOf(e);t in this.pendingRemovals_?(n[r]=u.b,++this.pendingRemovals_[t]):(n.splice(r,1),0===n.length&&delete this.listeners_[t])}},e}(s),f=n(10);var l=function(t){function e(){t.call(this),this.revision_=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.changed=function(){++this.revision_,this.dispatchEvent(f.a.CHANGE)},e.prototype.getRevision=function(){return this.revision_},e.prototype.on=function(t,e){if(Array.isArray(t)){for(var n=t.length,r=new Array(n),i=0;i<n;++i)r[i]=Object(o.a)(this,t[i],e);return r}return Object(o.a)(this,t,e)},e.prototype.once=function(t,e){if(Array.isArray(t)){for(var n=t.length,r=new Array(n),i=0;i<n;++i)r[i]=Object(o.b)(this,t[i],e);return r}return Object(o.b)(this,t,e)},e.prototype.un=function(t,e){if(Array.isArray(t))for(var n=0,r=t.length;n<r;++n)Object(o.c)(this,t[n],e);else Object(o.c)(this,t,e)},e}(h),p=n(5);n.d(e,\"b\",function(){return m});var d=function(t){function e(e,n,r){t.call(this,e),this.key=n,this.oldValue=r}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(c.a),g=function(t){function e(e){t.call(this),Object(r.getUid)(this),this.values_={},void 0!==e&&this.setProperties(e)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.get=function(t){var e;return this.values_.hasOwnProperty(t)&&(e=this.values_[t]),e},e.prototype.getKeys=function(){return Object.keys(this.values_)},e.prototype.getProperties=function(){return Object(p.a)({},this.values_)},e.prototype.notify=function(t,e){var n;n=m(t),this.dispatchEvent(new d(n,t,e)),n=i.a.PROPERTYCHANGE,this.dispatchEvent(new d(n,t,e))},e.prototype.set=function(t,e,n){if(n)this.values_[t]=e;else{var r=this.values_[t];this.values_[t]=e,r!==e&&this.notify(t,r)}},e.prototype.setProperties=function(t,e){for(var n in t)this.set(n,t[n],e)},e.prototype.unset=function(t,e){if(t in this.values_){var n=this.values_[t];delete this.values_[t],e||this.notify(t,n)}},e}(l),y={};function m(t){return y.hasOwnProperty(t)?y[t]:y[t]=\"change:\"+t}e.a=g},function(t,e,n){\"use strict\";function r(){return!0}function i(){}n.d(e,\"a\",function(){return r}),n.d(e,\"b\",function(){return i})},function(t,e,n){\"use strict\";e.a={CHANGE:\"change\",CLEAR:\"clear\",CONTEXTMENU:\"contextmenu\",CLICK:\"click\",DBLCLICK:\"dblclick\",DRAGENTER:\"dragenter\",DRAGOVER:\"dragover\",DROP:\"drop\",ERROR:\"error\",KEYDOWN:\"keydown\",KEYPRESS:\"keypress\",LOAD:\"load\",MOUSEDOWN:\"mousedown\",MOUSEMOVE:\"mousemove\",MOUSEOUT:\"mouseout\",MOUSEUP:\"mouseup\",MOUSEWHEEL:\"mousewheel\",MSPOINTERDOWN:\"MSPointerDown\",RESIZE:\"resize\",TOUCHSTART:\"touchstart\",TOUCHMOVE:\"touchmove\",TOUCHEND:\"touchend\",WHEEL:\"wheel\"}},function(t,e,n){\"use strict\";var r=function(t){this.propagationStopped,this.type=t,this.target=null};r.prototype.preventDefault=function(){this.propagationStopped=!0},r.prototype.stopPropagation=function(){this.propagationStopped=!0},e.a=r},function(t,e,n){\"use strict\";n.r(e);var r=n(4),i=(n(3),6371008.8);function o(t,e,n){var o=n||i,a=Object(r.e)(t[1]),s=Object(r.e)(e[1]),u=(s-a)/2,c=Object(r.e)(e[0]-t[0])/2,h=Math.sin(u)*Math.sin(u)+Math.sin(c)*Math.sin(c)*Math.cos(a)*Math.cos(s);return 2*o*Math.atan2(Math.sqrt(h),Math.sqrt(1-h))}var a=n(2),s=n(7),u=function(t){this.code_=t.code,this.units_=t.units,this.extent_=void 0!==t.extent?t.extent:null,this.worldExtent_=void 0!==t.worldExtent?t.worldExtent:null,this.axisOrientation_=void 0!==t.axisOrientation?t.axisOrientation:\"enu\",this.global_=void 0!==t.global&&t.global,this.canWrapX_=!(!this.global_||!this.extent_),this.getPointResolutionFunc_=t.getPointResolution,this.defaultTileGrid_=null,this.metersPerUnit_=t.metersPerUnit};u.prototype.canWrapX=function(){return this.canWrapX_},u.prototype.getCode=function(){return this.code_},u.prototype.getExtent=function(){return this.extent_},u.prototype.getUnits=function(){return this.units_},u.prototype.getMetersPerUnit=function(){return this.metersPerUnit_||s.a[this.units_]},u.prototype.getWorldExtent=function(){return this.worldExtent_},u.prototype.getAxisOrientation=function(){return this.axisOrientation_},u.prototype.isGlobal=function(){return this.global_},u.prototype.setGlobal=function(t){this.global_=t,this.canWrapX_=!(!t||!this.extent_)},u.prototype.getDefaultTileGrid=function(){return this.defaultTileGrid_},u.prototype.setDefaultTileGrid=function(t){this.defaultTileGrid_=t},u.prototype.setExtent=function(t){this.extent_=t,this.canWrapX_=!(!this.global_||!t)},u.prototype.setWorldExtent=function(t){this.worldExtent_=t},u.prototype.setGetPointResolution=function(t){this.getPointResolutionFunc_=t},u.prototype.getPointResolutionFunc=function(){return this.getPointResolutionFunc_};var c=u,h=6378137,f=Math.PI*h,l=[-f,-f,f,f],p=[-180,-85,180,85],d=function(t){function e(e){t.call(this,{code:e,units:s.b.METERS,extent:l,global:!0,worldExtent:p,getPointResolution:function(t,e){return t/Object(r.a)(e[1]/h)}})}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(c),g=[new d(\"EPSG:3857\"),new d(\"EPSG:102100\"),new d(\"EPSG:102113\"),new d(\"EPSG:900913\"),new d(\"urn:ogc:def:crs:EPSG:6.18:3:3857\"),new d(\"urn:ogc:def:crs:EPSG::3857\"),new d(\"http://www.opengis.net/gml/srs/epsg.xml#3857\")];function y(t,e,n){var r=t.length,i=n>1?n:2,o=e;void 0===o&&(o=i>2?t.slice():new Array(r));for(var a=f,s=0;s<r;s+=i){o[s]=a*t[s]/180;var u=h*Math.log(Math.tan(Math.PI*(t[s+1]+90)/360));u>a?u=a:u<-a&&(u=-a),o[s+1]=u}return o}function m(t,e,n){var r=t.length,i=n>1?n:2,o=e;void 0===o&&(o=i>2?t.slice():new Array(r));for(var a=0;a<r;a+=i)o[a]=180*t[a]/f,o[a+1]=360*Math.atan(Math.exp(t[a+1]/h))/Math.PI-90;return o}var v=[-180,-90,180,90],_=6378137*Math.PI/180,b=function(t){function e(e,n){t.call(this,{code:e,units:s.b.DEGREES,extent:v,axisOrientation:n,global:!0,metersPerUnit:_,worldExtent:v})}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(c),x=[new b(\"CRS:84\"),new b(\"EPSG:4326\",\"neu\"),new b(\"urn:ogc:def:crs:EPSG::4326\",\"neu\"),new b(\"urn:ogc:def:crs:EPSG:6.6:4326\",\"neu\"),new b(\"urn:ogc:def:crs:OGC:1.3:CRS84\"),new b(\"urn:ogc:def:crs:OGC:2:84\"),new b(\"http://www.opengis.net/gml/srs/epsg.xml#4326\",\"neu\"),new b(\"urn:x-ogc:def:crs:EPSG:4326\",\"neu\")],E={};n(5);var O={};function C(t,e,n){var r=t.getCode(),i=e.getCode();r in O||(O[r]={}),O[r][i]=n}function j(t,e,n){var r;if(void 0!==e){for(var i=0,o=t.length;i<o;++i)e[i]=t[i];r=e}else r=t.slice();return r}function M(t,e,n){if(void 0!==e&&t!==e){for(var r=0,i=t.length;r<i;++r)e[r]=t[r];t=e}return t}function I(t){!function(t,e){E[t]=e}(t.getCode(),t),C(t,t,j)}function F(t){t.forEach(I)}function R(t){return\"string\"==typeof t?E[t]||null:t||null}function S(t,e,n,r){var i,a=(t=R(t)).getPointResolutionFunc();if(a)i=a(e,n);else if(t.getUnits()==s.b.DEGREES&&!r||r==s.b.DEGREES)i=e;else{var u=U(t,R(\"EPSG:4326\")),c=[n[0]-e/2,n[1],n[0]+e/2,n[1],n[0],n[1]-e/2,n[0],n[1]+e/2];i=(o((c=u(c,c,2)).slice(0,2),c.slice(2,4))+o(c.slice(4,6),c.slice(6,8)))/2;var h=r?s.a[r]:t.getMetersPerUnit();void 0!==h&&(i/=h)}return i}function P(t){F(t),t.forEach(function(e){t.forEach(function(t){e!==t&&C(e,t,j)})})}function T(t,e,n,r){t.forEach(function(t){e.forEach(function(e){C(t,e,n),C(e,t,r)})})}function G(){E={},O={}}function w(t,e){return t?\"string\"==typeof t?R(t):t:R(e)}function X(t){return function(e,n,r){for(var i=e.length,o=void 0!==r?r:2,a=void 0!==n?n:new Array(i),s=0;s<i;s+=o){var u=t([e[s],e[s+1]]);a[s]=u[0],a[s+1]=u[1];for(var c=o-1;c>=2;--c)a[s+c]=e[s+c]}return a}}function Y(t,e,n,r){var i=R(t),o=R(e);C(i,o,X(n)),C(o,i,X(r))}function L(t,e){return D(t,\"EPSG:4326\",void 0!==e?e:\"EPSG:3857\")}function A(t,e){var n=D(t,void 0!==e?e:\"EPSG:3857\",\"EPSG:4326\"),i=n[0];return(i<-180||i>180)&&(n[0]=Object(r.b)(i+180,360)-180),n}function N(t,e){if(t===e)return!0;var n=t.getUnits()===e.getUnits();return t.getCode()===e.getCode()?n:U(t,e)===j&&n}function U(t,e){var n=function(t,e){var n;return t in O&&e in O[t]&&(n=O[t][e]),n}(t.getCode(),e.getCode());return n||(n=M),n}function B(t,e){return U(R(t),R(e))}function D(t,e,n){return B(e,n)(t,void 0,t.length)}function q(t,e,n){var r=B(e,n);return Object(a.applyTransform)(t,r)}function H(t,e,n){return U(e,n)(t)}function W(){P(g),P(x),T(x,g,y,m)}n.d(e,\"cloneTransform\",function(){return j}),n.d(e,\"identityTransform\",function(){return M}),n.d(e,\"addProjection\",function(){return I}),n.d(e,\"addProjections\",function(){return F}),n.d(e,\"get\",function(){return R}),n.d(e,\"getPointResolution\",function(){return S}),n.d(e,\"addEquivalentProjections\",function(){return P}),n.d(e,\"addEquivalentTransforms\",function(){return T}),n.d(e,\"clearAllProjections\",function(){return G}),n.d(e,\"createProjection\",function(){return w}),n.d(e,\"createTransformFromCoordinateTransform\",function(){return X}),n.d(e,\"addCoordinateTransforms\",function(){return Y}),n.d(e,\"fromLonLat\",function(){return L}),n.d(e,\"toLonLat\",function(){return A}),n.d(e,\"equivalent\",function(){return N}),n.d(e,\"getTransformFromProjections\",function(){return U}),n.d(e,\"getTransform\",function(){return B}),n.d(e,\"transform\",function(){return D}),n.d(e,\"transformExtent\",function(){return q}),n.d(e,\"transformWithProjections\",function(){return H}),n.d(e,\"addCommon\",function(){return W}),n.d(e,\"METERS_PER_UNIT\",function(){return s.a}),n.d(e,\"Projection\",function(){return c}),W()},function(t,e,n){\"use strict\";var r=n(0),i=function(t){function e(e){var n=\"Assertion failed. See https://openlayers.org/en/\"+(\"latest\"===r.VERSION?r.VERSION:\"v\"+r.VERSION.split(\"-\")[0])+\"/doc/errors/#\"+e+\" for details.\";t.call(this,n),this.code=e,this.name=\"AssertionError\",this.message=n}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(Error);e.a=i},function(t,e,n){\"use strict\";e.a={PROPERTYCHANGE:\"propertychange\"}},function(t,e,n){\"use strict\";n.r(e);var r=n(4);function i(t,e,n){var r=void 0!==n?t.toFixed(n):\"\"+t,i=r.indexOf(\".\");return(i=-1===i?r.length:i)>e?r:new Array(1+e-i).join(\"0\")+r}function o(t,e){return t[0]+=e[0],t[1]+=e[1],t}function a(t,e){var n=e.getRadius(),r=e.getCenter(),i=r[0],o=r[1],a=t[0]-i,s=t[1]-o;0===a&&0===s&&(a=1);var u=Math.sqrt(a*a+s*s);return[i+n*a/u,o+n*s/u]}function s(t,e){var n,r,i=t[0],o=t[1],a=e[0],s=e[1],u=a[0],c=a[1],h=s[0],f=s[1],l=h-u,p=f-c,d=0===l&&0===p?0:(l*(i-u)+p*(o-c))/(l*l+p*p||0);return d<=0?(n=u,r=c):d>=1?(n=h,r=f):(n=u+d*l,r=c+d*p),[n,r]}function u(t){return function(e){return v(e,t)}}function c(t,e,n){var o=Object(r.b)(e+180,360)-180,a=Math.abs(3600*o),s=n||0,u=Math.pow(10,s),c=Math.floor(a/3600),h=Math.floor((a-3600*c)/60),f=a-3600*c-60*h;return(f=Math.ceil(f*u)/u)>=60&&(f=0,h+=1),h>=60&&(h=0,c+=1),c+\"° \"+i(h,2)+\"′ \"+i(f,2,s)+\"″\"+(0==o?\"\":\" \"+t.charAt(o<0?1:0))}function h(t,e,n){return t?e.replace(\"{x}\",t[0].toFixed(n)).replace(\"{y}\",t[1].toFixed(n)):\"\"}function f(t,e){for(var n=!0,r=t.length-1;r>=0;--r)if(t[r]!=e[r]){n=!1;break}return n}function l(t,e){var n=Math.cos(e),r=Math.sin(e),i=t[0]*n-t[1]*r,o=t[1]*n+t[0]*r;return t[0]=i,t[1]=o,t}function p(t,e){return t[0]*=e,t[1]*=e,t}function d(t,e){var n=t[0]-e[0],r=t[1]-e[1];return n*n+r*r}function g(t,e){return Math.sqrt(d(t,e))}function y(t,e){return d(t,s(t,e))}function m(t,e){return t?c(\"NS\",t[1],e)+\" \"+c(\"EW\",t[0],e):\"\"}function v(t,e){return h(t,\"{x}, {y}\",e)}n.d(e,\"add\",function(){return o}),n.d(e,\"closestOnCircle\",function(){return a}),n.d(e,\"closestOnSegment\",function(){return s}),n.d(e,\"createStringXY\",function(){return u}),n.d(e,\"degreesToStringHDMS\",function(){return c}),n.d(e,\"format\",function(){return h}),n.d(e,\"equals\",function(){return f}),n.d(e,\"rotate\",function(){return l}),n.d(e,\"scale\",function(){return p}),n.d(e,\"squaredDistance\",function(){return d}),n.d(e,\"distance\",function(){return g}),n.d(e,\"squaredDistanceToSegment\",function(){return y}),n.d(e,\"toStringHDMS\",function(){return m}),n.d(e,\"toStringXY\",function(){return v})},function(t,e,n){\"use strict\";n.r(e),n.d(e,\"createStyleFunction\",function(){return u});var r=n(6),i=n(1),o=n(10),a=n(8),s=function(t){function e(e){if(t.call(this),this.id_=void 0,this.geometryName_=\"geometry\",this.style_=null,this.styleFunction_=void 0,this.geometryChangeKey_=null,Object(i.a)(this,Object(a.b)(this.geometryName_),this.handleGeometryChanged_,this),e)if(\"function\"==typeof e.getSimplifiedGeometry){var n=e;this.setGeometry(n)}else{var r=e;this.setProperties(r)}}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.clone=function(){var t=new e(this.getProperties());t.setGeometryName(this.getGeometryName());var n=this.getGeometry();n&&t.setGeometry(n.clone());var r=this.getStyle();return r&&t.setStyle(r),t},e.prototype.getGeometry=function(){return this.get(this.geometryName_)},e.prototype.getId=function(){return this.id_},e.prototype.getGeometryName=function(){return this.geometryName_},e.prototype.getStyle=function(){return this.style_},e.prototype.getStyleFunction=function(){return this.styleFunction_},e.prototype.handleGeometryChange_=function(){this.changed()},e.prototype.handleGeometryChanged_=function(){this.geometryChangeKey_&&(Object(i.e)(this.geometryChangeKey_),this.geometryChangeKey_=null);var t=this.getGeometry();t&&(this.geometryChangeKey_=Object(i.a)(t,o.a.CHANGE,this.handleGeometryChange_,this)),this.changed()},e.prototype.setGeometry=function(t){this.set(this.geometryName_,t)},e.prototype.setStyle=function(t){this.style_=t,this.styleFunction_=t?u(t):void 0,this.changed()},e.prototype.setId=function(t){this.id_=t,this.changed()},e.prototype.setGeometryName=function(t){Object(i.c)(this,Object(a.b)(this.geometryName_),this.handleGeometryChanged_,this),this.geometryName_=t,Object(i.a)(this,Object(a.b)(this.geometryName_),this.handleGeometryChanged_,this),this.handleGeometryChanged_()},e}(a.a);function u(t){return\"function\"==typeof t?t:(Array.isArray(t)?e=t:(Object(r.a)(\"function\"==typeof t.getZIndex,41),e=[t]),function(){return e});var e}e.default=s},function(t,e,n){\"use strict\";n.r(e);var r=n(2),i=n(3),o=n(0),a=n(8);function s(t,e,n,r,i,o){for(var a=o||[],s=0,u=e;u<n;u+=r){var c=t[u],h=t[u+1];a[s++]=i[0]*c+i[2]*h+i[4],a[s++]=i[1]*c+i[3]*h+i[5]}return o&&a.length!=s&&(a.length=s),a}var u=n(12),c=n(7);n(6),new Array(6);var h=[1,0,0,1,0,0],f=function(t){function e(){t.call(this),this.extent_=Object(r.createEmpty)(),this.extentRevision_=-1,this.simplifiedGeometryCache={},this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=0}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.clone=function(){return Object(o.abstract)()},e.prototype.closestPointXY=function(t,e,n,r){return Object(o.abstract)()},e.prototype.containsXY=function(t,e){return!1},e.prototype.getClosestPoint=function(t,e){var n=e||[NaN,NaN];return this.closestPointXY(t[0],t[1],n,1/0),n},e.prototype.intersectsCoordinate=function(t){return this.containsXY(t[0],t[1])},e.prototype.computeExtent=function(t){return Object(o.abstract)()},e.prototype.getExtent=function(t){return this.extentRevision_!=this.getRevision()&&(this.extent_=this.computeExtent(this.extent_),this.extentRevision_=this.getRevision()),Object(r.returnOrUpdate)(this.extent_,t)},e.prototype.rotate=function(t,e){Object(o.abstract)()},e.prototype.scale=function(t,e,n){Object(o.abstract)()},e.prototype.simplify=function(t){return this.getSimplifiedGeometry(t*t)},e.prototype.getSimplifiedGeometry=function(t){return Object(o.abstract)()},e.prototype.getType=function(){return Object(o.abstract)()},e.prototype.applyTransform=function(t){Object(o.abstract)()},e.prototype.intersectsExtent=function(t){return Object(o.abstract)()},e.prototype.translate=function(t,e){Object(o.abstract)()},e.prototype.transform=function(t,e){var n=Object(u.get)(t),i=n.getUnits()==c.b.TILE_PIXELS?function(t,i,o){var a,c,f,l,p,d,g,y,m,v,_=n.getExtent(),b=n.getWorldExtent(),x=Object(r.getHeight)(b)/Object(r.getHeight)(_);return a=h,c=b[0],f=b[3],l=x,p=-x,d=0,g=0,y=0,m=Math.sin(d),v=Math.cos(d),a[0]=l*v,a[1]=p*m,a[2]=-l*m,a[3]=p*v,a[4]=g*l*v-y*l*m+c,a[5]=g*p*m+y*p*v+f,s(t,0,t.length,o,h,i),Object(u.getTransform)(n,e)(t,i,o)}:Object(u.getTransform)(n,e);return this.applyTransform(i),this},e}(a.a),l={XY:\"XY\",XYZ:\"XYZ\",XYM:\"XYM\",XYZM:\"XYZM\"},p=n(5);function d(t){var e;return t==l.XY?e=2:t==l.XYZ||t==l.XYM?e=3:t==l.XYZM&&(e=4),e}var g=function(t){function e(){t.call(this),this.layout=l.XY,this.stride=2,this.flatCoordinates=null}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.computeExtent=function(t){return Object(r.createOrUpdateFromFlatCoordinates)(this.flatCoordinates,0,this.flatCoordinates.length,this.stride,t)},e.prototype.getCoordinates=function(){return Object(o.abstract)()},e.prototype.getFirstCoordinate=function(){return this.flatCoordinates.slice(0,this.stride)},e.prototype.getFlatCoordinates=function(){return this.flatCoordinates},e.prototype.getLastCoordinate=function(){return this.flatCoordinates.slice(this.flatCoordinates.length-this.stride)},e.prototype.getLayout=function(){return this.layout},e.prototype.getSimplifiedGeometry=function(t){if(this.simplifiedGeometryRevision!=this.getRevision()&&(Object(p.b)(this.simplifiedGeometryCache),this.simplifiedGeometryMaxMinSquaredTolerance=0,this.simplifiedGeometryRevision=this.getRevision()),t<0||0!==this.simplifiedGeometryMaxMinSquaredTolerance&&t<=this.simplifiedGeometryMaxMinSquaredTolerance)return this;var e=t.toString();if(this.simplifiedGeometryCache.hasOwnProperty(e))return this.simplifiedGeometryCache[e];var n=this.getSimplifiedGeometryInternal(t);return n.getFlatCoordinates().length<this.flatCoordinates.length?(this.simplifiedGeometryCache[e]=n,n):(this.simplifiedGeometryMaxMinSquaredTolerance=t,this)},e.prototype.getSimplifiedGeometryInternal=function(t){return this},e.prototype.getStride=function(){return this.stride},e.prototype.setFlatCoordinates=function(t,e){this.stride=d(t),this.layout=t,this.flatCoordinates=e},e.prototype.setCoordinates=function(t,e){Object(o.abstract)()},e.prototype.setLayout=function(t,e,n){var r;if(t)r=d(t);else{for(var i=0;i<n;++i){if(0===e.length)return this.layout=l.XY,void(this.stride=2);e=e[0]}t=function(t){var e;2==t?e=l.XY:3==t?e=l.XYZ:4==t&&(e=l.XYZM);return e}(r=e.length)}this.layout=t,this.stride=r},e.prototype.applyTransform=function(t){this.flatCoordinates&&(t(this.flatCoordinates,this.flatCoordinates,this.stride),this.changed())},e.prototype.rotate=function(t,e){var n=this.getFlatCoordinates();if(n){var r=this.getStride();!function(t,e,n,r,i,o,a){for(var s=a||[],u=Math.cos(i),c=Math.sin(i),h=o[0],f=o[1],l=0,p=e;p<n;p+=r){var d=t[p]-h,g=t[p+1]-f;s[l++]=h+d*u-g*c,s[l++]=f+d*c+g*u;for(var y=p+2;y<p+r;++y)s[l++]=t[y]}a&&s.length!=l&&(s.length=l)}(n,0,n.length,r,t,e,n),this.changed()}},e.prototype.scale=function(t,e,n){var i=e;void 0===i&&(i=t);var o=n;o||(o=Object(r.getCenter)(this.getExtent()));var a=this.getFlatCoordinates();if(a){var s=this.getStride();!function(t,e,n,r,i,o,a,s){for(var u=s||[],c=a[0],h=a[1],f=0,l=e;l<n;l+=r){var p=t[l]-c,d=t[l+1]-h;u[f++]=c+i*p,u[f++]=h+o*d;for(var g=l+2;g<l+r;++g)u[f++]=t[g]}s&&u.length!=f&&(u.length=f)}(a,0,a.length,s,t,i,o,a),this.changed()}},e.prototype.translate=function(t,e){var n=this.getFlatCoordinates();if(n){var r=this.getStride();!function(t,e,n,r,i,o,a){for(var s=a||[],u=0,c=e;c<n;c+=r){s[u++]=t[c]+i,s[u++]=t[c+1]+o;for(var h=c+2;h<c+r;++h)s[u++]=t[h]}a&&s.length!=u&&(s.length=u)}(n,0,n.length,r,t,e,n),this.changed()}},e}(f);var y=n(4),m=function(t){function e(e,n){t.call(this),this.setCoordinates(e,n)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.clone=function(){return new e(this.flatCoordinates.slice(),this.layout)},e.prototype.closestPointXY=function(t,e,n,r){var i=this.flatCoordinates,o=Object(y.c)(t,e,i[0],i[1]);if(o<r){for(var a=this.stride,s=0;s<a;++s)n[s]=i[s];return n.length=a,o}return r},e.prototype.getCoordinates=function(){return this.flatCoordinates?this.flatCoordinates.slice():[]},e.prototype.computeExtent=function(t){return Object(r.createOrUpdateFromCoordinate)(this.flatCoordinates,t)},e.prototype.getType=function(){return i.a.POINT},e.prototype.intersectsExtent=function(t){return Object(r.containsXY)(t,this.flatCoordinates[0],this.flatCoordinates[1])},e.prototype.setCoordinates=function(t,e){this.setLayout(e,t,0),this.flatCoordinates||(this.flatCoordinates=[]),this.flatCoordinates.length=function(t,e,n,r){for(var i=0,o=n.length;i<o;++i)t[e++]=n[i];return e}(this.flatCoordinates,0,t,this.stride),this.changed()},e}(g);e.default=m},function(t,e,n){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var r=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}(),i=n(0),o=f(n(22)),a=n(12),s=n(2),u=f(n(17)),c=f(n(16)),h=n(15);function f(t){return t&&t.__esModule?t:{default:t}}var l=function(t){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,e);var n=function(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return n.distance=void 0!==t.distance?t.distance:20,n.minimumPolygonPixelSize=void 0!==t.minimumPolygonPixelSize?t.minimumPolygonPixelSize:n.distance,n.minimumLinePixelSize=void 0!==t.minimumLinePixelSize?t.minimumLinePixelSize:n.distance,n.disableDynamicClustering=void 0!==t.disableDynamicClustering&&t.disableDynamicClustering,n.clusterPointsOnly=void 0!==t.clusterPointsOnly&&t.clusterPointsOnly,n.threshold=void 0!==t.threshold?t.threshold:null,n.resolution=1,n.projection=null,n.clusterPrefix=t.clusterPrefix,n.clusterId=1,n}return function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(e,o.default),r(e,[{key:\"loadFeatures\",value:function(t,e,n){this.source.loadFeatures(t,e,n),e!==this.resolution&&(this.clear(),this.resolution=e,this.projection=n,this.cluster(),this.addFeatures(this.features))}},{key:\"cluster\",value:function(){var t=this,e=this;if(void 0!==this.resolution){this.features.length=0;for(var n=(0,s.createEmpty)(),r=this.distance*this.resolution,o=this.source.getFeatures(),a={},u={},c=function(c,h){var f=o[c],l=(0,i.getUid)(f);if(!t._isEligibleFeature(f))return u[l]=!0,t.features.push(f),\"continue\";if(!((0,i.getUid)(f)in a)){var p=(0,s.getCenter)(f.getGeometry().computeExtent());(0,s.createOrUpdateFromCoordinate)(p,n),(0,s.buffer)(n,r,n);var d=t.source.getFeaturesInExtent(n);d=d.filter(function(t){var n=(0,i.getUid)(t);return!(n in a||n in u||!e._isEligibleFeature(f))&&(a[n]=!0,!0)}),t.features.push(t.createCluster(d))}},h=0,f=o.length;h<f;h++)c(h)}}},{key:\"createCluster\",value:function(t){for(var e=[0,0],n=t.length-1;n>=0;--n){var r=(0,s.getCenter)(t[n].getGeometry().computeExtent());r&&(0,h.add)(e,r)}(0,h.scale)(e,1/t.length);var i=new c.default(new u.default(e));return i.set(\"features\",t),i.set(\"fid\",this.clusterPrefix+this.clusterId),++this.clusterId,i}},{key:\"_isEligibleFeature\",value:function(t){if(t.n2DisableClustering)return!1;var e=!0;if(this.disableDynamicClustering)this.clusterPointsOnly&&(e=!1,t.getGeometry().getType().indexOf(\"Point\")>=0&&(e=!0));else{e=!1;var n=this._computeFullBoundingBox(t);if(n){var r=(n[2]-n[0])/this.resolution,i=(n[3]-n[1])/this.resolution;r<this.minimumLinePixelSize&&i<this.minimumLinePixelSize&&(e=!0)}else if(t.getGeometry().getType().indexOf(\"Point\")>=0)e=!0;else{var o=t.getGeometry().computeExtent(),a=(o[2]-o[0])/this.resolution,s=(o[3]-o[1])/this.resolution;a<this.minimumLinePixelSize&&s<this.minimumLinePixelSize&&(e=!0)}}return e}},{key:\"_computeFullBoundingBox\",value:function(t){return this._ComputeFeatureOriginalBboxForMapProjection(t,this.projection)}},{key:\"_ComputeFeatureOriginalBboxForMapProjection\",value:function(t,e){if(t&&t.n2ConvertedBbox)return t.n2ConvertedBbox;var n=void 0;if(t.data&&t.data.nunaliit_geom&&t.data.nunaliit_geom.bbox&&t.n2GeomProj&&e){var r=t.data.nunaliit_geom.bbox;Array.isArray(r)&&r.length>=4&&(n=r,e.getCode()!==t.n2GeomProj.getCode&&(n=(0,a.transformExtent)(r,t.n2GeomProj,e)),t.n2ConvertedBbox=n)}return n}}]),e}();e.default=l},function(t,e,n){\"use strict\";t.exports=i,t.exports.default=i;var r=n(21);function i(t,e){if(!(this instanceof i))return new i(t,e);this._maxEntries=Math.max(4,t||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),e&&this._initFormat(e),this.clear()}function o(t,e,n){if(!n)return e.indexOf(t);for(var r=0;r<e.length;r++)if(n(t,e[r]))return r;return-1}function a(t,e){s(t,0,t.children.length,e,t)}function s(t,e,n,r,i){i||(i=g(null)),i.minX=1/0,i.minY=1/0,i.maxX=-1/0,i.maxY=-1/0;for(var o,a=e;a<n;a++)o=t.children[a],u(i,t.leaf?r(o):o);return i}function u(t,e){return t.minX=Math.min(t.minX,e.minX),t.minY=Math.min(t.minY,e.minY),t.maxX=Math.max(t.maxX,e.maxX),t.maxY=Math.max(t.maxY,e.maxY),t}function c(t,e){return t.minX-e.minX}function h(t,e){return t.minY-e.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function l(t){return t.maxX-t.minX+(t.maxY-t.minY)}function p(t,e){return t.minX<=e.minX&&t.minY<=e.minY&&e.maxX<=t.maxX&&e.maxY<=t.maxY}function d(t,e){return e.minX<=t.maxX&&e.minY<=t.maxY&&e.maxX>=t.minX&&e.maxY>=t.minY}function g(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function y(t,e,n,i,o){for(var a,s=[e,n];s.length;)(n=s.pop())-(e=s.pop())<=i||(a=e+Math.ceil((n-e)/i/2)*i,r(t,a,e,n,o),s.push(e,a,a,n))}i.prototype={all:function(){return this._all(this.data,[])},search:function(t){var e=this.data,n=[],r=this.toBBox;if(!d(t,e))return n;for(var i,o,a,s,u=[];e;){for(i=0,o=e.children.length;i<o;i++)a=e.children[i],d(t,s=e.leaf?r(a):a)&&(e.leaf?n.push(a):p(t,s)?this._all(a,n):u.push(a));e=u.pop()}return n},collides:function(t){var e=this.data,n=this.toBBox;if(!d(t,e))return!1;for(var r,i,o,a,s=[];e;){for(r=0,i=e.children.length;r<i;r++)if(o=e.children[r],d(t,a=e.leaf?n(o):o)){if(e.leaf||p(t,a))return!0;s.push(o)}e=s.pop()}return!1},load:function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var e=0,n=t.length;e<n;e++)this.insert(t[e]);return this}var r=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===r.height)this._splitRoot(this.data,r);else{if(this.data.height<r.height){var i=this.data;this.data=r,r=i}this._insert(r,this.data.height-r.height-1,!0)}else this.data=r;return this},insert:function(t){return t&&this._insert(t,this.data.height-1),this},clear:function(){return this.data=g([]),this},remove:function(t,e){if(!t)return this;for(var n,r,i,a,s=this.data,u=this.toBBox(t),c=[],h=[];s||c.length;){if(s||(s=c.pop(),r=c[c.length-1],n=h.pop(),a=!0),s.leaf&&-1!==(i=o(t,s.children,e)))return s.children.splice(i,1),c.push(s),this._condense(c),this;a||s.leaf||!p(s,u)?r?(n++,s=r.children[n],a=!1):s=null:(c.push(s),h.push(n),n=0,r=s,s=s.children[0])}return this},toBBox:function(t){return t},compareMinX:c,compareMinY:h,toJSON:function(){return this.data},fromJSON:function(t){return this.data=t,this},_all:function(t,e){for(var n=[];t;)t.leaf?e.push.apply(e,t.children):n.push.apply(n,t.children),t=n.pop();return e},_build:function(t,e,n,r){var i,o=n-e+1,s=this._maxEntries;if(o<=s)return a(i=g(t.slice(e,n+1)),this.toBBox),i;r||(r=Math.ceil(Math.log(o)/Math.log(s)),s=Math.ceil(o/Math.pow(s,r-1))),(i=g([])).leaf=!1,i.height=r;var u,c,h,f,l=Math.ceil(o/s),p=l*Math.ceil(Math.sqrt(s));for(y(t,e,n,p,this.compareMinX),u=e;u<=n;u+=p)for(y(t,u,h=Math.min(u+p-1,n),l,this.compareMinY),c=u;c<=h;c+=l)f=Math.min(c+l-1,h),i.children.push(this._build(t,c,f,r-1));return a(i,this.toBBox),i},_chooseSubtree:function(t,e,n,r){for(var i,o,a,s,u,c,h,l,p,d;r.push(e),!e.leaf&&r.length-1!==n;){for(h=l=1/0,i=0,o=e.children.length;i<o;i++)u=f(a=e.children[i]),p=t,d=a,(c=(Math.max(d.maxX,p.maxX)-Math.min(d.minX,p.minX))*(Math.max(d.maxY,p.maxY)-Math.min(d.minY,p.minY))-u)<l?(l=c,h=u<h?u:h,s=a):c===l&&u<h&&(h=u,s=a);e=s||e.children[0]}return e},_insert:function(t,e,n){var r=this.toBBox,i=n?t:r(t),o=[],a=this._chooseSubtree(i,this.data,e,o);for(a.children.push(t),u(a,i);e>=0&&o[e].children.length>this._maxEntries;)this._split(o,e),e--;this._adjustParentBBoxes(i,o,e)},_split:function(t,e){var n=t[e],r=n.children.length,i=this._minEntries;this._chooseSplitAxis(n,i,r);var o=this._chooseSplitIndex(n,i,r),s=g(n.children.splice(o,n.children.length-o));s.height=n.height,s.leaf=n.leaf,a(n,this.toBBox),a(s,this.toBBox),e?t[e-1].children.push(s):this._splitRoot(n,s)},_splitRoot:function(t,e){this.data=g([t,e]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},_chooseSplitIndex:function(t,e,n){var r,i,o,a,u,c,h,l,p,d,g,y,m,v;for(c=h=1/0,r=e;r<=n-e;r++)i=s(t,0,r,this.toBBox),o=s(t,r,n,this.toBBox),p=i,d=o,g=void 0,y=void 0,m=void 0,v=void 0,g=Math.max(p.minX,d.minX),y=Math.max(p.minY,d.minY),m=Math.min(p.maxX,d.maxX),v=Math.min(p.maxY,d.maxY),a=Math.max(0,m-g)*Math.max(0,v-y),u=f(i)+f(o),a<c?(c=a,l=r,h=u<h?u:h):a===c&&u<h&&(h=u,l=r);return l},_chooseSplitAxis:function(t,e,n){var r=t.leaf?this.compareMinX:c,i=t.leaf?this.compareMinY:h;this._allDistMargin(t,e,n,r)<this._allDistMargin(t,e,n,i)&&t.children.sort(r)},_allDistMargin:function(t,e,n,r){t.children.sort(r);var i,o,a=this.toBBox,c=s(t,0,e,a),h=s(t,n-e,n,a),f=l(c)+l(h);for(i=e;i<n-e;i++)o=t.children[i],u(c,t.leaf?a(o):o),f+=l(c);for(i=n-e-1;i>=e;i--)o=t.children[i],u(h,t.leaf?a(o):o),f+=l(h);return f},_adjustParentBBoxes:function(t,e,n){for(var r=n;r>=0;r--)u(e[r],t)},_condense:function(t){for(var e,n=t.length-1;n>=0;n--)0===t[n].children.length?n>0?(e=t[n-1].children).splice(e.indexOf(t[n]),1):this.clear():a(t[n],this.toBBox)},_initFormat:function(t){var e=[\"return a\",\" - b\",\";\"];this.compareMinX=new Function(\"a\",\"b\",e.join(t[0])),this.compareMinY=new Function(\"a\",\"b\",e.join(t[1])),this.toBBox=new Function(\"a\",\"return {minX: a\"+t[0]+\", minY: a\"+t[1]+\", maxX: a\"+t[2]+\", maxY: a\"+t[3]+\"};\")}}},function(t,e,n){\"use strict\";n.r(e);var r=n(18),i=n.n(r);!function(){var t=new Error(\"Cannot find module './n2es6/n2core/nunaliit2.js'\");throw t.code=\"MODULE_NOT_FOUND\",t}();var o={ol5support:{}};o.ol5support.N2Cluster=i.a,e.default=o},function(t,e,n){t.exports=function(){\"use strict\";function t(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function e(t,e){return t<e?-1:t>e?1:0}return function(n,r,i,o,a){!function e(n,r,i,o,a){for(;o>i;){if(o-i>600){var s=o-i+1,u=r-i+1,c=Math.log(s),h=.5*Math.exp(2*c/3),f=.5*Math.sqrt(c*h*(s-h)/s)*(u-s/2<0?-1:1),l=Math.max(i,Math.floor(r-u*h/s+f)),p=Math.min(o,Math.floor(r+(s-u)*h/s+f));e(n,r,l,p,a)}var d=n[r],g=i,y=o;for(t(n,i,r),a(n[o],d)>0&&t(n,i,o);g<y;){for(t(n,g,y),g++,y--;a(n[g],d)<0;)g++;for(;a(n[y],d)>0;)y--}0===a(n[i],d)?t(n,i,y):t(n,++y,o),y<=r&&(i=y+1),r<=y&&(o=y-1)}}(n,r,i||0,o||n.length-1,a||e)}}()},function(t,e,n){\"use strict\";n.r(e);var r=n(0),i=n(6),o=n(16),a=n(3),s=n(15),u=n(1),c=n(10),h=n(2),f=n(17),l=n(13),p=\"add\",d=\"remove\",g=n(8),y=n(11),m=\"length\",v=function(t){function e(e,n){t.call(this,e),this.element=n}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(y.a),_=function(t){function e(e,n){t.call(this);var r=n||{};if(this.unique_=!!r.unique,this.array_=e||[],this.unique_)for(var i=0,o=this.array_.length;i<o;++i)this.assertUnique_(this.array_[i],i);this.updateLength_()}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.clear=function(){for(;this.getLength()>0;)this.pop()},e.prototype.extend=function(t){for(var e=0,n=t.length;e<n;++e)this.push(t[e]);return this},e.prototype.forEach=function(t){for(var e=this.array_,n=0,r=e.length;n<r;++n)t(e[n],n,e)},e.prototype.getArray=function(){return this.array_},e.prototype.item=function(t){return this.array_[t]},e.prototype.getLength=function(){return this.get(m)},e.prototype.insertAt=function(t,e){this.unique_&&this.assertUnique_(e),this.array_.splice(t,0,e),this.updateLength_(),this.dispatchEvent(new v(p,e))},e.prototype.pop=function(){return this.removeAt(this.getLength()-1)},e.prototype.push=function(t){this.unique_&&this.assertUnique_(t);var e=this.getLength();return this.insertAt(e,t),this.getLength()},e.prototype.remove=function(t){for(var e=this.array_,n=0,r=e.length;n<r;++n)if(e[n]===t)return this.removeAt(n)},e.prototype.removeAt=function(t){var e=this.array_[t];return this.array_.splice(t,1),this.updateLength_(),this.dispatchEvent(new v(d,e)),e},e.prototype.setAt=function(t,e){var n=this.getLength();if(t<n){this.unique_&&this.assertUnique_(e,t);var r=this.array_[t];this.array_[t]=e,this.dispatchEvent(new v(d,r)),this.dispatchEvent(new v(p,e))}else{for(var i=n;i<t;++i)this.insertAt(i,void 0);this.insertAt(t,e)}},e.prototype.updateLength_=function(){this.set(m,this.array_.length)},e.prototype.assertUnique_=function(t,e){for(var n=0,r=this.array_.length;n<r;++n)if(this.array_[n]===t&&n!==e)throw new l.a(58)},e}(g.a),b=n(14);var x=n(9),E={ARRAY_BUFFER:\"arraybuffer\",JSON:\"json\",TEXT:\"text\",XML:\"xml\"};function O(t,e){return function(t,e,n,r){return function(i,o,a){var s=new XMLHttpRequest;s.open(\"GET\",\"function\"==typeof t?t(i,o,a):t,!0),e.getType()==E.ARRAY_BUFFER&&(s.responseType=\"arraybuffer\"),s.onload=function(t){if(!s.status||s.status>=200&&s.status<300){var i,o=e.getType();o==E.JSON||o==E.TEXT?i=s.responseText:o==E.XML?(i=s.responseXML)||(i=(new DOMParser).parseFromString(s.responseText,\"application/xml\")):o==E.ARRAY_BUFFER&&(i=s.response),i?n.call(this,e.readFeatures(i,{featureProjection:a}),e.readProjection(i),e.getLastExtent()):r.call(this)}else r.call(this)}.bind(this),s.onerror=function(){r.call(this)}.bind(this),s.send()}}(t,e,function(t,e){\"function\"==typeof this.addFeatures&&this.addFeatures(t)},x.b)}function C(t,e){return[[-1/0,-1/0,1/0,1/0]]}var j=n(5),M=n(12),I={UNDEFINED:\"undefined\",LOADING:\"loading\",READY:\"ready\",ERROR:\"error\"};function F(t){return t?Array.isArray(t)?function(e){return t}:\"function\"==typeof t?t:function(e){return[t]}:null}var R=function(t){function e(e){t.call(this),this.projection_=Object(M.get)(e.projection),this.attributions_=F(e.attributions),this.attributionsCollapsible_=void 0===e.attributionsCollapsible||e.attributionsCollapsible,this.loading=!1,this.state_=void 0!==e.state?e.state:I.READY,this.wrapX_=void 0!==e.wrapX&&e.wrapX}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getAttributions=function(){return this.attributions_},e.prototype.getAttributionsCollapsible=function(){return this.attributionsCollapsible_},e.prototype.getProjection=function(){return this.projection_},e.prototype.getResolutions=function(){return Object(r.abstract)()},e.prototype.getState=function(){return this.state_},e.prototype.getWrapX=function(){return this.wrapX_},e.prototype.refresh=function(){this.changed()},e.prototype.setAttributions=function(t){this.attributions_=F(t),this.changed()},e.prototype.setState=function(t){this.state_=t,this.changed()},e}(g.a),S=\"addfeature\",P=\"changefeature\",T=\"clear\",G=\"removefeature\",w=n(19),X=n.n(w),Y=function(t){this.rbush_=X()(t,void 0),this.items_={}};Y.prototype.insert=function(t,e){var n={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3],value:e};this.rbush_.insert(n),this.items_[Object(r.getUid)(e)]=n},Y.prototype.load=function(t,e){for(var n=new Array(e.length),i=0,o=e.length;i<o;i++){var a=t[i],s=e[i],u={minX:a[0],minY:a[1],maxX:a[2],maxY:a[3],value:s};n[i]=u,this.items_[Object(r.getUid)(s)]=u}this.rbush_.load(n)},Y.prototype.remove=function(t){var e=Object(r.getUid)(t),n=this.items_[e];return delete this.items_[e],null!==this.rbush_.remove(n)},Y.prototype.update=function(t,e){var n=this.items_[Object(r.getUid)(e)],i=[n.minX,n.minY,n.maxX,n.maxY];Object(h.equals)(i,t)||(this.remove(e),this.insert(t,e))},Y.prototype.getAll=function(){return this.rbush_.all().map(function(t){return t.value})},Y.prototype.getInExtent=function(t){var e={minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]};return this.rbush_.search(e).map(function(t){return t.value})},Y.prototype.forEach=function(t,e){return this.forEach_(this.getAll(),t,e)},Y.prototype.forEachInExtent=function(t,e,n){return this.forEach_(this.getInExtent(t),e,n)},Y.prototype.forEach_=function(t,e,n){for(var r,i=0,o=t.length;i<o;i++)if(r=e.call(n,t[i]))return r;return r},Y.prototype.isEmpty=function(){return Object(j.d)(this.items_)},Y.prototype.clear=function(){this.rbush_.clear(),this.items_={}},Y.prototype.getExtent=function(t){var e=this.rbush_.toJSON();return Object(h.createOrUpdate)(e.minX,e.minY,e.maxX,e.maxY,t)},Y.prototype.concat=function(t){for(var e in this.rbush_.load(t.rbush_.all()),t.items_)this.items_[e]=t.items_[e]};var L=Y,A=function(t){function e(e,n){t.call(this,e),this.feature=n}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e}(y.a),N=function(t){function e(e){t.call(this,{attributions:e.attributions,wrapX:e.wrapX}),this.resolution=void 0,this.distance=void 0!==e.distance?e.distance:20,this.features=[],this.geometryFunction=e.geometryFunction||function(t){var e=t.getGeometry();return Object(i.a)(e.getType()==a.a.POINT,10),e},this.source=e.source,Object(u.a)(this.source,c.a.CHANGE,this.refresh,this)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.getDistance=function(){return this.distance},e.prototype.getSource=function(){return this.source},e.prototype.loadFeatures=function(t,e,n){this.source.loadFeatures(t,e,n),e!==this.resolution&&(this.clear(),this.resolution=e,this.cluster(),this.addFeatures(this.features))},e.prototype.setDistance=function(t){this.distance=t,this.refresh()},e.prototype.refresh=function(){this.clear(),this.cluster(),this.addFeatures(this.features),t.prototype.refresh.call(this)},e.prototype.cluster=function(){if(void 0!==this.resolution){this.features.length=0;for(var t=Object(h.createEmpty)(),e=this.distance*this.resolution,n=this.source.getFeatures(),i={},o=0,a=n.length;o<a;o++){var s=n[o];if(!(Object(r.getUid)(s)in i)){var u=this.geometryFunction(s);if(u){var c=u.getCoordinates();Object(h.createOrUpdateFromCoordinate)(c,t),Object(h.buffer)(t,e,t);var f=this.source.getFeaturesInExtent(t);f=f.filter(function(t){var e=Object(r.getUid)(t);return!(e in i)&&(i[e]=!0,!0)}),this.features.push(this.createCluster(f))}}}}},e.prototype.createCluster=function(t){for(var e=[0,0],n=t.length-1;n>=0;--n){var r=this.geometryFunction(t[n]);r?Object(s.add)(e,r.getCoordinates()):t.splice(n,1)}Object(s.scale)(e,1/t.length);var i=new o.default(new f.default(e));return i.set(\"features\",t),i},e}(function(t){function e(e){var n=e||{};t.call(this,{attributions:n.attributions,projection:void 0,state:I.READY,wrapX:void 0===n.wrapX||n.wrapX}),this.loader_=x.b,this.format_=n.format,this.overlaps_=null==n.overlaps||n.overlaps,this.url_=n.url,void 0!==n.loader?this.loader_=n.loader:void 0!==this.url_&&(Object(i.a)(this.format_,7),this.loader_=O(this.url_,this.format_)),this.strategy_=void 0!==n.strategy?n.strategy:C;var r,o,a=void 0===n.useSpatialIndex||n.useSpatialIndex;this.featuresRtree_=a?new L:null,this.loadedExtentsRtree_=new L,this.nullGeometryFeatures_={},this.idIndex_={},this.undefIdIndex_={},this.featureChangeKeys_={},this.featuresCollection_=null,Array.isArray(n.features)?o=n.features:n.features&&(o=(r=n.features).getArray()),a||void 0!==r||(r=new _(o)),void 0!==o&&this.addFeaturesInternal(o),void 0!==r&&this.bindFeaturesCollection_(r)}return t&&(e.__proto__=t),e.prototype=Object.create(t&&t.prototype),e.prototype.constructor=e,e.prototype.addFeature=function(t){this.addFeatureInternal(t),this.changed()},e.prototype.addFeatureInternal=function(t){var e=Object(r.getUid)(t);if(this.addToIndex_(e,t)){this.setupChangeEvents_(e,t);var n=t.getGeometry();if(n){var i=n.getExtent();this.featuresRtree_&&this.featuresRtree_.insert(i,t)}else this.nullGeometryFeatures_[e]=t;this.dispatchEvent(new A(S,t))}},e.prototype.setupChangeEvents_=function(t,e){this.featureChangeKeys_[t]=[Object(u.a)(e,c.a.CHANGE,this.handleFeatureChange_,this),Object(u.a)(e,b.a.PROPERTYCHANGE,this.handleFeatureChange_,this)]},e.prototype.addToIndex_=function(t,e){var n=!0,r=e.getId();return void 0!==r?r.toString()in this.idIndex_?n=!1:this.idIndex_[r.toString()]=e:(Object(i.a)(!(t in this.undefIdIndex_),30),this.undefIdIndex_[t]=e),n},e.prototype.addFeatures=function(t){this.addFeaturesInternal(t),this.changed()},e.prototype.addFeaturesInternal=function(t){for(var e=[],n=[],i=[],o=0,a=t.length;o<a;o++){var s=t[o],u=Object(r.getUid)(s);this.addToIndex_(u,s)&&n.push(s)}for(var c=0,h=n.length;c<h;c++){var f=n[c],l=Object(r.getUid)(f);this.setupChangeEvents_(l,f);var p=f.getGeometry();if(p){var d=p.getExtent();e.push(d),i.push(f)}else this.nullGeometryFeatures_[l]=f}this.featuresRtree_&&this.featuresRtree_.load(e,i);for(var g=0,y=n.length;g<y;g++)this.dispatchEvent(new A(S,n[g]))},e.prototype.bindFeaturesCollection_=function(t){var e=!1;Object(u.a)(this,S,function(n){e||(e=!0,t.push(n.feature),e=!1)}),Object(u.a)(this,G,function(n){e||(e=!0,t.remove(n.feature),e=!1)}),Object(u.a)(t,p,function(t){e||(e=!0,this.addFeature(t.element),e=!1)},this),Object(u.a)(t,d,function(t){e||(e=!0,this.removeFeature(t.element),e=!1)},this),this.featuresCollection_=t},e.prototype.clear=function(t){if(t){for(var e in this.featureChangeKeys_){this.featureChangeKeys_[e].forEach(u.e)}this.featuresCollection_||(this.featureChangeKeys_={},this.idIndex_={},this.undefIdIndex_={})}else if(this.featuresRtree_)for(var n in this.featuresRtree_.forEach(this.removeFeatureInternal,this),this.nullGeometryFeatures_)this.removeFeatureInternal(this.nullGeometryFeatures_[n]);this.featuresCollection_&&this.featuresCollection_.clear(),this.featuresRtree_&&this.featuresRtree_.clear(),this.loadedExtentsRtree_.clear(),this.nullGeometryFeatures_={};var r=new A(T);this.dispatchEvent(r),this.changed()},e.prototype.forEachFeature=function(t){if(this.featuresRtree_)return this.featuresRtree_.forEach(t);this.featuresCollection_&&this.featuresCollection_.forEach(t)},e.prototype.forEachFeatureAtCoordinateDirect=function(t,e){var n=[t[0],t[1],t[0],t[1]];return this.forEachFeatureInExtent(n,function(n){return n.getGeometry().intersectsCoordinate(t)?e(n):void 0})},e.prototype.forEachFeatureInExtent=function(t,e){if(this.featuresRtree_)return this.featuresRtree_.forEachInExtent(t,e);this.featuresCollection_&&this.featuresCollection_.forEach(e)},e.prototype.forEachFeatureIntersectingExtent=function(t,e){return this.forEachFeatureInExtent(t,function(n){if(n.getGeometry().intersectsExtent(t)){var r=e(n);if(r)return r}})},e.prototype.getFeaturesCollection=function(){return this.featuresCollection_},e.prototype.getFeatures=function(){var t;return this.featuresCollection_?t=this.featuresCollection_.getArray():this.featuresRtree_&&(t=this.featuresRtree_.getAll(),Object(j.d)(this.nullGeometryFeatures_)||function(t,e){for(var n=Array.isArray(e)?e:[e],r=n.length,i=0;i<r;i++)t[t.length]=n[i]}(t,Object(j.c)(this.nullGeometryFeatures_))),t},e.prototype.getFeaturesAtCoordinate=function(t){var e=[];return this.forEachFeatureAtCoordinateDirect(t,function(t){e.push(t)}),e},e.prototype.getFeaturesInExtent=function(t){return this.featuresRtree_.getInExtent(t)},e.prototype.getClosestFeatureToCoordinate=function(t,e){var n=t[0],r=t[1],i=null,o=[NaN,NaN],a=1/0,s=[-1/0,-1/0,1/0,1/0],u=e||x.a;return this.featuresRtree_.forEachInExtent(s,function(t){if(u(t)){var e=t.getGeometry(),c=a;if((a=e.closestPointXY(n,r,o,a))<c){i=t;var h=Math.sqrt(a);s[0]=n-h,s[1]=r-h,s[2]=n+h,s[3]=r+h}}}),i},e.prototype.getExtent=function(t){return this.featuresRtree_.getExtent(t)},e.prototype.getFeatureById=function(t){var e=this.idIndex_[t.toString()];return void 0!==e?e:null},e.prototype.getFormat=function(){return this.format_},e.prototype.getOverlaps=function(){return this.overlaps_},e.prototype.getUrl=function(){return this.url_},e.prototype.handleFeatureChange_=function(t){var e=t.target,n=Object(r.getUid)(e),i=e.getGeometry();if(i){var o=i.getExtent();n in this.nullGeometryFeatures_?(delete this.nullGeometryFeatures_[n],this.featuresRtree_&&this.featuresRtree_.insert(o,e)):this.featuresRtree_&&this.featuresRtree_.update(o,e)}else n in this.nullGeometryFeatures_||(this.featuresRtree_&&this.featuresRtree_.remove(e),this.nullGeometryFeatures_[n]=e);var a=e.getId();if(void 0!==a){var s=a.toString();n in this.undefIdIndex_?(delete this.undefIdIndex_[n],this.idIndex_[s]=e):this.idIndex_[s]!==e&&(this.removeFromIdIndex_(e),this.idIndex_[s]=e)}else n in this.undefIdIndex_||(this.removeFromIdIndex_(e),this.undefIdIndex_[n]=e);this.changed(),this.dispatchEvent(new A(P,e))},e.prototype.hasFeature=function(t){var e=t.getId();return void 0!==e?e in this.idIndex_:Object(r.getUid)(t)in this.undefIdIndex_},e.prototype.isEmpty=function(){return this.featuresRtree_.isEmpty()&&Object(j.d)(this.nullGeometryFeatures_)},e.prototype.loadFeatures=function(t,e,n){var r=this,i=this.loadedExtentsRtree_,o=this.strategy_(t,e);this.loading=!1;for(var a=function(t,a){var s=o[t];i.forEachInExtent(s,function(t){return Object(h.containsExtent)(t.extent,s)})||(r.loader_.call(r,s,e,n),i.insert(s,{extent:s.slice()}),r.loading=r.loader_!==x.b)},s=0,u=o.length;s<u;++s)a(s)},e.prototype.removeLoadedExtent=function(t){var e,n=this.loadedExtentsRtree_;n.forEachInExtent(t,function(n){if(Object(h.equals)(n.extent,t))return e=n,!0}),e&&n.remove(e)},e.prototype.removeFeature=function(t){var e=Object(r.getUid)(t);e in this.nullGeometryFeatures_?delete this.nullGeometryFeatures_[e]:this.featuresRtree_&&this.featuresRtree_.remove(t),this.removeFeatureInternal(t),this.changed()},e.prototype.removeFeatureInternal=function(t){var e=Object(r.getUid)(t);this.featureChangeKeys_[e].forEach(u.e),delete this.featureChangeKeys_[e];var n=t.getId();void 0!==n?delete this.idIndex_[n.toString()]:delete this.undefIdIndex_[e],this.dispatchEvent(new A(G,t))},e.prototype.removeFromIdIndex_=function(t){var e=!1;for(var n in this.idIndex_)if(this.idIndex_[n]===t){delete this.idIndex_[n],e=!0;break}return e},e.prototype.setLoader=function(t){this.loader_=t},e}(R));e.default=N}]).default});","extractedComments":[]}