<?xml version="1.0" encoding="UTF-8"?>
<project name="nunaliit2-js" default="default">
    <description>
		Useful scripts for Javascript library
    </description>
	
	<property name="javascript.dest.dir" location="./dummy_place"/>
	<property name="compressor.js" location="./target/tools/nunaliit2-javascript.jar"/>
	<property name="compressor.css" location="./target/tools/nunaliit2-css.jar"/>

    <!-- ================================= 
          target: default           
          
          Do nothing   
         ================================= -->
    <target name="default" description="description">
        
    </target>

    <!-- ================================= 
          target: javascript-copy      
          
          Compresses and copies Javascript Files to destination
         ================================= -->
    <target 
    	name="javascript-copy" 
    	description="Copy Nunaliit2 javascript library"
    	depends="-javascript-copy-conditions,-javascript-copy-error,library-compress"
    	if="javascript-dest-exists"
    	>
    	<!-- Copy -->
    	<mkdir dir="${javascript.dest.dir}/nunaliit2"/>
		<copy todir="${javascript.dest.dir}/nunaliit2">
			<fileset dir="./src/main/js/nunaliit2"/>
		</copy>
    </target>

    <target 
    	name="-javascript-copy-error" 
    	description="Report error"
    	depends="-javascript-copy-conditions"
    	unless="javascript-dest-exists"
    	>
    	<fail message="Destination directory does not exist: ${javascript.dest.dir}"/>
    </target>
	
	<target name="-javascript-copy-conditions">
		<available file="${javascript.dest.dir}" property="javascript-dest-exists"/>
	</target>

    <!-- ================================= 
          target: vendor-files-copy      
          
          Copies special files in vendor area (CouchDb application)
         ================================= -->
    <target 
    	name="vendor-files-copy" 
    	description="Copy Nunaliit2 vendor files"
    	depends="-vendor-files-copy-conditions,-vendor-files-copy-error"
    	if="vendor-files-dest-exists"
    	>
    	<!-- Copy -->
		<copy 
			file="./src/main/js/nunaliit2/n2.couchUtils.js" 
			tofile="${javascript.dest.dir}/n2.couchUtils.js"
			/>
		<copy 
			file="./src/main/js/nunaliit2/n2.couchTiles.js" 
			tofile="${javascript.dest.dir}/n2.couchTiles.js"
			/>
    </target>

    <target 
    	name="-vendor-files-copy-error" 
    	description="Report error"
    	depends="-vendor-files-copy-conditions"
    	unless="vendor-files-dest-exists"
    	>
    	<fail message="Destination directory does not exist: ${javascript.dest.dir}"/>
    </target>
	
	<target name="-vendor-files-copy-conditions">
		<available file="${javascript.dest.dir}" property="vendor-files-dest-exists"/>
	</target>

    <!-- ================================= 
          target: library-compress      
          
          Compresses library files to destination
         ================================= -->
    <target 
    	name="library-compress" 
    	description="Compresses library files"
    	depends="-library-compress-conditions,-library-compress-error"
    	if="compressor-tools-exists"
    	>
    	<!-- Perform compression -->
        <java 
        	jar="${compressor.js}"
        	fork="true"
        	>
          <arg line="--config-file ./compress/nunaliit2.cfg"/>
          <arg line="--license-file ./compress/license.txt"/>
          <arg line="--source-dir ./src/main/js/nunaliit2"/>
          <arg line="--output ./src/main/js/nunaliit2/nunaliit2.js"/>
          <arg line="--output-debug ./src/main/js/nunaliit2/nunaliit2-debug.js"/>
        </java>
        <java 
        	jar="${compressor.js}"
        	fork="true"
        	>
          <arg line="--config-file ./compress/nunaliit2-couch.cfg"/>
          <arg line="--license-file ./compress/license.txt"/>
          <arg line="--source-dir ./src/main/js/nunaliit2"/>
          <arg line="--output ./src/main/js/nunaliit2/nunaliit2-couch.js"/>
          <arg line="--output-debug ./src/main/js/nunaliit2/nunaliit2-couch-debug.js"/>
        </java>
        <java 
        	jar="${compressor.js}"
        	fork="true"
        	>
          <arg line="--config-file ./compress/nunaliit2-couch-mobile.cfg"/>
          <arg line="--license-file ./compress/license.txt"/>
          <arg line="--source-dir ./src/main/js/nunaliit2"/>
          <arg line="--output ./src/main/js/nunaliit2/nunaliit2-couch-mobile.js"/>
          <arg line="--output-debug ./src/main/js/nunaliit2/nunaliit2-couch-mobile-debug.js"/>
        </java>

    	<!--  Generate CSS libraries -->
        <java 
        	jar="${compressor.css}"
        	fork="true"
        	dir="."
        	>
          <arg line="--config-file ./compress/nunaliit2-css.cfg"/>
          <arg line="--license-file ./compress/license.txt"/>
          <arg line="--source-dir ./src/main/js/nunaliit2/css/basic"/>
          <arg line="--output ./src/main/js/nunaliit2/css/basic/nunaliit2.css"/>
        </java>
        <java 
        	jar="${compressor.css}"
        	fork="true"
        	dir="."
        	>
          <arg line="--config-file ./compress/nunaliit2-css-mobile.cfg"/>
          <arg line="--license-file ./compress/license.txt"/>
          <arg line="--source-dir ./src/main/js/nunaliit2/css/basic"/>
          <arg line="--output ./src/main/js/nunaliit2/css/basic/nunaliit2-mobile.css"/>
        </java>
    </target>

	<target 
    	name="-library-compress-error" 
    	description="Report error"
    	depends="-library-compress-conditions"
    	unless="compressor-tools-exists"
    	>
    	<fail message="Compressor tools not found: ${compressor.js} - ${compressor.css}"/>
    </target>
	
	<target name="-library-compress-conditions">
		<condition property="compressor-tools-exists">
			<and>
				<available file="${compressor.js}"/>
				<available file="${compressor.css}"/>
			</and>
		</condition>
	</target>
	
    <!-- ================================= 
          target: test           
          
          Create links for HTML testing 
         ================================= -->
    <target name="test" description="Build test links">
    	<delete dir="./src/main/js/js-external" failonerror="false"/>
        <exec dir="./src/main/webapp" executable="svn">
        	<arg line="export https://svn.gcrc.carleton.ca/nunaliit2/trunk/sdk/nunaliit2-js-external/src/main/js/js-external js-external"/>
        </exec>
    </target>
	

</project>
